{
	"id": "b0ac2fe07b2201793b83b56f0d33c0d2",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.17",
	"solcLongVersion": "0.8.17+commit.8df45f5f",
	"input": {
		"language": "Solidity",
		"sources": {
			"JaiHo/system-contracts/Staking.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.17;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(\n        address indexed previousOwner,\n        address indexed newOwner\n    );\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(\n            newOwner != address(0),\n            \"Ownable: new owner is the zero address\"\n        );\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n\ninterface InterfaceValidator {\n    enum Status {\n        // validator not exist, default status\n        NotExist,\n        // validator created\n        Created,\n        // anyone has staked for the validator\n        Staked,\n        // validator's staked coins < MinimalStakingCoin\n        Unstaked,\n        // validator is jailed by system(validator have to repropose)\n        Jailed\n    }\n    \n    function getAllValidatorInfo() external view returns (uint256 totalValidatorCount,uint256 totalStakedCoins,address[] memory,InterfaceValidator.Status[] memory,uint256[] memory,string[] memory,string[] memory);\n    function getStakingTime(address _staker, address _validator) external view returns(uint256);\n    function validatorSpecificInfo2(address validatorAddress, address user) external view returns(uint256 totalStakedCoins, InterfaceValidator.Status status, uint256 selfStakedCoins, uint256 masterVoters, uint256 stakers, address);\n}\n\ncontract Staking is Ownable {\n\n    InterfaceValidator public valDataContract = InterfaceValidator(0x0c4F6F3E5458AC81005EEF84521373904F18e36e);//update validator contract address while deploying\n\n    mapping(address => uint256) stakerInfo;\n\n    uint256 public  MinimalStakingCoin = 1 ether;\n\n    uint16 public MaxStakers = 3; \n\n    address[] public currentStakerSet;\n\n    // total stake of all stakers\n    uint256 public totalStake;\n\n    uint256 public totalPenalty;\n\n    uint64 public stakingLockPeriod = 7776000;\n\n    uint256 public penaltyPercentage = 1000;   //10%\n\n    mapping(address => uint) public rewardWithdrawalTime;\n\n    mapping(address => uint) public stakeTime;\n\n    mapping(address => uint) public valStakeTime;\n    //LastRewardtime\n    uint public lastRewardTime;\n    //lastRewardTime => reflectionPerent\n    mapping(uint => uint) public reflectionPercentSum;\n\n    event LogUnstake(\n        address indexed staker,\n        uint256 amount,\n        uint256 penalty,\n        uint256 time\n    ); \n    event LogDistributeReward(\n        uint256 reward,\n        uint256 time\n    );\n   \n    event LogStake(\n        address indexed staker,\n        uint256 staking,\n        uint256 time\n    );\n\n    event LogRemoveFromCurrentStaker(address indexed staker, uint256 time);\n\n    event withdrawStakingRewardEv(address indexed user,uint reward,uint timeStamp);\n\n    function stake()\n        public\n        payable\n        returns (bool)\n    {\n        address payable staker = payable(msg.sender);\n        uint256 staking = msg.value;\n\n        require(staking >= MinimalStakingCoin,\n            \"Staking coins not enough\");\n\n        require(\n            (currentStakerSet.length) < MaxStakers,\n            \"Can't stake slot is full\"\n        );\n        \n        // stake at first time to this contract\n        if (stakerInfo[staker] == 0) {\n            if(lastRewardTime == 0)\n            {\n                lastRewardTime = block.timestamp;\n            }\n            rewardWithdrawalTime[staker] = lastRewardTime;\n            stakeTime[staker] = lastRewardTime;\n        }\n        else\n        {\n            withdrawStakingReward(staker);\n        }\n\n        stakerInfo[staker] = stakerInfo[staker] + (staking);\n\n        if (!isActiveStaker(staker)) {\n                currentStakerSet.push(staker);\n        }\n\n        totalStake = totalStake + (staking);\n\n        emit LogStake(staker, staking, block.timestamp);\n        return true;\n    }\n\n    function unstake() external returns (bool){ \n\n        address payable staker = payable(tx.origin);\n\n        uint256 unstakeAmount = stakerInfo[staker];\n\n        require(unstakeAmount > 0, \"You don't have any stake\");\n\n        withdrawStakingReward(staker);\n        \n        stakerInfo[staker] = stakerInfo[staker] - (unstakeAmount);\n       \n        totalStake = totalStake - (unstakeAmount);\n\n        removeStakerFromCurrrentSet(staker);\n\n        uint256 remaining;\n        uint256 penalty;\n\n        if(block.timestamp <= (stakeTime[staker] + stakingLockPeriod) && penaltyPercentage > 0) {\n            penalty = ((unstakeAmount * penaltyPercentage) / 10000);\n            // send stake back to staker after deducting penalty\n            remaining = unstakeAmount - penalty;\n            totalPenalty = totalPenalty + penalty;\n            payable(staker).transfer(remaining);\n        } else {\n            // send stake back to staker\n            payable(staker).transfer(unstakeAmount);\n        }\n\n        rewardWithdrawalTime[staker] = 0 ;\n        stakeTime[staker] = 0 ;\n\n        emit LogUnstake(staker, unstakeAmount, penalty, block.timestamp);\n        return true;\n    }\n\n    function withdrawStakingReward(address staker) public returns(bool)\n    {\n        uint validPercent;\n        uint validValidatorPercent;\n        if(rewardWithdrawalTime[staker] > 0)\n        validPercent = reflectionPercentSum[lastRewardTime] - reflectionPercentSum[rewardWithdrawalTime[staker]];\n        validValidatorPercent = reflectionPercentSum[lastRewardTime] - reflectionPercentSum[valStakeTime[staker]];\n\n        (uint256 validatorsStakedCoins, , , , ,)  = valDataContract.validatorSpecificInfo2(staker,staker);\n\n        if((validPercent + validValidatorPercent) > 0)\n        {\n            if(rewardWithdrawalTime[staker] > 0)\n            rewardWithdrawalTime[staker] = lastRewardTime;\n            if(valDataContract.getStakingTime(staker,staker) > 0)\n            valStakeTime[staker] = lastRewardTime;\n            uint reward = stakerInfo[staker] * validPercent / 1000000000000000000;\n            uint valReward = validatorsStakedCoins * validValidatorPercent / 1000000000000000000;\n            payable(staker).transfer(reward + valReward);\n            emit withdrawStakingRewardEv(staker, (reward + valReward), block.timestamp);\n        }\n        return true;\n    }\n\n\n    // distributeReward distributes reward to all active stakers and validators\n    function distributeReward()\n        external\n        payable\n    {\n        uint256 reward = msg.value + totalPenalty;\n\n        (uint256 totalstakes,) = getTotalStakeOfActiveStakersExcept(address(0));\n\n        (, ,address[] memory highestValidatorsSet, , , ,) = valDataContract.getAllValidatorInfo();\n        uint256 totalValidators = highestValidatorsSet.length;\n        uint256 totalValidatorsStakedCoins;\n\n        for(uint8 i=0; i < totalValidators; i++){\n\n        (uint256 validatorsStakedCoins, , , , ,)  = valDataContract.validatorSpecificInfo2(highestValidatorsSet[i],highestValidatorsSet[i]);\n        totalValidatorsStakedCoins += validatorsStakedCoins;\n        }\n\n        require(totalstakes + totalValidatorsStakedCoins > 0, \"No stakers\");\n\n        uint lastRewardHold = reflectionPercentSum[lastRewardTime];\n        lastRewardTime = block.timestamp;\n        \n        reflectionPercentSum[lastRewardTime] = lastRewardHold + (reward * 1000000000000000000 / (totalstakes + totalValidatorsStakedCoins));\n        totalPenalty = 0;\n        \n\n        emit LogDistributeReward(reward, block.timestamp);\n    }\n\n    function removeStakerFromCurrrentSet(address staker) private {\n        for (\n            uint256 i = 0;\n            i < currentStakerSet.length;\n            i++\n        ) {\n            if (staker == currentStakerSet[i]) {\n                // remove it\n                if (i != currentStakerSet.length - 1) {\n                    currentStakerSet[i] = currentStakerSet[currentStakerSet\n                        .length - 1];\n                }\n\n                currentStakerSet.pop();\n                emit LogRemoveFromCurrentStaker(staker, block.timestamp);\n\n                break;\n            }\n        }\n    }\n\n    function checkforpenalty(address staker) external view returns(bool isPenalty)\n    {\n         if(block.timestamp <= (stakeTime[staker] + stakingLockPeriod) && penaltyPercentage > 0) {\n            isPenalty = true;\n         }\n    }\n\n    function getStakingInfo(address staker)\n        public\n        view\n        returns (\n            uint256\n        )\n    {\n        return (\n            stakerInfo[staker]\n        );\n    }\n\n    function getActiveStakers() public view returns (address[] memory) {\n        return currentStakerSet;\n    }\n\n    function getTotalStakeOfActiveStakers()\n        public\n        view\n        returns (uint256 total, uint256 len)\n    {\n        return getTotalStakeOfActiveStakersExcept(address(0));\n    }\n\n    function getTotalStakeOfActiveStakersExcept(address sta)\n        private\n        view\n        returns (uint256 total, uint256 len)\n    {\n        for (uint256 i = 0; i < currentStakerSet.length; i++) {\n            if (\n                sta != currentStakerSet[i]\n            ) {\n                total = total + (stakerInfo[currentStakerSet[i]]);\n                len++;\n            }\n        }\n\n        return (total, len);\n    }\n\n    function isActiveStaker(address who) public view returns (bool) {\n        for (uint256 i = 0; i < currentStakerSet.length; i++) {\n            if (currentStakerSet[i] == who) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    function viewStakeReward(address _staker) public view returns(uint256 valReward, uint256 stakerReward){\n            uint validPercent;\n            uint validValidatorPercent;\n            if(rewardWithdrawalTime[_staker] > 0)\n            validPercent = reflectionPercentSum[lastRewardTime] - reflectionPercentSum[rewardWithdrawalTime[_staker]];\n            validValidatorPercent = reflectionPercentSum[lastRewardTime] - reflectionPercentSum[valStakeTime[_staker]];\n\n            (uint256 validatorsStakedCoins, , , , ,)  = valDataContract.validatorSpecificInfo2(_staker,_staker);\n\n            if(validPercent + validValidatorPercent > 0)\n            {\n                valReward = validatorsStakedCoins * validValidatorPercent / 1000000000000000000;\n                stakerReward = stakerInfo[_staker] * validPercent / 1000000000000000000;\n                return (valReward, stakerReward) ;\n            }\n        return (0, 0);\n    }\n\n    function updateMaxStakers(\n         uint16 _MaxStakers) external onlyOwner\n    {\n      MaxStakers = _MaxStakers;\n    }\n    function updateMinimalStakingCoin(uint256 _MinimalStakingCoin\n        ) external onlyOwner\n    {\n      require(_MinimalStakingCoin > 0, 'Incorrect MinimalStakingCoin');\n      MinimalStakingCoin = _MinimalStakingCoin;\n    }\n    function updateStakingLockPeriod(uint64 _stakingLockPeriod) external onlyOwner\n    {\n      stakingLockPeriod = _stakingLockPeriod * 86400;\n    }\n\n    function updatePenaltyPercentage(uint64 _penaltyPercentage) external onlyOwner\n    {\n        require(_penaltyPercentage < 10000, \"Penalty cannot be 100%\");\n        penaltyPercentage = _penaltyPercentage;\n    }\n\n     /**\n        admin functions\n    */\n    function rescueCoins() external onlyOwner{        \n        payable(msg.sender).transfer(address(this).balance);\n    }\n\n    function mutateValStakeTimeMapping(address validator, uint value) external onlyValDataContract{\n        value == 0 ? valStakeTime[validator] = lastRewardTime : valStakeTime[validator] = 0;\n    }\n\n     function updateValidatorDataContract(address _validatorData) external onlyOwner\n    {\n        require(_validatorData != address(0), \"invalid contract\");\n         valDataContract = InterfaceValidator(_validatorData);\n    }\n\n    modifier onlyValDataContract() {\n        require(msg.sender == address(valDataContract), \"onlyValDataContract only\");\n        _;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"JaiHo/system-contracts/Staking.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"JaiHo/system-contracts/Staking.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"JaiHo/system-contracts/Staking.sol\":{\"keccak256\":\"0x76c70f3d79c68e3005420228d257956b725fc455d9b709c4d2d502793044ba8c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://570643c1e9de5d515cb413ceef450b9665b1f277b94589526070d5bd9f6a2754\",\"dweb:/ipfs/QmfCcsCPREDAer8qZSg9CE89MwrVCo3jJySrtikLLh6JEq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"InterfaceValidator": {
					"abi": [
						{
							"inputs": [],
							"name": "getAllValidatorInfo",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "totalValidatorCount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "totalStakedCoins",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "",
									"type": "address[]"
								},
								{
									"internalType": "enum InterfaceValidator.Status[]",
									"name": "",
									"type": "uint8[]"
								},
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								},
								{
									"internalType": "string[]",
									"name": "",
									"type": "string[]"
								},
								{
									"internalType": "string[]",
									"name": "",
									"type": "string[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_staker",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_validator",
									"type": "address"
								}
							],
							"name": "getStakingTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "validatorAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "validatorSpecificInfo2",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "totalStakedCoins",
									"type": "uint256"
								},
								{
									"internalType": "enum InterfaceValidator.Status",
									"name": "status",
									"type": "uint8"
								},
								{
									"internalType": "uint256",
									"name": "selfStakedCoins",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "masterVoters",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "stakers",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getAllValidatorInfo()": "3f8dc65a",
							"getStakingTime(address,address)": "d0744e3d",
							"validatorSpecificInfo2(address,address)": "64877981"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"getAllValidatorInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalValidatorCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalStakedCoins\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"},{\"internalType\":\"enum InterfaceValidator.Status[]\",\"name\":\"\",\"type\":\"uint8[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_staker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_validator\",\"type\":\"address\"}],\"name\":\"getStakingTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"validatorAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"validatorSpecificInfo2\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalStakedCoins\",\"type\":\"uint256\"},{\"internalType\":\"enum InterfaceValidator.Status\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"selfStakedCoins\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"masterVoters\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stakers\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"JaiHo/system-contracts/Staking.sol\":\"InterfaceValidator\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"JaiHo/system-contracts/Staking.sol\":{\"keccak256\":\"0x76c70f3d79c68e3005420228d257956b725fc455d9b709c4d2d502793044ba8c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://570643c1e9de5d515cb413ceef450b9665b1f277b94589526070d5bd9f6a2754\",\"dweb:/ipfs/QmfCcsCPREDAer8qZSg9CE89MwrVCo3jJySrtikLLh6JEq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"JaiHo/system-contracts/Staking.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"JaiHo/system-contracts/Staking.sol\":{\"keccak256\":\"0x76c70f3d79c68e3005420228d257956b725fc455d9b709c4d2d502793044ba8c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://570643c1e9de5d515cb413ceef450b9665b1f277b94589526070d5bd9f6a2754\",\"dweb:/ipfs/QmfCcsCPREDAer8qZSg9CE89MwrVCo3jJySrtikLLh6JEq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 26,
								"contract": "JaiHo/system-contracts/Staking.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Staking": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "reward",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "time",
									"type": "uint256"
								}
							],
							"name": "LogDistributeReward",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "staker",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "time",
									"type": "uint256"
								}
							],
							"name": "LogRemoveFromCurrentStaker",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "staker",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "staking",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "time",
									"type": "uint256"
								}
							],
							"name": "LogStake",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "staker",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "penalty",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "time",
									"type": "uint256"
								}
							],
							"name": "LogUnstake",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "reward",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timeStamp",
									"type": "uint256"
								}
							],
							"name": "withdrawStakingRewardEv",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "MaxStakers",
							"outputs": [
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MinimalStakingCoin",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "staker",
									"type": "address"
								}
							],
							"name": "checkforpenalty",
							"outputs": [
								{
									"internalType": "bool",
									"name": "isPenalty",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "currentStakerSet",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "distributeReward",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getActiveStakers",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "staker",
									"type": "address"
								}
							],
							"name": "getStakingInfo",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTotalStakeOfActiveStakers",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "total",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "len",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "who",
									"type": "address"
								}
							],
							"name": "isActiveStaker",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lastRewardTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "validator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "mutateValStakeTimeMapping",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "penaltyPercentage",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "reflectionPercentSum",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rescueCoins",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "rewardWithdrawalTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stake",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "stakeTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stakingLockPeriod",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "",
									"type": "uint64"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalPenalty",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalStake",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unstake",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "_MaxStakers",
									"type": "uint16"
								}
							],
							"name": "updateMaxStakers",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_MinimalStakingCoin",
									"type": "uint256"
								}
							],
							"name": "updateMinimalStakingCoin",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint64",
									"name": "_penaltyPercentage",
									"type": "uint64"
								}
							],
							"name": "updatePenaltyPercentage",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint64",
									"name": "_stakingLockPeriod",
									"type": "uint64"
								}
							],
							"name": "updateStakingLockPeriod",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_validatorData",
									"type": "address"
								}
							],
							"name": "updateValidatorDataContract",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "valDataContract",
							"outputs": [
								{
									"internalType": "contract InterfaceValidator",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "valStakeTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_staker",
									"type": "address"
								}
							],
							"name": "viewStakeReward",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "valReward",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "stakerReward",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "staker",
									"type": "address"
								}
							],
							"name": "withdrawStakingReward",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"JaiHo/system-contracts/Staking.sol\":4252:14667  contract Staking is Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"JaiHo/system-contracts/Staking.sol\":4287:4393  InterfaceValidator public valDataContract = InterfaceValidator(0x0c4F6F3E5458AC81005EEF84521373904F18e36e) */\n  0x01\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n    /* \"JaiHo/system-contracts/Staking.sol\":4350:4392  0x0c4F6F3E5458AC81005EEF84521373904F18e36e */\n  0x0c4f6f3e5458ac81005eef84521373904f18e36e\n    /* \"JaiHo/system-contracts/Staking.sol\":4287:4393  InterfaceValidator public valDataContract = InterfaceValidator(0x0c4F6F3E5458AC81005EEF84521373904F18e36e) */\n  or\n  swap1\n  sstore\n    /* \"JaiHo/system-contracts/Staking.sol\":4533:4540  1 ether */\n  0x0de0b6b3a7640000\n    /* \"JaiHo/system-contracts/Staking.sol\":4496:4540  uint256 public  MinimalStakingCoin = 1 ether */\n  0x03\n  swap1\n  dup2\n  sstore\n    /* \"JaiHo/system-contracts/Staking.sol\":4547:4575  uint16 public MaxStakers = 3 */\n  0x04\n  dup1\n  sload\n  not(0xffff)\n  and\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n    /* \"JaiHo/system-contracts/Staking.sol\":4723:4764  uint64 public stakingLockPeriod = 7776000 */\n  0x08\n  dup1\n  sload\n  not(sub(shl(0x40, 0x01), 0x01))\n  and\n    /* \"JaiHo/system-contracts/Staking.sol\":4757:4764  7776000 */\n  0x76a700\n    /* \"JaiHo/system-contracts/Staking.sol\":4723:4764  uint64 public stakingLockPeriod = 7776000 */\n  or\n  swap1\n  sstore\n    /* \"JaiHo/system-contracts/Staking.sol\":4806:4810  1000 */\n  0x03e8\n    /* \"JaiHo/system-contracts/Staking.sol\":4771:4810  uint256 public penaltyPercentage = 1000 */\n  0x09\n  sstore\n    /* \"JaiHo/system-contracts/Staking.sol\":4252:14667  contract Staking is Ownable {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"JaiHo/system-contracts/Staking.sol\":1590:1622  _transferOwnership(_msgSender()) */\n  tag_4\n    /* \"JaiHo/system-contracts/Staking.sol\":665:675  msg.sender */\n  caller\n    /* \"JaiHo/system-contracts/Staking.sol\":1590:1608  _transferOwnership */\n  tag_7\n    /* \"JaiHo/system-contracts/Staking.sol\":1590:1622  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_4:\n    /* \"JaiHo/system-contracts/Staking.sol\":4252:14667  contract Staking is Ownable {... */\n  jump(tag_8)\n    /* \"JaiHo/system-contracts/Staking.sol\":3121:3308  function _transferOwnership(address newOwner) internal virtual {... */\ntag_7:\n    /* \"JaiHo/system-contracts/Staking.sol\":3194:3210  address oldOwner */\n  0x00\n    /* \"JaiHo/system-contracts/Staking.sol\":3213:3219  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"JaiHo/system-contracts/Staking.sol\":3229:3246  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"JaiHo/system-contracts/Staking.sol\":3261:3301  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"JaiHo/system-contracts/Staking.sol\":3213:3219  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"JaiHo/system-contracts/Staking.sol\":3261:3301  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"JaiHo/system-contracts/Staking.sol\":3194:3210  address oldOwner */\n  swap1\n    /* \"JaiHo/system-contracts/Staking.sol\":3261:3301  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"JaiHo/system-contracts/Staking.sol\":3184:3308  {... */\n  pop\n    /* \"JaiHo/system-contracts/Staking.sol\":3121:3308  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"JaiHo/system-contracts/Staking.sol\":4252:14667  contract Staking is Ownable {... */\ntag_8:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"JaiHo/system-contracts/Staking.sol\":4252:14667  contract Staking is Ownable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x9fb82db9\n      gt\n      tag_35\n      jumpi\n      dup1\n      0xe0639364\n      gt\n      tag_36\n      jumpi\n      dup1\n      0xf2fde38b\n      gt\n      tag_37\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_30\n      jumpi\n      dup1\n      0xf3883538\n      eq\n      tag_31\n      jumpi\n      dup1\n      0xf67c4dfd\n      eq\n      tag_32\n      jumpi\n      dup1\n      0xf6b663c3\n      eq\n      tag_33\n      jumpi\n      dup1\n      0xfe32f55e\n      eq\n      tag_34\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_37:\n      dup1\n      0xe0639364\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xe6af61c8\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xe75bcb96\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xee7cb288\n      eq\n      tag_29\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_36:\n      dup1\n      0xbddd6de4\n      gt\n      tag_38\n      jumpi\n      dup1\n      0xbddd6de4\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xbe645692\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xc7907f54\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xcc001f16\n      eq\n      tag_25\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_38:\n      dup1\n      0x9fb82db9\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xa9e30ccf\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xaa4704f3\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xb0806108\n      eq\n      tag_21\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      dup1\n      0x68015791\n      gt\n      tag_39\n      jumpi\n      dup1\n      0x8b0e9f3f\n      gt\n      tag_40\n      jumpi\n      dup1\n      0x8b0e9f3f\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x8f73c5ae\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x9231cf74\n      eq\n      tag_17\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_40:\n      dup1\n      0x68015791\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x72d30a70\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x82cb1c18\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_39:\n      dup1\n      0x3a4b66f1\n      gt\n      tag_41\n      jumpi\n      dup1\n      0x3a4b66f1\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x41f349b5\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x5fa34ebd\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x6285b5a2\n      eq\n      tag_9\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_41:\n      dup1\n      0x062b6139\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x15908d51\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x2170e472\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x2def6620\n      eq\n      tag_5\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"JaiHo/system-contracts/Staking.sol\":13725:13934  function updatePenaltyPercentage(uint64 _penaltyPercentage) external onlyOwner... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_42\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_42:\n      pop\n      tag_43\n      tag_44\n      calldatasize\n      0x04\n      tag_45\n      jump\t// in\n    tag_44:\n      tag_46\n      jump\t// in\n    tag_43:\n      stop\n        /* \"JaiHo/system-contracts/Staking.sol\":4771:4810  uint256 public penaltyPercentage = 1000 */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_47\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_47:\n      pop\n      tag_48\n      sload(0x09)\n      dup2\n      jump\n    tag_48:\n      mload(0x40)\n        /* \"#utility.yul\":449:474   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":437:439   */\n      0x20\n        /* \"#utility.yul\":422:440   */\n      add\n        /* \"JaiHo/system-contracts/Staking.sol\":4771:4810  uint256 public penaltyPercentage = 1000 */\n    tag_50:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"JaiHo/system-contracts/Staking.sol\":4884:4925  mapping(address => uint) public stakeTime */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_52\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_52:\n      pop\n      tag_48\n      tag_54\n      calldatasize\n      0x04\n      tag_55\n      jump\t// in\n    tag_54:\n      mstore(0x20, 0x0b)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n        /* \"JaiHo/system-contracts/Staking.sol\":6694:7865  function unstake() external returns (bool){ ... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_58\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_58:\n      pop\n      tag_59\n      tag_60\n      jump\t// in\n    tag_59:\n      mload(0x40)\n        /* \"#utility.yul\":1038:1052   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1031:1053   */\n      iszero\n        /* \"#utility.yul\":1013:1054   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1001:1003   */\n      0x20\n        /* \"#utility.yul\":986:1004   */\n      add\n        /* \"JaiHo/system-contracts/Staking.sol\":6694:7865  function unstake() external returns (bool){ ... */\n      tag_50\n        /* \"#utility.yul\":873:1060   */\n      jump\n        /* \"JaiHo/system-contracts/Staking.sol\":5619:6688  function stake()... */\n    tag_6:\n      tag_59\n      tag_64\n      jump\t// in\n        /* \"JaiHo/system-contracts/Staking.sol\":10861:11091  function checkforpenalty(address staker) external view returns(bool isPenalty)... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_66\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_66:\n      pop\n      tag_59\n      tag_68\n      calldatasize\n      0x04\n      tag_55\n      jump\t// in\n    tag_68:\n      tag_69\n      jump\t// in\n        /* \"JaiHo/system-contracts/Staking.sol\":5076:5125  mapping(uint => uint) public reflectionPercentSum */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_71\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_71:\n      pop\n      tag_48\n      tag_73\n      calldatasize\n      0x04\n      tag_74\n      jump\t// in\n    tag_73:\n      mstore(0x20, 0x0e)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n        /* \"JaiHo/system-contracts/Staking.sol\":14304:14525  function updateValidatorDataContract(address _validatorData) external onlyOwner... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_77\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_77:\n      pop\n      tag_43\n      tag_79\n      calldatasize\n      0x04\n      tag_55\n      jump\t// in\n    tag_79:\n      tag_80\n      jump\t// in\n        /* \"JaiHo/system-contracts/Staking.sol\":12027:12284  function isActiveStaker(address who) public view returns (bool) {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_81\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_81:\n      pop\n      tag_59\n      tag_83\n      calldatasize\n      0x04\n      tag_55\n      jump\t// in\n    tag_83:\n      tag_84\n      jump\t// in\n        /* \"JaiHo/system-contracts/Staking.sol\":2485:2586  function renounceOwnership() public virtual onlyOwner {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_86\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_86:\n      pop\n      tag_43\n      tag_88\n      jump\t// in\n        /* \"JaiHo/system-contracts/Staking.sol\":7871:9045  function withdrawStakingReward(address staker) public returns(bool)... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_89\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_89:\n      pop\n      tag_59\n      tag_91\n      calldatasize\n      0x04\n      tag_55\n      jump\t// in\n    tag_91:\n      tag_92\n      jump\t// in\n        /* \"JaiHo/system-contracts/Staking.sol\":4932:4976  mapping(address => uint) public valStakeTime */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_94\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_94:\n      pop\n      tag_48\n      tag_96\n      calldatasize\n      0x04\n      tag_55\n      jump\t// in\n    tag_96:\n      mstore(0x20, 0x0c)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n        /* \"JaiHo/system-contracts/Staking.sol\":4657:4682  uint256 public totalStake */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_99\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_99:\n      pop\n      tag_48\n      sload(0x06)\n      dup2\n      jump\n        /* \"JaiHo/system-contracts/Staking.sol\":1855:1940  function owner() public view virtual returns (address) {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_103\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_103:\n      pop\n        /* \"JaiHo/system-contracts/Staking.sol\":1901:1908  address */\n      0x00\n        /* \"JaiHo/system-contracts/Staking.sol\":1927:1933  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"JaiHo/system-contracts/Staking.sol\":1855:1940  function owner() public view virtual returns (address) {... */\n    tag_104:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1414:1446   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1396:1447   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1384:1386   */\n      0x20\n        /* \"#utility.yul\":1369:1387   */\n      add\n        /* \"JaiHo/system-contracts/Staking.sol\":1855:1940  function owner() public view virtual returns (address) {... */\n      tag_50\n        /* \"#utility.yul\":1250:1453   */\n      jump\n        /* \"JaiHo/system-contracts/Staking.sol\":9132:10242  function distributeReward()... */\n    tag_16:\n      tag_43\n      tag_109\n      jump\t// in\n        /* \"JaiHo/system-contracts/Staking.sol\":5003:5029  uint public lastRewardTime */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_110\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_110:\n      pop\n      tag_48\n      sload(0x0d)\n      dup2\n      jump\n        /* \"JaiHo/system-contracts/Staking.sol\":11289:11396  function getActiveStakers() public view returns (address[] memory) {... */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_114\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_114:\n      pop\n      tag_115\n      tag_116\n      jump\t// in\n    tag_115:\n      mload(0x40)\n      tag_50\n      swap2\n      swap1\n      tag_118\n      jump\t// in\n        /* \"JaiHo/system-contracts/Staking.sol\":14103:14297  function mutateValStakeTimeMapping(address validator, uint value) external onlyValDataContract{... */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_119\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_119:\n      pop\n      tag_43\n      tag_121\n      calldatasize\n      0x04\n      tag_122\n      jump\t// in\n    tag_121:\n      tag_123\n      jump\t// in\n        /* \"JaiHo/system-contracts/Staking.sol\":11097:11283  function getStakingInfo(address staker)... */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_124\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_124:\n      pop\n      tag_48\n      tag_126\n      calldatasize\n      0x04\n      tag_55\n      jump\t// in\n    tag_126:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"JaiHo/system-contracts/Staking.sol\":11248:11266  stakerInfo[staker] */\n      and\n        /* \"JaiHo/system-contracts/Staking.sol\":11195:11202  uint256 */\n      0x00\n        /* \"JaiHo/system-contracts/Staking.sol\":11248:11266  stakerInfo[staker] */\n      swap1\n      dup2\n      mstore\n        /* \"JaiHo/system-contracts/Staking.sol\":11248:11258  stakerInfo */\n      0x02\n        /* \"JaiHo/system-contracts/Staking.sol\":11248:11266  stakerInfo[staker] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"JaiHo/system-contracts/Staking.sol\":11097:11283  function getStakingInfo(address staker)... */\n      jump\n        /* \"JaiHo/system-contracts/Staking.sol\":13980:14097  function rescueCoins() external onlyOwner{        ... */\n    tag_21:\n      callvalue\n      dup1\n      iszero\n      tag_129\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_129:\n      pop\n      tag_43\n      tag_131\n      jump\t// in\n        /* \"JaiHo/system-contracts/Staking.sol\":4547:4575  uint16 public MaxStakers = 3 */\n    tag_22:\n      callvalue\n      dup1\n      iszero\n      tag_132\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_132:\n      pop\n      sload(0x04)\n      tag_133\n      swap1\n      0xffff\n      and\n      dup2\n      jump\n    tag_133:\n      mload(0x40)\n        /* \"#utility.yul\":2615:2621   */\n      0xffff\n        /* \"#utility.yul\":2603:2622   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2585:2623   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2573:2575   */\n      0x20\n        /* \"#utility.yul\":2558:2576   */\n      add\n        /* \"JaiHo/system-contracts/Staking.sol\":4547:4575  uint16 public MaxStakers = 3 */\n      tag_50\n        /* \"#utility.yul\":2441:2629   */\n      jump\n        /* \"JaiHo/system-contracts/Staking.sol\":4496:4540  uint256 public  MinimalStakingCoin = 1 ether */\n    tag_23:\n      callvalue\n      dup1\n      iszero\n      tag_137\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_137:\n      pop\n      tag_48\n      sload(0x03)\n      dup2\n      jump\n        /* \"JaiHo/system-contracts/Staking.sol\":13225:13343  function updateMaxStakers(... */\n    tag_24:\n      callvalue\n      dup1\n      iszero\n      tag_141\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_141:\n      pop\n      tag_43\n      tag_143\n      calldatasize\n      0x04\n      tag_144\n      jump\t// in\n    tag_143:\n      tag_145\n      jump\t// in\n        /* \"JaiHo/system-contracts/Staking.sol\":4825:4877  mapping(address => uint) public rewardWithdrawalTime */\n    tag_25:\n      callvalue\n      dup1\n      iszero\n      tag_146\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_146:\n      pop\n      tag_48\n      tag_148\n      calldatasize\n      0x04\n      tag_55\n      jump\t// in\n    tag_148:\n      mstore(0x20, 0x0a)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n        /* \"JaiHo/system-contracts/Staking.sol\":4723:4764  uint64 public stakingLockPeriod = 7776000 */\n    tag_26:\n      callvalue\n      dup1\n      iszero\n      tag_151\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_151:\n      pop\n      sload(0x08)\n      tag_152\n      swap1\n      sub(shl(0x40, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_152:\n      mload(0x40)\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":3073:3104   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":3055:3105   */\n      dup2\n      mstore\n        /* \"#utility.yul\":3043:3045   */\n      0x20\n        /* \"#utility.yul\":3028:3046   */\n      add\n        /* \"JaiHo/system-contracts/Staking.sol\":4723:4764  uint64 public stakingLockPeriod = 7776000 */\n      tag_50\n        /* \"#utility.yul\":2911:3111   */\n      jump\n        /* \"JaiHo/system-contracts/Staking.sol\":4689:4716  uint256 public totalPenalty */\n    tag_27:\n      callvalue\n      dup1\n      iszero\n      tag_156\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_156:\n      pop\n      tag_48\n      sload(0x07)\n      dup2\n      jump\n        /* \"JaiHo/system-contracts/Staking.sol\":11402:11589  function getTotalStakeOfActiveStakers()... */\n    tag_28:\n      callvalue\n      dup1\n      iszero\n      tag_160\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_160:\n      pop\n      tag_161\n      tag_162\n      jump\t// in\n    tag_161:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":3290:3315   */\n      swap3\n      dup4\n      mstore\n        /* \"#utility.yul\":3346:3348   */\n      0x20\n        /* \"#utility.yul\":3331:3349   */\n      dup4\n      add\n        /* \"#utility.yul\":3324:3358   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":3263:3281   */\n      add\n        /* \"JaiHo/system-contracts/Staking.sol\":11402:11589  function getTotalStakeOfActiveStakers()... */\n      tag_50\n        /* \"#utility.yul\":3116:3364   */\n      jump\n        /* \"JaiHo/system-contracts/Staking.sol\":13575:13719  function updateStakingLockPeriod(uint64 _stakingLockPeriod) external onlyOwner... */\n    tag_29:\n      callvalue\n      dup1\n      iszero\n      tag_165\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_165:\n      pop\n      tag_43\n      tag_167\n      calldatasize\n      0x04\n      tag_45\n      jump\t// in\n    tag_167:\n      tag_168\n      jump\t// in\n        /* \"JaiHo/system-contracts/Staking.sol\":2735:2967  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_30:\n      callvalue\n      dup1\n      iszero\n      tag_169\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_169:\n      pop\n      tag_43\n      tag_171\n      calldatasize\n      0x04\n      tag_55\n      jump\t// in\n    tag_171:\n      tag_172\n      jump\t// in\n        /* \"JaiHo/system-contracts/Staking.sol\":12290:13219  function viewStakeReward(address _staker) public view returns(uint256 valReward, uint256 stakerReward){... */\n    tag_31:\n      callvalue\n      dup1\n      iszero\n      tag_173\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_173:\n      pop\n      tag_161\n      tag_175\n      calldatasize\n      0x04\n      tag_55\n      jump\t// in\n    tag_175:\n      tag_176\n      jump\t// in\n        /* \"JaiHo/system-contracts/Staking.sol\":13348:13570  function updateMinimalStakingCoin(uint256 _MinimalStakingCoin... */\n    tag_32:\n      callvalue\n      dup1\n      iszero\n      tag_178\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_178:\n      pop\n      tag_43\n      tag_180\n      calldatasize\n      0x04\n      tag_74\n      jump\t// in\n    tag_180:\n      tag_181\n      jump\t// in\n        /* \"JaiHo/system-contracts/Staking.sol\":4583:4616  address[] public currentStakerSet */\n    tag_33:\n      callvalue\n      dup1\n      iszero\n      tag_182\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_182:\n      pop\n      tag_104\n      tag_184\n      calldatasize\n      0x04\n      tag_74\n      jump\t// in\n    tag_184:\n      tag_185\n      jump\t// in\n        /* \"JaiHo/system-contracts/Staking.sol\":4287:4393  InterfaceValidator public valDataContract = InterfaceValidator(0x0c4F6F3E5458AC81005EEF84521373904F18e36e) */\n    tag_34:\n      callvalue\n      dup1\n      iszero\n      tag_187\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_187:\n      pop\n      sload(0x01)\n      tag_104\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"JaiHo/system-contracts/Staking.sol\":13725:13934  function updatePenaltyPercentage(uint64 _penaltyPercentage) external onlyOwner... */\n    tag_46:\n        /* \"JaiHo/system-contracts/Staking.sol\":1748:1761  _checkOwner() */\n      tag_193\n        /* \"JaiHo/system-contracts/Staking.sol\":1748:1759  _checkOwner */\n      tag_194\n        /* \"JaiHo/system-contracts/Staking.sol\":1748:1761  _checkOwner() */\n      jump\t// in\n    tag_193:\n        /* \"JaiHo/system-contracts/Staking.sol\":13847:13852  10000 */\n      0x2710\n        /* \"JaiHo/system-contracts/Staking.sol\":13826:13844  _penaltyPercentage */\n      dup2\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"JaiHo/system-contracts/Staking.sol\":13826:13852  _penaltyPercentage < 10000 */\n      and\n      lt\n        /* \"JaiHo/system-contracts/Staking.sol\":13818:13879  require(_penaltyPercentage < 10000, \"Penalty cannot be 100%\") */\n      tag_196\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3805:3807   */\n      0x20\n        /* \"JaiHo/system-contracts/Staking.sol\":13818:13879  require(_penaltyPercentage < 10000, \"Penalty cannot be 100%\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3787:3808   */\n      mstore\n        /* \"#utility.yul\":3844:3846   */\n      0x16\n        /* \"#utility.yul\":3824:3842   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3817:3847   */\n      mstore\n      shl(0x50, 0x50656e616c74792063616e6e6f742062652031303025)\n        /* \"#utility.yul\":3863:3881   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3856:3908   */\n      mstore\n        /* \"#utility.yul\":3925:3943   */\n      0x64\n      add\n        /* \"JaiHo/system-contracts/Staking.sol\":13818:13879  require(_penaltyPercentage < 10000, \"Penalty cannot be 100%\") */\n    tag_197:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_196:\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"JaiHo/system-contracts/Staking.sol\":13889:13927  penaltyPercentage = _penaltyPercentage */\n      and\n        /* \"JaiHo/system-contracts/Staking.sol\":13889:13906  penaltyPercentage */\n      0x09\n        /* \"JaiHo/system-contracts/Staking.sol\":13889:13927  penaltyPercentage = _penaltyPercentage */\n      sstore\n        /* \"JaiHo/system-contracts/Staking.sol\":13725:13934  function updatePenaltyPercentage(uint64 _penaltyPercentage) external onlyOwner... */\n      jump\t// out\n        /* \"JaiHo/system-contracts/Staking.sol\":6694:7865  function unstake() external returns (bool){ ... */\n    tag_60:\n        /* \"JaiHo/system-contracts/Staking.sol\":6781:6790  tx.origin */\n      origin\n        /* \"JaiHo/system-contracts/Staking.sol\":6731:6735  bool */\n      0x00\n        /* \"JaiHo/system-contracts/Staking.sol\":6826:6844  stakerInfo[staker] */\n      dup2\n      dup2\n      mstore\n        /* \"JaiHo/system-contracts/Staking.sol\":6826:6836  stakerInfo */\n      0x02\n        /* \"JaiHo/system-contracts/Staking.sol\":6826:6844  stakerInfo[staker] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"JaiHo/system-contracts/Staking.sol\":6731:6735  bool */\n      swap1\n      swap2\n        /* \"JaiHo/system-contracts/Staking.sol\":6781:6790  tx.origin */\n      swap1\n        /* \"JaiHo/system-contracts/Staking.sol\":6863:6880  unstakeAmount > 0 */\n      dup1\n        /* \"JaiHo/system-contracts/Staking.sol\":6855:6909  require(unstakeAmount > 0, \"You don't have any stake\") */\n      tag_200\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4156:4158   */\n      0x20\n        /* \"JaiHo/system-contracts/Staking.sol\":6855:6909  require(unstakeAmount > 0, \"You don't have any stake\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4138:4159   */\n      mstore\n        /* \"#utility.yul\":4195:4197   */\n      0x18\n        /* \"#utility.yul\":4175:4193   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4168:4198   */\n      mstore\n        /* \"#utility.yul\":4234:4260   */\n      0x596f7520646f6e2774206861766520616e79207374616b650000000000000000\n        /* \"#utility.yul\":4214:4232   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4207:4261   */\n      mstore\n        /* \"#utility.yul\":4278:4296   */\n      0x64\n      add\n        /* \"JaiHo/system-contracts/Staking.sol\":6855:6909  require(unstakeAmount > 0, \"You don't have any stake\") */\n      tag_197\n        /* \"#utility.yul\":3954:4302   */\n      jump\n        /* \"JaiHo/system-contracts/Staking.sol\":6855:6909  require(unstakeAmount > 0, \"You don't have any stake\") */\n    tag_200:\n        /* \"JaiHo/system-contracts/Staking.sol\":6920:6949  withdrawStakingReward(staker) */\n      tag_203\n        /* \"JaiHo/system-contracts/Staking.sol\":6942:6948  staker */\n      dup3\n        /* \"JaiHo/system-contracts/Staking.sol\":6920:6941  withdrawStakingReward */\n      tag_92\n        /* \"JaiHo/system-contracts/Staking.sol\":6920:6949  withdrawStakingReward(staker) */\n      jump\t// in\n    tag_203:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"JaiHo/system-contracts/Staking.sol\":6989:7007  stakerInfo[staker] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"JaiHo/system-contracts/Staking.sol\":6989:6999  stakerInfo */\n      0x02\n        /* \"JaiHo/system-contracts/Staking.sol\":6989:7007  stakerInfo[staker] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"JaiHo/system-contracts/Staking.sol\":6989:7025  stakerInfo[staker] - (unstakeAmount) */\n      tag_204\n      swap1\n        /* \"JaiHo/system-contracts/Staking.sol\":7011:7024  unstakeAmount */\n      dup3\n      swap1\n        /* \"JaiHo/system-contracts/Staking.sol\":6989:7025  stakerInfo[staker] - (unstakeAmount) */\n      tag_205\n      jump\t// in\n    tag_204:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"JaiHo/system-contracts/Staking.sol\":6968:6986  stakerInfo[staker] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"JaiHo/system-contracts/Staking.sol\":6968:6978  stakerInfo */\n      0x02\n        /* \"JaiHo/system-contracts/Staking.sol\":6968:6986  stakerInfo[staker] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"JaiHo/system-contracts/Staking.sol\":6968:7025  stakerInfo[staker] = stakerInfo[staker] - (unstakeAmount) */\n      sstore\n        /* \"JaiHo/system-contracts/Staking.sol\":7056:7066  totalStake */\n      sload(0x06)\n        /* \"JaiHo/system-contracts/Staking.sol\":7056:7084  totalStake - (unstakeAmount) */\n      tag_206\n      swap1\n        /* \"JaiHo/system-contracts/Staking.sol\":7070:7083  unstakeAmount */\n      dup3\n      swap1\n        /* \"JaiHo/system-contracts/Staking.sol\":7056:7084  totalStake - (unstakeAmount) */\n      tag_205\n      jump\t// in\n    tag_206:\n        /* \"JaiHo/system-contracts/Staking.sol\":7043:7053  totalStake */\n      0x06\n        /* \"JaiHo/system-contracts/Staking.sol\":7043:7084  totalStake = totalStake - (unstakeAmount) */\n      sstore\n        /* \"JaiHo/system-contracts/Staking.sol\":7095:7130  removeStakerFromCurrrentSet(staker) */\n      tag_207\n        /* \"JaiHo/system-contracts/Staking.sol\":7123:7129  staker */\n      dup3\n        /* \"JaiHo/system-contracts/Staking.sol\":7095:7122  removeStakerFromCurrrentSet */\n      tag_208\n        /* \"JaiHo/system-contracts/Staking.sol\":7095:7130  removeStakerFromCurrrentSet(staker) */\n      jump\t// in\n    tag_207:\n        /* \"JaiHo/system-contracts/Staking.sol\":7237:7254  stakingLockPeriod */\n      sload(0x08)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"JaiHo/system-contracts/Staking.sol\":7217:7234  stakeTime[staker] */\n      dup4\n      and\n        /* \"JaiHo/system-contracts/Staking.sol\":7141:7158  uint256 remaining */\n      0x00\n        /* \"JaiHo/system-contracts/Staking.sol\":7217:7234  stakeTime[staker] */\n      swap1\n      dup2\n      mstore\n        /* \"JaiHo/system-contracts/Staking.sol\":7217:7226  stakeTime */\n      0x0b\n        /* \"JaiHo/system-contracts/Staking.sol\":7217:7234  stakeTime[staker] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"JaiHo/system-contracts/Staking.sol\":7141:7158  uint256 remaining */\n      swap1\n      swap2\n      dup3\n      swap2\n        /* \"JaiHo/system-contracts/Staking.sol\":7217:7254  stakeTime[staker] + stakingLockPeriod */\n      tag_209\n      swap2\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"JaiHo/system-contracts/Staking.sol\":7237:7254  stakingLockPeriod */\n      and\n      swap1\n        /* \"JaiHo/system-contracts/Staking.sol\":7217:7254  stakeTime[staker] + stakingLockPeriod */\n      tag_210\n      jump\t// in\n    tag_209:\n        /* \"JaiHo/system-contracts/Staking.sol\":7197:7212  block.timestamp */\n      timestamp\n        /* \"JaiHo/system-contracts/Staking.sol\":7197:7255  block.timestamp <= (stakeTime[staker] + stakingLockPeriod) */\n      gt\n      iszero\n        /* \"JaiHo/system-contracts/Staking.sol\":7197:7280  block.timestamp <= (stakeTime[staker] + stakingLockPeriod) && penaltyPercentage > 0 */\n      dup1\n      iszero\n      tag_211\n      jumpi\n      pop\n        /* \"JaiHo/system-contracts/Staking.sol\":7279:7280  0 */\n      0x00\n        /* \"JaiHo/system-contracts/Staking.sol\":7259:7276  penaltyPercentage */\n      sload(0x09)\n        /* \"JaiHo/system-contracts/Staking.sol\":7259:7280  penaltyPercentage > 0 */\n      gt\n        /* \"JaiHo/system-contracts/Staking.sol\":7197:7280  block.timestamp <= (stakeTime[staker] + stakingLockPeriod) && penaltyPercentage > 0 */\n    tag_211:\n        /* \"JaiHo/system-contracts/Staking.sol\":7194:7687  if(block.timestamp <= (stakeTime[staker] + stakingLockPeriod) && penaltyPercentage > 0) {... */\n      iszero\n      tag_212\n      jumpi\n        /* \"JaiHo/system-contracts/Staking.sol\":7345:7350  10000 */\n      0x2710\n        /* \"JaiHo/system-contracts/Staking.sol\":7324:7341  penaltyPercentage */\n      sload(0x09)\n        /* \"JaiHo/system-contracts/Staking.sol\":7308:7321  unstakeAmount */\n      dup5\n        /* \"JaiHo/system-contracts/Staking.sol\":7308:7341  unstakeAmount * penaltyPercentage */\n      tag_213\n      swap2\n      swap1\n      tag_214\n      jump\t// in\n    tag_213:\n        /* \"JaiHo/system-contracts/Staking.sol\":7307:7350  (unstakeAmount * penaltyPercentage) / 10000 */\n      tag_215\n      swap2\n      swap1\n      tag_216\n      jump\t// in\n    tag_215:\n        /* \"JaiHo/system-contracts/Staking.sol\":7296:7351  penalty = ((unstakeAmount * penaltyPercentage) / 10000) */\n      swap1\n      pop\n        /* \"JaiHo/system-contracts/Staking.sol\":7442:7465  unstakeAmount - penalty */\n      tag_217\n        /* \"JaiHo/system-contracts/Staking.sol\":7296:7351  penalty = ((unstakeAmount * penaltyPercentage) / 10000) */\n      dup2\n        /* \"JaiHo/system-contracts/Staking.sol\":7442:7455  unstakeAmount */\n      dup5\n        /* \"JaiHo/system-contracts/Staking.sol\":7442:7465  unstakeAmount - penalty */\n      tag_205\n      jump\t// in\n    tag_217:\n        /* \"JaiHo/system-contracts/Staking.sol\":7430:7465  remaining = unstakeAmount - penalty */\n      swap2\n      pop\n        /* \"JaiHo/system-contracts/Staking.sol\":7509:7516  penalty */\n      dup1\n        /* \"JaiHo/system-contracts/Staking.sol\":7494:7506  totalPenalty */\n      sload(0x07)\n        /* \"JaiHo/system-contracts/Staking.sol\":7494:7516  totalPenalty + penalty */\n      tag_218\n      swap2\n      swap1\n      tag_210\n      jump\t// in\n    tag_218:\n        /* \"JaiHo/system-contracts/Staking.sol\":7479:7491  totalPenalty */\n      0x07\n        /* \"JaiHo/system-contracts/Staking.sol\":7479:7516  totalPenalty = totalPenalty + penalty */\n      sstore\n        /* \"JaiHo/system-contracts/Staking.sol\":7530:7565  payable(staker).transfer(remaining) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"JaiHo/system-contracts/Staking.sol\":7530:7554  payable(staker).transfer */\n      dup6\n      and\n      swap1\n        /* \"JaiHo/system-contracts/Staking.sol\":7530:7565  payable(staker).transfer(remaining) */\n      dup4\n      iszero\n      0x08fc\n      mul\n      swap1\n        /* \"JaiHo/system-contracts/Staking.sol\":7555:7564  remaining */\n      dup5\n      swap1\n        /* \"JaiHo/system-contracts/Staking.sol\":7530:7565  payable(staker).transfer(remaining) */\n      0x00\n      dup2\n      dup2\n      dup2\n        /* \"JaiHo/system-contracts/Staking.sol\":7555:7564  remaining */\n      dup6\n        /* \"JaiHo/system-contracts/Staking.sol\":7530:7554  payable(staker).transfer */\n      dup9\n        /* \"JaiHo/system-contracts/Staking.sol\":7530:7565  payable(staker).transfer(remaining) */\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_220\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_220:\n      pop\n        /* \"JaiHo/system-contracts/Staking.sol\":7194:7687  if(block.timestamp <= (stakeTime[staker] + stakingLockPeriod) && penaltyPercentage > 0) {... */\n      jump(tag_221)\n    tag_212:\n        /* \"JaiHo/system-contracts/Staking.sol\":7637:7676  payable(staker).transfer(unstakeAmount) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"JaiHo/system-contracts/Staking.sol\":7637:7661  payable(staker).transfer */\n      dup6\n      and\n      swap1\n        /* \"JaiHo/system-contracts/Staking.sol\":7637:7676  payable(staker).transfer(unstakeAmount) */\n      dup5\n      iszero\n      0x08fc\n      mul\n      swap1\n        /* \"JaiHo/system-contracts/Staking.sol\":7662:7675  unstakeAmount */\n      dup6\n      swap1\n        /* \"JaiHo/system-contracts/Staking.sol\":7637:7676  payable(staker).transfer(unstakeAmount) */\n      0x00\n      dup2\n      dup2\n      dup2\n        /* \"JaiHo/system-contracts/Staking.sol\":7662:7675  unstakeAmount */\n      dup6\n        /* \"JaiHo/system-contracts/Staking.sol\":7637:7661  payable(staker).transfer */\n      dup9\n        /* \"JaiHo/system-contracts/Staking.sol\":7637:7676  payable(staker).transfer(unstakeAmount) */\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_223\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_223:\n      pop\n        /* \"JaiHo/system-contracts/Staking.sol\":7194:7687  if(block.timestamp <= (stakeTime[staker] + stakingLockPeriod) && penaltyPercentage > 0) {... */\n    tag_221:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"JaiHo/system-contracts/Staking.sol\":7697:7725  rewardWithdrawalTime[staker] */\n      dup5\n      and\n        /* \"JaiHo/system-contracts/Staking.sol\":7728:7729  0 */\n      0x00\n        /* \"JaiHo/system-contracts/Staking.sol\":7697:7725  rewardWithdrawalTime[staker] */\n      dup2\n      dup2\n      mstore\n        /* \"JaiHo/system-contracts/Staking.sol\":7697:7717  rewardWithdrawalTime */\n      0x0a\n        /* \"JaiHo/system-contracts/Staking.sol\":7697:7725  rewardWithdrawalTime[staker] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"JaiHo/system-contracts/Staking.sol\":7697:7729  rewardWithdrawalTime[staker] = 0 */\n      dup4\n      swap1\n      sstore\n        /* \"JaiHo/system-contracts/Staking.sol\":7740:7749  stakeTime */\n      0x0b\n        /* \"JaiHo/system-contracts/Staking.sol\":7740:7757  stakeTime[staker] */\n      dup3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"JaiHo/system-contracts/Staking.sol\":7740:7761  stakeTime[staker] = 0 */\n      swap3\n      swap1\n      swap3\n      sstore\n        /* \"JaiHo/system-contracts/Staking.sol\":7778:7837  LogUnstake(staker, unstakeAmount, penalty, block.timestamp) */\n      dup2\n      mload\n        /* \"#utility.yul\":5299:5324   */\n      dup7\n      dup2\n      mstore\n        /* \"#utility.yul\":5340:5358   */\n      swap1\n      dup2\n      add\n        /* \"#utility.yul\":5333:5367   */\n      dup5\n      swap1\n      mstore\n        /* \"JaiHo/system-contracts/Staking.sol\":7821:7836  block.timestamp */\n      timestamp\n        /* \"#utility.yul\":5383:5401   */\n      dup2\n      dup4\n      add\n        /* \"#utility.yul\":5376:5410   */\n      mstore\n        /* \"JaiHo/system-contracts/Staking.sol\":7778:7837  LogUnstake(staker, unstakeAmount, penalty, block.timestamp) */\n      swap1\n      mload\n      0x753014cc7945cb3c93016ecb5bc2a66e26d69971a934fcfe2a882794cb344827\n      swap2\n      dup2\n      swap1\n      sub\n        /* \"#utility.yul\":5287:5289   */\n      0x60\n        /* \"JaiHo/system-contracts/Staking.sol\":7778:7837  LogUnstake(staker, unstakeAmount, penalty, block.timestamp) */\n      add\n      swap1\n      log2\n        /* \"JaiHo/system-contracts/Staking.sol\":7854:7858  true */\n      0x01\n        /* \"JaiHo/system-contracts/Staking.sol\":7847:7858  return true */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"JaiHo/system-contracts/Staking.sol\":6694:7865  function unstake() external returns (bool){ ... */\n      swap1\n      jump\t// out\n        /* \"JaiHo/system-contracts/Staking.sol\":5619:6688  function stake()... */\n    tag_64:\n        /* \"JaiHo/system-contracts/Staking.sol\":5815:5833  MinimalStakingCoin */\n      sload(0x03)\n        /* \"JaiHo/system-contracts/Staking.sol\":5684:5688  bool */\n      0x00\n      swap1\n        /* \"JaiHo/system-contracts/Staking.sol\":5737:5747  msg.sender */\n      caller\n      swap1\n        /* \"JaiHo/system-contracts/Staking.sol\":5776:5785  msg.value */\n      callvalue\n      swap1\n        /* \"JaiHo/system-contracts/Staking.sol\":5804:5833  staking >= MinimalStakingCoin */\n      dup2\n      lt\n      iszero\n        /* \"JaiHo/system-contracts/Staking.sol\":5796:5874  require(staking >= MinimalStakingCoin,... */\n      tag_227\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5623:5625   */\n      0x20\n        /* \"JaiHo/system-contracts/Staking.sol\":5796:5874  require(staking >= MinimalStakingCoin,... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5605:5626   */\n      mstore\n        /* \"#utility.yul\":5662:5664   */\n      0x18\n        /* \"#utility.yul\":5642:5660   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5635:5665   */\n      mstore\n        /* \"#utility.yul\":5701:5727   */\n      0x5374616b696e6720636f696e73206e6f7420656e6f7567680000000000000000\n        /* \"#utility.yul\":5681:5699   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5674:5728   */\n      mstore\n        /* \"#utility.yul\":5745:5763   */\n      0x64\n      add\n        /* \"JaiHo/system-contracts/Staking.sol\":5796:5874  require(staking >= MinimalStakingCoin,... */\n      tag_197\n        /* \"#utility.yul\":5421:5769   */\n      jump\n        /* \"JaiHo/system-contracts/Staking.sol\":5796:5874  require(staking >= MinimalStakingCoin,... */\n    tag_227:\n        /* \"JaiHo/system-contracts/Staking.sol\":5934:5944  MaxStakers */\n      sload(0x04)\n        /* \"JaiHo/system-contracts/Staking.sol\":5907:5923  currentStakerSet */\n      0x05\n        /* \"JaiHo/system-contracts/Staking.sol\":5907:5930  currentStakerSet.length */\n      sload\n        /* \"JaiHo/system-contracts/Staking.sol\":5934:5944  MaxStakers */\n      0xffff\n      swap1\n      swap2\n      and\n      gt\n        /* \"JaiHo/system-contracts/Staking.sol\":5885:5994  require(... */\n      tag_230\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5976:5978   */\n      0x20\n        /* \"JaiHo/system-contracts/Staking.sol\":5885:5994  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5958:5979   */\n      mstore\n        /* \"#utility.yul\":6015:6017   */\n      0x18\n        /* \"#utility.yul\":5995:6013   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5988:6018   */\n      mstore\n        /* \"#utility.yul\":6054:6080   */\n      0x43616e2774207374616b6520736c6f742069732066756c6c0000000000000000\n        /* \"#utility.yul\":6034:6052   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6027:6081   */\n      mstore\n        /* \"#utility.yul\":6098:6116   */\n      0x64\n      add\n        /* \"JaiHo/system-contracts/Staking.sol\":5885:5994  require(... */\n      tag_197\n        /* \"#utility.yul\":5774:6122   */\n      jump\n        /* \"JaiHo/system-contracts/Staking.sol\":5885:5994  require(... */\n    tag_230:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"JaiHo/system-contracts/Staking.sol\":6065:6083  stakerInfo[staker] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"JaiHo/system-contracts/Staking.sol\":6065:6075  stakerInfo */\n      0x02\n        /* \"JaiHo/system-contracts/Staking.sol\":6065:6083  stakerInfo[staker] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"JaiHo/system-contracts/Staking.sol\":6065:6088  stakerInfo[staker] == 0 */\n      swap1\n      sub\n        /* \"JaiHo/system-contracts/Staking.sol\":6061:6398  if (stakerInfo[staker] == 0) {... */\n      tag_233\n      jumpi\n        /* \"JaiHo/system-contracts/Staking.sol\":6107:6121  lastRewardTime */\n      sload(0x0d)\n        /* \"JaiHo/system-contracts/Staking.sol\":6125:6126  0 */\n      0x00\n        /* \"JaiHo/system-contracts/Staking.sol\":6107:6126  lastRewardTime == 0 */\n      sub\n        /* \"JaiHo/system-contracts/Staking.sol\":6104:6205  if(lastRewardTime == 0)... */\n      tag_234\n      jumpi\n        /* \"JaiHo/system-contracts/Staking.sol\":6175:6190  block.timestamp */\n      timestamp\n        /* \"JaiHo/system-contracts/Staking.sol\":6158:6172  lastRewardTime */\n      0x0d\n        /* \"JaiHo/system-contracts/Staking.sol\":6158:6190  lastRewardTime = block.timestamp */\n      sstore\n        /* \"JaiHo/system-contracts/Staking.sol\":6104:6205  if(lastRewardTime == 0)... */\n    tag_234:\n        /* \"JaiHo/system-contracts/Staking.sol\":6249:6263  lastRewardTime */\n      sload(0x0d)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"JaiHo/system-contracts/Staking.sol\":6218:6246  rewardWithdrawalTime[staker] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"JaiHo/system-contracts/Staking.sol\":6218:6238  rewardWithdrawalTime */\n      0x0a\n        /* \"JaiHo/system-contracts/Staking.sol\":6218:6246  rewardWithdrawalTime[staker] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"JaiHo/system-contracts/Staking.sol\":6218:6263  rewardWithdrawalTime[staker] = lastRewardTime */\n      dup5\n      swap1\n      sstore\n        /* \"JaiHo/system-contracts/Staking.sol\":6277:6286  stakeTime */\n      0x0b\n        /* \"JaiHo/system-contracts/Staking.sol\":6277:6294  stakeTime[staker] */\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"JaiHo/system-contracts/Staking.sol\":6277:6311  stakeTime[staker] = lastRewardTime */\n      sstore\n        /* \"JaiHo/system-contracts/Staking.sol\":6061:6398  if (stakerInfo[staker] == 0) {... */\n      jump(tag_235)\n    tag_233:\n        /* \"JaiHo/system-contracts/Staking.sol\":6358:6387  withdrawStakingReward(staker) */\n      tag_236\n        /* \"JaiHo/system-contracts/Staking.sol\":6380:6386  staker */\n      dup3\n        /* \"JaiHo/system-contracts/Staking.sol\":6358:6379  withdrawStakingReward */\n      tag_92\n        /* \"JaiHo/system-contracts/Staking.sol\":6358:6387  withdrawStakingReward(staker) */\n      jump\t// in\n    tag_236:\n      pop\n        /* \"JaiHo/system-contracts/Staking.sol\":6061:6398  if (stakerInfo[staker] == 0) {... */\n    tag_235:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"JaiHo/system-contracts/Staking.sol\":6429:6447  stakerInfo[staker] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"JaiHo/system-contracts/Staking.sol\":6429:6439  stakerInfo */\n      0x02\n        /* \"JaiHo/system-contracts/Staking.sol\":6429:6447  stakerInfo[staker] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"JaiHo/system-contracts/Staking.sol\":6429:6459  stakerInfo[staker] + (staking) */\n      tag_237\n      swap1\n        /* \"JaiHo/system-contracts/Staking.sol\":6451:6458  staking */\n      dup3\n      swap1\n        /* \"JaiHo/system-contracts/Staking.sol\":6429:6459  stakerInfo[staker] + (staking) */\n      tag_210\n      jump\t// in\n    tag_237:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"JaiHo/system-contracts/Staking.sol\":6408:6426  stakerInfo[staker] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"JaiHo/system-contracts/Staking.sol\":6408:6418  stakerInfo */\n      0x02\n        /* \"JaiHo/system-contracts/Staking.sol\":6408:6426  stakerInfo[staker] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"JaiHo/system-contracts/Staking.sol\":6408:6459  stakerInfo[staker] = stakerInfo[staker] + (staking) */\n      sstore\n        /* \"JaiHo/system-contracts/Staking.sol\":6475:6497  isActiveStaker(staker) */\n      tag_238\n        /* \"JaiHo/system-contracts/Staking.sol\":6419:6425  staker */\n      dup3\n        /* \"JaiHo/system-contracts/Staking.sol\":6475:6489  isActiveStaker */\n      tag_84\n        /* \"JaiHo/system-contracts/Staking.sol\":6475:6497  isActiveStaker(staker) */\n      jump\t// in\n    tag_238:\n        /* \"JaiHo/system-contracts/Staking.sol\":6470:6557  if (!isActiveStaker(staker)) {... */\n      tag_239\n      jumpi\n        /* \"JaiHo/system-contracts/Staking.sol\":6517:6533  currentStakerSet */\n      0x05\n        /* \"JaiHo/system-contracts/Staking.sol\":6517:6546  currentStakerSet.push(staker) */\n      dup1\n      sload\n      0x01\n      dup2\n      add\n      dup3\n      sstore\n      0x00\n      swap2\n      swap1\n      swap2\n      mstore\n      0x036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db0\n      add\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup5\n      and\n      or\n      swap1\n      sstore\n        /* \"JaiHo/system-contracts/Staking.sol\":6470:6557  if (!isActiveStaker(staker)) {... */\n    tag_239:\n        /* \"JaiHo/system-contracts/Staking.sol\":6594:6601  staking */\n      dup1\n        /* \"JaiHo/system-contracts/Staking.sol\":6580:6590  totalStake */\n      sload(0x06)\n        /* \"JaiHo/system-contracts/Staking.sol\":6580:6602  totalStake + (staking) */\n      tag_241\n      swap2\n      swap1\n      tag_210\n      jump\t// in\n    tag_241:\n        /* \"JaiHo/system-contracts/Staking.sol\":6567:6577  totalStake */\n      0x06\n        /* \"JaiHo/system-contracts/Staking.sol\":6567:6602  totalStake = totalStake + (staking) */\n      sstore\n        /* \"JaiHo/system-contracts/Staking.sol\":6618:6660  LogStake(staker, staking, block.timestamp) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":3290:3315   */\n      dup3\n      dup2\n      mstore\n        /* \"JaiHo/system-contracts/Staking.sol\":6644:6659  block.timestamp */\n      timestamp\n        /* \"#utility.yul\":3346:3348   */\n      0x20\n        /* \"#utility.yul\":3331:3349   */\n      dup3\n      add\n        /* \"#utility.yul\":3324:3358   */\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"JaiHo/system-contracts/Staking.sol\":6618:6660  LogStake(staker, staking, block.timestamp) */\n      dup5\n      and\n      swap2\n      0xa0d1fa51224fb08c7c0b48d481448ad6a31c945d1a68cac8758cac3a92d5001c\n      swap2\n        /* \"#utility.yul\":3263:3281   */\n      add\n        /* \"JaiHo/system-contracts/Staking.sol\":6618:6660  LogStake(staker, staking, block.timestamp) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"JaiHo/system-contracts/Staking.sol\":6677:6681  true */\n      0x01\n        /* \"JaiHo/system-contracts/Staking.sol\":6670:6681  return true */\n      swap3\n      pop\n      pop\n      pop\n        /* \"JaiHo/system-contracts/Staking.sol\":5619:6688  function stake()... */\n      swap1\n      jump\t// out\n        /* \"JaiHo/system-contracts/Staking.sol\":10861:11091  function checkforpenalty(address staker) external view returns(bool isPenalty)... */\n    tag_69:\n        /* \"JaiHo/system-contracts/Staking.sol\":10998:11015  stakingLockPeriod */\n      sload(0x08)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"JaiHo/system-contracts/Staking.sol\":10978:10995  stakeTime[staker] */\n      dup3\n      and\n        /* \"JaiHo/system-contracts/Staking.sol\":10924:10938  bool isPenalty */\n      0x00\n        /* \"JaiHo/system-contracts/Staking.sol\":10978:10995  stakeTime[staker] */\n      swap1\n      dup2\n      mstore\n        /* \"JaiHo/system-contracts/Staking.sol\":10978:10987  stakeTime */\n      0x0b\n        /* \"JaiHo/system-contracts/Staking.sol\":10978:10995  stakeTime[staker] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"JaiHo/system-contracts/Staking.sol\":10924:10938  bool isPenalty */\n      swap1\n      swap2\n        /* \"JaiHo/system-contracts/Staking.sol\":10978:11015  stakeTime[staker] + stakingLockPeriod */\n      tag_244\n      swap2\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"JaiHo/system-contracts/Staking.sol\":10998:11015  stakingLockPeriod */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"JaiHo/system-contracts/Staking.sol\":10978:11015  stakeTime[staker] + stakingLockPeriod */\n      tag_210\n      jump\t// in\n    tag_244:\n        /* \"JaiHo/system-contracts/Staking.sol\":10958:10973  block.timestamp */\n      timestamp\n        /* \"JaiHo/system-contracts/Staking.sol\":10958:11016  block.timestamp <= (stakeTime[staker] + stakingLockPeriod) */\n      gt\n      iszero\n        /* \"JaiHo/system-contracts/Staking.sol\":10958:11041  block.timestamp <= (stakeTime[staker] + stakingLockPeriod) && penaltyPercentage > 0 */\n      dup1\n      iszero\n      tag_245\n      jumpi\n      pop\n        /* \"JaiHo/system-contracts/Staking.sol\":11040:11041  0 */\n      0x00\n        /* \"JaiHo/system-contracts/Staking.sol\":11020:11037  penaltyPercentage */\n      sload(0x09)\n        /* \"JaiHo/system-contracts/Staking.sol\":11020:11041  penaltyPercentage > 0 */\n      gt\n        /* \"JaiHo/system-contracts/Staking.sol\":10958:11041  block.timestamp <= (stakeTime[staker] + stakingLockPeriod) && penaltyPercentage > 0 */\n    tag_245:\n        /* \"JaiHo/system-contracts/Staking.sol\":10955:11085  if(block.timestamp <= (stakeTime[staker] + stakingLockPeriod) && penaltyPercentage > 0) {... */\n      iszero\n      tag_246\n      jumpi\n      pop\n        /* \"JaiHo/system-contracts/Staking.sol\":11069:11073  true */\n      0x01\n        /* \"JaiHo/system-contracts/Staking.sol\":10955:11085  if(block.timestamp <= (stakeTime[staker] + stakingLockPeriod) && penaltyPercentage > 0) {... */\n    tag_246:\n        /* \"JaiHo/system-contracts/Staking.sol\":10861:11091  function checkforpenalty(address staker) external view returns(bool isPenalty)... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"JaiHo/system-contracts/Staking.sol\":14304:14525  function updateValidatorDataContract(address _validatorData) external onlyOwner... */\n    tag_80:\n        /* \"JaiHo/system-contracts/Staking.sol\":1748:1761  _checkOwner() */\n      tag_248\n        /* \"JaiHo/system-contracts/Staking.sol\":1748:1759  _checkOwner */\n      tag_194\n        /* \"JaiHo/system-contracts/Staking.sol\":1748:1761  _checkOwner() */\n      jump\t// in\n    tag_248:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"JaiHo/system-contracts/Staking.sol\":14406:14434  _validatorData != address(0) */\n      dup2\n      and\n        /* \"JaiHo/system-contracts/Staking.sol\":14398:14455  require(_validatorData != address(0), \"invalid contract\") */\n      tag_250\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6329:6331   */\n      0x20\n        /* \"JaiHo/system-contracts/Staking.sol\":14398:14455  require(_validatorData != address(0), \"invalid contract\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6311:6332   */\n      mstore\n        /* \"#utility.yul\":6368:6370   */\n      0x10\n        /* \"#utility.yul\":6348:6366   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6341:6371   */\n      mstore\n      shl(0x82, 0x1a5b9d985b1a590818dbdb9d1c9858dd)\n        /* \"#utility.yul\":6387:6405   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6380:6426   */\n      mstore\n        /* \"#utility.yul\":6443:6461   */\n      0x64\n      add\n        /* \"JaiHo/system-contracts/Staking.sol\":14398:14455  require(_validatorData != address(0), \"invalid contract\") */\n      tag_197\n        /* \"#utility.yul\":6127:6467   */\n      jump\n        /* \"JaiHo/system-contracts/Staking.sol\":14398:14455  require(_validatorData != address(0), \"invalid contract\") */\n    tag_250:\n        /* \"JaiHo/system-contracts/Staking.sol\":14466:14481  valDataContract */\n      0x01\n        /* \"JaiHo/system-contracts/Staking.sol\":14466:14518  valDataContract = InterfaceValidator(_validatorData) */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"JaiHo/system-contracts/Staking.sol\":14304:14525  function updateValidatorDataContract(address _validatorData) external onlyOwner... */\n      jump\t// out\n        /* \"JaiHo/system-contracts/Staking.sol\":12027:12284  function isActiveStaker(address who) public view returns (bool) {... */\n    tag_84:\n        /* \"JaiHo/system-contracts/Staking.sol\":12085:12089  bool */\n      0x00\n      dup1\n        /* \"JaiHo/system-contracts/Staking.sol\":12101:12255  for (uint256 i = 0; i < currentStakerSet.length; i++) {... */\n    tag_254:\n        /* \"JaiHo/system-contracts/Staking.sol\":12125:12141  currentStakerSet */\n      0x05\n        /* \"JaiHo/system-contracts/Staking.sol\":12125:12148  currentStakerSet.length */\n      sload\n        /* \"JaiHo/system-contracts/Staking.sol\":12121:12148  i < currentStakerSet.length */\n      dup2\n      lt\n        /* \"JaiHo/system-contracts/Staking.sol\":12101:12255  for (uint256 i = 0; i < currentStakerSet.length; i++) {... */\n      iszero\n      tag_255\n      jumpi\n        /* \"JaiHo/system-contracts/Staking.sol\":12196:12199  who */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"JaiHo/system-contracts/Staking.sol\":12173:12199  currentStakerSet[i] == who */\n      and\n        /* \"JaiHo/system-contracts/Staking.sol\":12173:12189  currentStakerSet */\n      0x05\n        /* \"JaiHo/system-contracts/Staking.sol\":12190:12191  i */\n      dup3\n        /* \"JaiHo/system-contracts/Staking.sol\":12173:12192  currentStakerSet[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_258\n      jumpi\n      tag_258\n      tag_259\n      jump\t// in\n    tag_258:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"JaiHo/system-contracts/Staking.sol\":12173:12199  currentStakerSet[i] == who */\n      sub\n        /* \"JaiHo/system-contracts/Staking.sol\":12169:12245  if (currentStakerSet[i] == who) {... */\n      tag_261\n      jumpi\n      pop\n        /* \"JaiHo/system-contracts/Staking.sol\":12226:12230  true */\n      0x01\n      swap3\n        /* \"JaiHo/system-contracts/Staking.sol\":12027:12284  function isActiveStaker(address who) public view returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"JaiHo/system-contracts/Staking.sol\":12169:12245  if (currentStakerSet[i] == who) {... */\n    tag_261:\n        /* \"JaiHo/system-contracts/Staking.sol\":12150:12153  i++ */\n      dup1\n      tag_262\n      dup2\n      tag_263\n      jump\t// in\n    tag_262:\n      swap2\n      pop\n      pop\n        /* \"JaiHo/system-contracts/Staking.sol\":12101:12255  for (uint256 i = 0; i < currentStakerSet.length; i++) {... */\n      jump(tag_254)\n    tag_255:\n      pop\n        /* \"JaiHo/system-contracts/Staking.sol\":12272:12277  false */\n      0x00\n      swap3\n        /* \"JaiHo/system-contracts/Staking.sol\":12027:12284  function isActiveStaker(address who) public view returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"JaiHo/system-contracts/Staking.sol\":2485:2586  function renounceOwnership() public virtual onlyOwner {... */\n    tag_88:\n        /* \"JaiHo/system-contracts/Staking.sol\":1748:1761  _checkOwner() */\n      tag_265\n        /* \"JaiHo/system-contracts/Staking.sol\":1748:1759  _checkOwner */\n      tag_194\n        /* \"JaiHo/system-contracts/Staking.sol\":1748:1761  _checkOwner() */\n      jump\t// in\n    tag_265:\n        /* \"JaiHo/system-contracts/Staking.sol\":2549:2579  _transferOwnership(address(0)) */\n      tag_267\n        /* \"JaiHo/system-contracts/Staking.sol\":2576:2577  0 */\n      0x00\n        /* \"JaiHo/system-contracts/Staking.sol\":2549:2567  _transferOwnership */\n      tag_268\n        /* \"JaiHo/system-contracts/Staking.sol\":2549:2579  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_267:\n        /* \"JaiHo/system-contracts/Staking.sol\":2485:2586  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"JaiHo/system-contracts/Staking.sol\":7871:9045  function withdrawStakingReward(address staker) public returns(bool)... */\n    tag_92:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"JaiHo/system-contracts/Staking.sol\":8019:8047  rewardWithdrawalTime[staker] */\n      dup2\n      and\n        /* \"JaiHo/system-contracts/Staking.sol\":7933:7937  bool */\n      0x00\n        /* \"JaiHo/system-contracts/Staking.sol\":8019:8047  rewardWithdrawalTime[staker] */\n      swap1\n      dup2\n      mstore\n        /* \"JaiHo/system-contracts/Staking.sol\":8019:8039  rewardWithdrawalTime */\n      0x0a\n        /* \"JaiHo/system-contracts/Staking.sol\":8019:8047  rewardWithdrawalTime[staker] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"JaiHo/system-contracts/Staking.sol\":7933:7937  bool */\n      dup2\n      swap1\n      dup2\n      swap1\n        /* \"JaiHo/system-contracts/Staking.sol\":8019:8051  rewardWithdrawalTime[staker] > 0 */\n      iszero\n        /* \"JaiHo/system-contracts/Staking.sol\":8016:8165  if(rewardWithdrawalTime[staker] > 0)... */\n      tag_270\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"JaiHo/system-contracts/Staking.sol\":8136:8164  rewardWithdrawalTime[staker] */\n      dup5\n      and\n        /* \"JaiHo/system-contracts/Staking.sol\":8115:8165  reflectionPercentSum[rewardWithdrawalTime[staker]] */\n      0x00\n        /* \"JaiHo/system-contracts/Staking.sol\":8136:8164  rewardWithdrawalTime[staker] */\n      swap1\n      dup2\n      mstore\n        /* \"JaiHo/system-contracts/Staking.sol\":8136:8156  rewardWithdrawalTime */\n      0x0a\n        /* \"JaiHo/system-contracts/Staking.sol\":8136:8164  rewardWithdrawalTime[staker] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sload\n        /* \"JaiHo/system-contracts/Staking.sol\":8115:8165  reflectionPercentSum[rewardWithdrawalTime[staker]] */\n      dup4\n      mstore\n        /* \"JaiHo/system-contracts/Staking.sol\":8115:8135  reflectionPercentSum */\n      0x0e\n        /* \"JaiHo/system-contracts/Staking.sol\":8115:8165  reflectionPercentSum[rewardWithdrawalTime[staker]] */\n      swap1\n      swap2\n      mstore\n      dup1\n      dup3\n      keccak256\n      sload\n        /* \"JaiHo/system-contracts/Staking.sol\":8097:8111  lastRewardTime */\n      sload(0x0d)\n        /* \"JaiHo/system-contracts/Staking.sol\":8076:8112  reflectionPercentSum[lastRewardTime] */\n      dup4\n      mstore\n      swap2\n      keccak256\n      sload\n        /* \"JaiHo/system-contracts/Staking.sol\":8076:8165  reflectionPercentSum[lastRewardTime] - reflectionPercentSum[rewardWithdrawalTime[staker]] */\n      tag_271\n      swap2\n        /* \"JaiHo/system-contracts/Staking.sol\":8115:8165  reflectionPercentSum[rewardWithdrawalTime[staker]] */\n      swap1\n        /* \"JaiHo/system-contracts/Staking.sol\":8076:8165  reflectionPercentSum[lastRewardTime] - reflectionPercentSum[rewardWithdrawalTime[staker]] */\n      tag_205\n      jump\t// in\n    tag_271:\n        /* \"JaiHo/system-contracts/Staking.sol\":8061:8165  validPercent = reflectionPercentSum[lastRewardTime] - reflectionPercentSum[rewardWithdrawalTime[staker]] */\n      swap2\n      pop\n        /* \"JaiHo/system-contracts/Staking.sol\":8016:8165  if(rewardWithdrawalTime[staker] > 0)... */\n    tag_270:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"JaiHo/system-contracts/Staking.sol\":8259:8279  valStakeTime[staker] */\n      dup5\n      and\n        /* \"JaiHo/system-contracts/Staking.sol\":8238:8280  reflectionPercentSum[valStakeTime[staker]] */\n      0x00\n        /* \"JaiHo/system-contracts/Staking.sol\":8259:8279  valStakeTime[staker] */\n      swap1\n      dup2\n      mstore\n        /* \"JaiHo/system-contracts/Staking.sol\":8259:8271  valStakeTime */\n      0x0c\n        /* \"JaiHo/system-contracts/Staking.sol\":8259:8279  valStakeTime[staker] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sload\n        /* \"JaiHo/system-contracts/Staking.sol\":8238:8280  reflectionPercentSum[valStakeTime[staker]] */\n      dup4\n      mstore\n        /* \"JaiHo/system-contracts/Staking.sol\":8238:8258  reflectionPercentSum */\n      0x0e\n        /* \"JaiHo/system-contracts/Staking.sol\":8238:8280  reflectionPercentSum[valStakeTime[staker]] */\n      swap1\n      swap2\n      mstore\n      dup1\n      dup3\n      keccak256\n      sload\n        /* \"JaiHo/system-contracts/Staking.sol\":8220:8234  lastRewardTime */\n      sload(0x0d)\n        /* \"JaiHo/system-contracts/Staking.sol\":8199:8235  reflectionPercentSum[lastRewardTime] */\n      dup4\n      mstore\n      swap2\n      keccak256\n      sload\n        /* \"JaiHo/system-contracts/Staking.sol\":8199:8280  reflectionPercentSum[lastRewardTime] - reflectionPercentSum[valStakeTime[staker]] */\n      tag_272\n      swap2\n        /* \"JaiHo/system-contracts/Staking.sol\":8238:8280  reflectionPercentSum[valStakeTime[staker]] */\n      swap1\n        /* \"JaiHo/system-contracts/Staking.sol\":8199:8280  reflectionPercentSum[lastRewardTime] - reflectionPercentSum[valStakeTime[staker]] */\n      tag_205\n      jump\t// in\n    tag_272:\n        /* \"JaiHo/system-contracts/Staking.sol\":8335:8350  valDataContract */\n      sload(0x01)\n        /* \"JaiHo/system-contracts/Staking.sol\":8335:8388  valDataContract.validatorSpecificInfo2(staker,staker) */\n      mload(0x40)\n      shl(0xe0, 0x64877981)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":6974:6989   */\n      dup8\n      dup2\n      and\n        /* \"JaiHo/system-contracts/Staking.sol\":8335:8388  valDataContract.validatorSpecificInfo2(staker,staker) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":6956:6990   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":7006:7024   */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":6999:7042   */\n      mstore\n        /* \"JaiHo/system-contracts/Staking.sol\":8175:8280  validValidatorPercent = reflectionPercentSum[lastRewardTime] - reflectionPercentSum[valStakeTime[staker]] */\n      swap3\n      swap4\n      pop\n        /* \"JaiHo/system-contracts/Staking.sol\":8292:8321  uint256 validatorsStakedCoins */\n      0x00\n      swap3\n        /* \"JaiHo/system-contracts/Staking.sol\":8335:8350  valDataContract */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"JaiHo/system-contracts/Staking.sol\":8335:8373  valDataContract.validatorSpecificInfo2 */\n      0x64877981\n      swap1\n        /* \"#utility.yul\":6891:6909   */\n      0x44\n      add\n        /* \"JaiHo/system-contracts/Staking.sol\":8335:8388  valDataContract.validatorSpecificInfo2(staker,staker) */\n      0xc0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_276\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_276:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_277\n      swap2\n      swap1\n      tag_278\n      jump\t// in\n    tag_277:\n        /* \"JaiHo/system-contracts/Staking.sol\":8291:8388  (uint256 validatorsStakedCoins, , , , ,)  = valDataContract.validatorSpecificInfo2(staker,staker) */\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"JaiHo/system-contracts/Staking.sol\":8443:8444  0 */\n      0x00\n        /* \"JaiHo/system-contracts/Staking.sol\":8418:8439  validValidatorPercent */\n      dup3\n        /* \"JaiHo/system-contracts/Staking.sol\":8403:8415  validPercent */\n      dup5\n        /* \"JaiHo/system-contracts/Staking.sol\":8403:8439  validPercent + validValidatorPercent */\n      tag_279\n      swap2\n      swap1\n      tag_210\n      jump\t// in\n    tag_279:\n        /* \"JaiHo/system-contracts/Staking.sol\":8402:8444  (validPercent + validValidatorPercent) > 0 */\n      gt\n        /* \"JaiHo/system-contracts/Staking.sol\":8399:9018  if((validPercent + validValidatorPercent) > 0)... */\n      iszero\n      tag_280\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"JaiHo/system-contracts/Staking.sol\":8471:8499  rewardWithdrawalTime[staker] */\n      dup6\n      and\n        /* \"JaiHo/system-contracts/Staking.sol\":8502:8503  0 */\n      0x00\n        /* \"JaiHo/system-contracts/Staking.sol\":8471:8499  rewardWithdrawalTime[staker] */\n      swap1\n      dup2\n      mstore\n        /* \"JaiHo/system-contracts/Staking.sol\":8471:8491  rewardWithdrawalTime */\n      0x0a\n        /* \"JaiHo/system-contracts/Staking.sol\":8471:8499  rewardWithdrawalTime[staker] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"JaiHo/system-contracts/Staking.sol\":8471:8503  rewardWithdrawalTime[staker] > 0 */\n      iszero\n        /* \"JaiHo/system-contracts/Staking.sol\":8468:8562  if(rewardWithdrawalTime[staker] > 0)... */\n      tag_281\n      jumpi\n        /* \"JaiHo/system-contracts/Staking.sol\":8548:8562  lastRewardTime */\n      sload(0x0d)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"JaiHo/system-contracts/Staking.sol\":8517:8545  rewardWithdrawalTime[staker] */\n      dup7\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"JaiHo/system-contracts/Staking.sol\":8517:8537  rewardWithdrawalTime */\n      0x0a\n        /* \"JaiHo/system-contracts/Staking.sol\":8517:8545  rewardWithdrawalTime[staker] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"JaiHo/system-contracts/Staking.sol\":8517:8562  rewardWithdrawalTime[staker] = lastRewardTime */\n      sstore\n        /* \"JaiHo/system-contracts/Staking.sol\":8468:8562  if(rewardWithdrawalTime[staker] > 0)... */\n    tag_281:\n        /* \"JaiHo/system-contracts/Staking.sol\":8579:8594  valDataContract */\n      sload(0x01)\n        /* \"JaiHo/system-contracts/Staking.sol\":8579:8624  valDataContract.getStakingTime(staker,staker) */\n      mload(0x40)\n      shl(0xe0, 0xd0744e3d)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":6974:6989   */\n      dup8\n      dup2\n      and\n        /* \"JaiHo/system-contracts/Staking.sol\":8579:8624  valDataContract.getStakingTime(staker,staker) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":6956:6990   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":7006:7024   */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":6999:7042   */\n      mstore\n        /* \"JaiHo/system-contracts/Staking.sol\":8627:8628  0 */\n      0x00\n      swap3\n        /* \"JaiHo/system-contracts/Staking.sol\":8579:8594  valDataContract */\n      and\n      swap1\n        /* \"JaiHo/system-contracts/Staking.sol\":8579:8609  valDataContract.getStakingTime */\n      0xd0744e3d\n      swap1\n        /* \"#utility.yul\":6891:6909   */\n      0x44\n      add\n        /* \"JaiHo/system-contracts/Staking.sol\":8579:8624  valDataContract.getStakingTime(staker,staker) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_284\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_284:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_285\n      swap2\n      swap1\n      tag_286\n      jump\t// in\n    tag_285:\n        /* \"JaiHo/system-contracts/Staking.sol\":8579:8628  valDataContract.getStakingTime(staker,staker) > 0 */\n      gt\n        /* \"JaiHo/system-contracts/Staking.sol\":8576:8679  if(valDataContract.getStakingTime(staker,staker) > 0)... */\n      iszero\n      tag_287\n      jumpi\n        /* \"JaiHo/system-contracts/Staking.sol\":8665:8679  lastRewardTime */\n      sload(0x0d)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"JaiHo/system-contracts/Staking.sol\":8642:8662  valStakeTime[staker] */\n      dup7\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"JaiHo/system-contracts/Staking.sol\":8642:8654  valStakeTime */\n      0x0c\n        /* \"JaiHo/system-contracts/Staking.sol\":8642:8662  valStakeTime[staker] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"JaiHo/system-contracts/Staking.sol\":8642:8679  valStakeTime[staker] = lastRewardTime */\n      sstore\n        /* \"JaiHo/system-contracts/Staking.sol\":8576:8679  if(valDataContract.getStakingTime(staker,staker) > 0)... */\n    tag_287:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"JaiHo/system-contracts/Staking.sol\":8707:8725  stakerInfo[staker] */\n      dup6\n      and\n        /* \"JaiHo/system-contracts/Staking.sol\":8693:8704  uint reward */\n      0x00\n        /* \"JaiHo/system-contracts/Staking.sol\":8707:8725  stakerInfo[staker] */\n      swap1\n      dup2\n      mstore\n        /* \"JaiHo/system-contracts/Staking.sol\":8707:8717  stakerInfo */\n      0x02\n        /* \"JaiHo/system-contracts/Staking.sol\":8707:8725  stakerInfo[staker] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"JaiHo/system-contracts/Staking.sol\":8743:8762  1000000000000000000 */\n      0x0de0b6b3a7640000\n      swap1\n        /* \"JaiHo/system-contracts/Staking.sol\":8707:8740  stakerInfo[staker] * validPercent */\n      tag_288\n      swap1\n        /* \"JaiHo/system-contracts/Staking.sol\":8728:8740  validPercent */\n      dup7\n      swap1\n        /* \"JaiHo/system-contracts/Staking.sol\":8707:8740  stakerInfo[staker] * validPercent */\n      tag_214\n      jump\t// in\n    tag_288:\n        /* \"JaiHo/system-contracts/Staking.sol\":8707:8762  stakerInfo[staker] * validPercent / 1000000000000000000 */\n      tag_289\n      swap2\n      swap1\n      tag_216\n      jump\t// in\n    tag_289:\n        /* \"JaiHo/system-contracts/Staking.sol\":8693:8762  uint reward = stakerInfo[staker] * validPercent / 1000000000000000000 */\n      swap1\n      pop\n        /* \"JaiHo/system-contracts/Staking.sol\":8776:8790  uint valReward */\n      0x00\n        /* \"JaiHo/system-contracts/Staking.sol\":8841:8860  1000000000000000000 */\n      0x0de0b6b3a7640000\n        /* \"JaiHo/system-contracts/Staking.sol\":8793:8838  validatorsStakedCoins * validValidatorPercent */\n      tag_290\n        /* \"JaiHo/system-contracts/Staking.sol\":8817:8838  validValidatorPercent */\n      dup6\n        /* \"JaiHo/system-contracts/Staking.sol\":8793:8814  validatorsStakedCoins */\n      dup6\n        /* \"JaiHo/system-contracts/Staking.sol\":8793:8838  validatorsStakedCoins * validValidatorPercent */\n      tag_214\n      jump\t// in\n    tag_290:\n        /* \"JaiHo/system-contracts/Staking.sol\":8793:8860  validatorsStakedCoins * validValidatorPercent / 1000000000000000000 */\n      tag_291\n      swap2\n      swap1\n      tag_216\n      jump\t// in\n    tag_291:\n        /* \"JaiHo/system-contracts/Staking.sol\":8776:8860  uint valReward = validatorsStakedCoins * validValidatorPercent / 1000000000000000000 */\n      swap1\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"JaiHo/system-contracts/Staking.sol\":8874:8898  payable(staker).transfer */\n      dup8\n      and\n        /* \"JaiHo/system-contracts/Staking.sol\":8874:8918  payable(staker).transfer(reward + valReward) */\n      0x08fc\n        /* \"JaiHo/system-contracts/Staking.sol\":8899:8917  reward + valReward */\n      tag_292\n        /* \"JaiHo/system-contracts/Staking.sol\":8776:8860  uint valReward = validatorsStakedCoins * validValidatorPercent / 1000000000000000000 */\n      dup4\n        /* \"JaiHo/system-contracts/Staking.sol\":8899:8905  reward */\n      dup6\n        /* \"JaiHo/system-contracts/Staking.sol\":8899:8917  reward + valReward */\n      tag_210\n      jump\t// in\n    tag_292:\n        /* \"JaiHo/system-contracts/Staking.sol\":8874:8918  payable(staker).transfer(reward + valReward) */\n      mload(0x40)\n      dup2\n      iszero\n      swap1\n      swap3\n      mul\n      swap2\n      0x00\n      dup2\n      dup2\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_294\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_294:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"JaiHo/system-contracts/Staking.sol\":8937:9007  withdrawStakingRewardEv(staker, (reward + valReward), block.timestamp) */\n      dup8\n      and\n      0xf03271da9252f83cabf8baf9c18589849bdadb0ad1f6268432d871380624b9e6\n        /* \"JaiHo/system-contracts/Staking.sol\":8970:8988  reward + valReward */\n      tag_295\n        /* \"JaiHo/system-contracts/Staking.sol\":8979:8988  valReward */\n      dup4\n        /* \"JaiHo/system-contracts/Staking.sol\":8970:8976  reward */\n      dup6\n        /* \"JaiHo/system-contracts/Staking.sol\":8970:8988  reward + valReward */\n      tag_210\n      jump\t// in\n    tag_295:\n        /* \"JaiHo/system-contracts/Staking.sol\":8937:9007  withdrawStakingRewardEv(staker, (reward + valReward), block.timestamp) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":3290:3315   */\n      swap2\n      dup3\n      mstore\n        /* \"JaiHo/system-contracts/Staking.sol\":8991:9006  block.timestamp */\n      timestamp\n        /* \"#utility.yul\":3346:3348   */\n      0x20\n        /* \"#utility.yul\":3331:3349   */\n      dup4\n      add\n        /* \"#utility.yul\":3324:3358   */\n      mstore\n        /* \"#utility.yul\":3263:3281   */\n      add\n        /* \"JaiHo/system-contracts/Staking.sol\":8937:9007  withdrawStakingRewardEv(staker, (reward + valReward), block.timestamp) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"JaiHo/system-contracts/Staking.sol\":8454:9018  {... */\n      pop\n      pop\n        /* \"JaiHo/system-contracts/Staking.sol\":8399:9018  if((validPercent + validValidatorPercent) > 0)... */\n    tag_280:\n      pop\n        /* \"JaiHo/system-contracts/Staking.sol\":9034:9038  true */\n      0x01\n      swap5\n        /* \"JaiHo/system-contracts/Staking.sol\":7871:9045  function withdrawStakingReward(address staker) public returns(bool)... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"JaiHo/system-contracts/Staking.sol\":9132:10242  function distributeReward()... */\n    tag_109:\n        /* \"JaiHo/system-contracts/Staking.sol\":9207:9221  uint256 reward */\n      0x00\n        /* \"JaiHo/system-contracts/Staking.sol\":9236:9248  totalPenalty */\n      sload(0x07)\n        /* \"JaiHo/system-contracts/Staking.sol\":9224:9233  msg.value */\n      callvalue\n        /* \"JaiHo/system-contracts/Staking.sol\":9224:9248  msg.value + totalPenalty */\n      tag_299\n      swap2\n      swap1\n      tag_210\n      jump\t// in\n    tag_299:\n        /* \"JaiHo/system-contracts/Staking.sol\":9207:9248  uint256 reward = msg.value + totalPenalty */\n      swap1\n      pop\n        /* \"JaiHo/system-contracts/Staking.sol\":9260:9279  uint256 totalstakes */\n      0x00\n        /* \"JaiHo/system-contracts/Staking.sol\":9284:9330  getTotalStakeOfActiveStakersExcept(address(0)) */\n      tag_300\n        /* \"JaiHo/system-contracts/Staking.sol\":9327:9328  0 */\n      0x00\n        /* \"JaiHo/system-contracts/Staking.sol\":9284:9318  getTotalStakeOfActiveStakersExcept */\n      tag_301\n        /* \"JaiHo/system-contracts/Staking.sol\":9284:9330  getTotalStakeOfActiveStakersExcept(address(0)) */\n      jump\t// in\n    tag_300:\n        /* \"JaiHo/system-contracts/Staking.sol\":9259:9330  (uint256 totalstakes,) = getTotalStakeOfActiveStakersExcept(address(0)) */\n      pop\n      swap1\n      pop\n        /* \"JaiHo/system-contracts/Staking.sol\":9345:9382  address[] memory highestValidatorsSet */\n      0x00\n        /* \"JaiHo/system-contracts/Staking.sol\":9393:9408  valDataContract */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"JaiHo/system-contracts/Staking.sol\":9393:9428  valDataContract.getAllValidatorInfo */\n      and\n      0x3f8dc65a\n        /* \"JaiHo/system-contracts/Staking.sol\":9393:9430  valDataContract.getAllValidatorInfo() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_303\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_303:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x00\n      dup3\n      returndatacopy\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      0x40\n      mstore\n      tag_304\n      swap2\n      swap1\n      dup2\n      add\n      swap1\n      tag_305\n      jump\t// in\n    tag_304:\n      pop\n      pop\n        /* \"JaiHo/system-contracts/Staking.sol\":9466:9493  highestValidatorsSet.length */\n      dup3\n      mload\n        /* \"JaiHo/system-contracts/Staking.sol\":9341:9430  (, ,address[] memory highestValidatorsSet, , , ,) = valDataContract.getAllValidatorInfo() */\n      swap3\n      swap6\n      pop\n        /* \"JaiHo/system-contracts/Staking.sol\":9466:9493  highestValidatorsSet.length */\n      swap2\n      swap4\n      pop\n        /* \"JaiHo/system-contracts/Staking.sol\":9440:9463  uint256 totalValidators */\n      0x00\n      swap3\n      pop\n      dup3\n      swap2\n      pop\n      pop\n        /* \"JaiHo/system-contracts/Staking.sol\":9548:9802  for(uint8 i=0; i < totalValidators; i++){... */\n    tag_306:\n        /* \"JaiHo/system-contracts/Staking.sol\":9567:9582  totalValidators */\n      dup3\n        /* \"JaiHo/system-contracts/Staking.sol\":9563:9564  i */\n      dup2\n        /* \"JaiHo/system-contracts/Staking.sol\":9563:9582  i < totalValidators */\n      0xff\n      and\n      lt\n        /* \"JaiHo/system-contracts/Staking.sol\":9548:9802  for(uint8 i=0; i < totalValidators; i++){... */\n      iszero\n      tag_307\n      jumpi\n        /* \"JaiHo/system-contracts/Staking.sol\":9643:9658  valDataContract */\n      sload(0x01)\n        /* \"JaiHo/system-contracts/Staking.sol\":9682:9705  highestValidatorsSet[i] */\n      dup5\n      mload\n        /* \"JaiHo/system-contracts/Staking.sol\":9600:9629  uint256 validatorsStakedCoins */\n      0x00\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"JaiHo/system-contracts/Staking.sol\":9643:9658  valDataContract */\n      and\n      swap1\n        /* \"JaiHo/system-contracts/Staking.sol\":9643:9681  valDataContract.validatorSpecificInfo2 */\n      0x64877981\n      swap1\n        /* \"JaiHo/system-contracts/Staking.sol\":9682:9702  highestValidatorsSet */\n      dup8\n      swap1\n        /* \"JaiHo/system-contracts/Staking.sol\":9682:9705  highestValidatorsSet[i] */\n      0xff\n      dup7\n      and\n      swap1\n      dup2\n      lt\n      tag_310\n      jumpi\n      tag_310\n      tag_259\n      jump\t// in\n    tag_310:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"JaiHo/system-contracts/Staking.sol\":9706:9726  highestValidatorsSet */\n      dup8\n        /* \"JaiHo/system-contracts/Staking.sol\":9727:9728  i */\n      dup6\n        /* \"JaiHo/system-contracts/Staking.sol\":9706:9729  highestValidatorsSet[i] */\n      0xff\n      and\n      dup2\n      mload\n      dup2\n      lt\n      tag_312\n      jumpi\n      tag_312\n      tag_259\n      jump\t// in\n    tag_312:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"JaiHo/system-contracts/Staking.sol\":9643:9730  valDataContract.validatorSpecificInfo2(highestValidatorsSet[i],highestValidatorsSet[i]) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_313\n      swap3\n      swap2\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":6974:6989   */\n      swap3\n      dup4\n      and\n        /* \"#utility.yul\":6956:6990   */\n      dup2\n      mstore\n        /* \"#utility.yul\":7026:7041   */\n      swap2\n      and\n        /* \"#utility.yul\":7021:7023   */\n      0x20\n        /* \"#utility.yul\":7006:7024   */\n      dup3\n      add\n        /* \"#utility.yul\":6999:7042   */\n      mstore\n        /* \"#utility.yul\":6906:6908   */\n      0x40\n        /* \"#utility.yul\":6891:6909   */\n      add\n      swap1\n        /* \"#utility.yul\":6744:7048   */\n      jump\n        /* \"JaiHo/system-contracts/Staking.sol\":9643:9730  valDataContract.validatorSpecificInfo2(highestValidatorsSet[i],highestValidatorsSet[i]) */\n    tag_313:\n      0xc0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_315\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_315:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_316\n      swap2\n      swap1\n      tag_278\n      jump\t// in\n    tag_316:\n        /* \"JaiHo/system-contracts/Staking.sol\":9599:9730  (uint256 validatorsStakedCoins, , , , ,)  = valDataContract.validatorSpecificInfo2(highestValidatorsSet[i],highestValidatorsSet[i]) */\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"JaiHo/system-contracts/Staking.sol\":9770:9791  validatorsStakedCoins */\n      dup1\n        /* \"JaiHo/system-contracts/Staking.sol\":9740:9791  totalValidatorsStakedCoins += validatorsStakedCoins */\n      dup4\n      tag_317\n      swap2\n      swap1\n      tag_210\n      jump\t// in\n    tag_317:\n      swap3\n      pop\n        /* \"JaiHo/system-contracts/Staking.sol\":9588:9802  {... */\n      pop\n        /* \"JaiHo/system-contracts/Staking.sol\":9584:9587  i++ */\n      dup1\n      dup1\n      tag_318\n      swap1\n      tag_319\n      jump\t// in\n    tag_318:\n      swap2\n      pop\n      pop\n        /* \"JaiHo/system-contracts/Staking.sol\":9548:9802  for(uint8 i=0; i < totalValidators; i++){... */\n      jump(tag_306)\n    tag_307:\n      pop\n        /* \"JaiHo/system-contracts/Staking.sol\":9863:9864  0 */\n      0x00\n        /* \"JaiHo/system-contracts/Staking.sol\":9820:9860  totalstakes + totalValidatorsStakedCoins */\n      tag_320\n        /* \"JaiHo/system-contracts/Staking.sol\":9834:9860  totalValidatorsStakedCoins */\n      dup3\n        /* \"JaiHo/system-contracts/Staking.sol\":9820:9831  totalstakes */\n      dup7\n        /* \"JaiHo/system-contracts/Staking.sol\":9820:9860  totalstakes + totalValidatorsStakedCoins */\n      tag_210\n      jump\t// in\n    tag_320:\n        /* \"JaiHo/system-contracts/Staking.sol\":9820:9864  totalstakes + totalValidatorsStakedCoins > 0 */\n      gt\n        /* \"JaiHo/system-contracts/Staking.sol\":9812:9879  require(totalstakes + totalValidatorsStakedCoins > 0, \"No stakers\") */\n      tag_321\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":14201:14203   */\n      0x20\n        /* \"JaiHo/system-contracts/Staking.sol\":9812:9879  require(totalstakes + totalValidatorsStakedCoins > 0, \"No stakers\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14183:14204   */\n      mstore\n        /* \"#utility.yul\":14240:14242   */\n      0x0a\n        /* \"#utility.yul\":14220:14238   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":14213:14243   */\n      mstore\n      shl(0xb0, 0x4e6f207374616b657273)\n        /* \"#utility.yul\":14259:14277   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":14252:14292   */\n      mstore\n        /* \"#utility.yul\":14309:14327   */\n      0x64\n      add\n        /* \"JaiHo/system-contracts/Staking.sol\":9812:9879  require(totalstakes + totalValidatorsStakedCoins > 0, \"No stakers\") */\n      tag_197\n        /* \"#utility.yul\":13999:14333   */\n      jump\n        /* \"JaiHo/system-contracts/Staking.sol\":9812:9879  require(totalstakes + totalValidatorsStakedCoins > 0, \"No stakers\") */\n    tag_321:\n        /* \"JaiHo/system-contracts/Staking.sol\":9933:9947  lastRewardTime */\n      0x0d\n      dup1\n      sload\n        /* \"JaiHo/system-contracts/Staking.sol\":9890:9909  uint lastRewardHold */\n      0x00\n        /* \"JaiHo/system-contracts/Staking.sol\":9912:9948  reflectionPercentSum[lastRewardTime] */\n      swap1\n      dup2\n      mstore\n        /* \"JaiHo/system-contracts/Staking.sol\":9912:9932  reflectionPercentSum */\n      0x0e\n        /* \"JaiHo/system-contracts/Staking.sol\":9912:9948  reflectionPercentSum[lastRewardTime] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"JaiHo/system-contracts/Staking.sol\":9975:9990  block.timestamp */\n      timestamp\n        /* \"JaiHo/system-contracts/Staking.sol\":9958:9990  lastRewardTime = block.timestamp */\n      swap1\n      swap2\n      sstore\n        /* \"JaiHo/system-contracts/Staking.sol\":10098:10138  totalstakes + totalValidatorsStakedCoins */\n      tag_324\n        /* \"JaiHo/system-contracts/Staking.sol\":10112:10138  totalValidatorsStakedCoins */\n      dup3\n        /* \"JaiHo/system-contracts/Staking.sol\":10098:10109  totalstakes */\n      dup7\n        /* \"JaiHo/system-contracts/Staking.sol\":10098:10138  totalstakes + totalValidatorsStakedCoins */\n      tag_210\n      jump\t// in\n    tag_324:\n        /* \"JaiHo/system-contracts/Staking.sol\":10066:10094  reward * 1000000000000000000 */\n      tag_325\n        /* \"JaiHo/system-contracts/Staking.sol\":10066:10072  reward */\n      dup8\n        /* \"JaiHo/system-contracts/Staking.sol\":10075:10094  1000000000000000000 */\n      0x0de0b6b3a7640000\n        /* \"JaiHo/system-contracts/Staking.sol\":10066:10094  reward * 1000000000000000000 */\n      tag_214\n      jump\t// in\n    tag_325:\n        /* \"JaiHo/system-contracts/Staking.sol\":10066:10139  reward * 1000000000000000000 / (totalstakes + totalValidatorsStakedCoins) */\n      tag_326\n      swap2\n      swap1\n      tag_216\n      jump\t// in\n    tag_326:\n        /* \"JaiHo/system-contracts/Staking.sol\":10048:10140  lastRewardHold + (reward * 1000000000000000000 / (totalstakes + totalValidatorsStakedCoins)) */\n      tag_327\n      swap1\n        /* \"JaiHo/system-contracts/Staking.sol\":10048:10062  lastRewardHold */\n      dup3\n        /* \"JaiHo/system-contracts/Staking.sol\":10048:10140  lastRewardHold + (reward * 1000000000000000000 / (totalstakes + totalValidatorsStakedCoins)) */\n      tag_210\n      jump\t// in\n    tag_327:\n        /* \"JaiHo/system-contracts/Staking.sol\":10030:10044  lastRewardTime */\n      sload(0x0d)\n        /* \"JaiHo/system-contracts/Staking.sol\":10009:10045  reflectionPercentSum[lastRewardTime] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"JaiHo/system-contracts/Staking.sol\":10009:10029  reflectionPercentSum */\n      0x0e\n        /* \"JaiHo/system-contracts/Staking.sol\":10009:10045  reflectionPercentSum[lastRewardTime] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"JaiHo/system-contracts/Staking.sol\":10009:10140  reflectionPercentSum[lastRewardTime] = lastRewardHold + (reward * 1000000000000000000 / (totalstakes + totalValidatorsStakedCoins)) */\n      swap3\n      swap1\n      swap3\n      sstore\n        /* \"JaiHo/system-contracts/Staking.sol\":10150:10162  totalPenalty */\n      0x07\n        /* \"JaiHo/system-contracts/Staking.sol\":10150:10166  totalPenalty = 0 */\n      sstore\n        /* \"JaiHo/system-contracts/Staking.sol\":10191:10235  LogDistributeReward(reward, block.timestamp) */\n      mload\n      0xddd247369eddde588b8afa794145311a9ac4ff297c32d895359c5befc1a4e1f3\n      swap1\n      tag_328\n      swap1\n        /* \"JaiHo/system-contracts/Staking.sol\":10211:10217  reward */\n      dup9\n      swap1\n        /* \"JaiHo/system-contracts/Staking.sol\":10219:10234  block.timestamp */\n      timestamp\n      swap1\n        /* \"#utility.yul\":3290:3315   */\n      swap2\n      dup3\n      mstore\n        /* \"#utility.yul\":3346:3348   */\n      0x20\n        /* \"#utility.yul\":3331:3349   */\n      dup3\n      add\n        /* \"#utility.yul\":3324:3358   */\n      mstore\n        /* \"#utility.yul\":3278:3280   */\n      0x40\n        /* \"#utility.yul\":3263:3281   */\n      add\n      swap1\n        /* \"#utility.yul\":3116:3364   */\n      jump\n        /* \"JaiHo/system-contracts/Staking.sol\":10191:10235  LogDistributeReward(reward, block.timestamp) */\n    tag_328:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"JaiHo/system-contracts/Staking.sol\":9197:10242  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"JaiHo/system-contracts/Staking.sol\":9132:10242  function distributeReward()... */\n      jump\t// out\n        /* \"JaiHo/system-contracts/Staking.sol\":11289:11396  function getActiveStakers() public view returns (address[] memory) {... */\n    tag_116:\n        /* \"JaiHo/system-contracts/Staking.sol\":11338:11354  address[] memory */\n      0x60\n        /* \"JaiHo/system-contracts/Staking.sol\":11373:11389  currentStakerSet */\n      0x05\n        /* \"JaiHo/system-contracts/Staking.sol\":11366:11389  return currentStakerSet */\n      dup1\n      sload\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      dup1\n      iszero\n      tag_330\n      jumpi\n      0x20\n      mul\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_331:\n      dup2\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x01\n      swap1\n      swap2\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_331\n      jumpi\n    tag_330:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"JaiHo/system-contracts/Staking.sol\":11289:11396  function getActiveStakers() public view returns (address[] memory) {... */\n      swap1\n      jump\t// out\n        /* \"JaiHo/system-contracts/Staking.sol\":14103:14297  function mutateValStakeTimeMapping(address validator, uint value) external onlyValDataContract{... */\n    tag_123:\n        /* \"JaiHo/system-contracts/Staking.sol\":14602:14617  valDataContract */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n        /* \"JaiHo/system-contracts/Staking.sol\":14580:14590  msg.sender */\n      caller\n        /* \"JaiHo/system-contracts/Staking.sol\":14580:14618  msg.sender == address(valDataContract) */\n      eq\n        /* \"JaiHo/system-contracts/Staking.sol\":14572:14647  require(msg.sender == address(valDataContract), \"onlyValDataContract only\") */\n      tag_333\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":14540:14542   */\n      0x20\n        /* \"JaiHo/system-contracts/Staking.sol\":14572:14647  require(msg.sender == address(valDataContract), \"onlyValDataContract only\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14522:14543   */\n      mstore\n        /* \"#utility.yul\":14579:14581   */\n      0x18\n        /* \"#utility.yul\":14559:14577   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":14552:14582   */\n      mstore\n        /* \"#utility.yul\":14618:14644   */\n      0x6f6e6c7956616c44617461436f6e7472616374206f6e6c790000000000000000\n        /* \"#utility.yul\":14598:14616   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":14591:14645   */\n      mstore\n        /* \"#utility.yul\":14662:14680   */\n      0x64\n      add\n        /* \"JaiHo/system-contracts/Staking.sol\":14572:14647  require(msg.sender == address(valDataContract), \"onlyValDataContract only\") */\n      tag_197\n        /* \"#utility.yul\":14338:14686   */\n      jump\n        /* \"JaiHo/system-contracts/Staking.sol\":14572:14647  require(msg.sender == address(valDataContract), \"onlyValDataContract only\") */\n    tag_333:\n        /* \"JaiHo/system-contracts/Staking.sol\":14207:14217  value == 0 */\n      dup1\n      iszero\n        /* \"JaiHo/system-contracts/Staking.sol\":14207:14290  value == 0 ? valStakeTime[validator] = lastRewardTime : valStakeTime[validator] = 0 */\n      tag_337\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"JaiHo/system-contracts/Staking.sol\":14263:14286  valStakeTime[validator] */\n      and\n        /* \"JaiHo/system-contracts/Staking.sol\":14289:14290  0 */\n      0x00\n        /* \"JaiHo/system-contracts/Staking.sol\":14263:14286  valStakeTime[validator] */\n      swap1\n      dup2\n      mstore\n        /* \"JaiHo/system-contracts/Staking.sol\":14263:14275  valStakeTime */\n      0x0c\n        /* \"JaiHo/system-contracts/Staking.sol\":14263:14286  valStakeTime[validator] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"JaiHo/system-contracts/Staking.sol\":14263:14290  valStakeTime[validator] = 0 */\n      sstore\n        /* \"JaiHo/system-contracts/Staking.sol\":14103:14297  function mutateValStakeTimeMapping(address validator, uint value) external onlyValDataContract{... */\n      jump\t// out\n        /* \"JaiHo/system-contracts/Staking.sol\":14207:14290  value == 0 ? valStakeTime[validator] = lastRewardTime : valStakeTime[validator] = 0 */\n    tag_337:\n      pop\n        /* \"JaiHo/system-contracts/Staking.sol\":14246:14260  lastRewardTime */\n      sload(0x0d)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"JaiHo/system-contracts/Staking.sol\":14220:14243  valStakeTime[validator] */\n      swap2\n      swap1\n      swap2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"JaiHo/system-contracts/Staking.sol\":14220:14232  valStakeTime */\n      0x0c\n        /* \"JaiHo/system-contracts/Staking.sol\":14220:14243  valStakeTime[validator] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"JaiHo/system-contracts/Staking.sol\":14220:14260  valStakeTime[validator] = lastRewardTime */\n      sstore\n        /* \"JaiHo/system-contracts/Staking.sol\":14103:14297  function mutateValStakeTimeMapping(address validator, uint value) external onlyValDataContract{... */\n      jump\t// out\n        /* \"JaiHo/system-contracts/Staking.sol\":13980:14097  function rescueCoins() external onlyOwner{        ... */\n    tag_131:\n        /* \"JaiHo/system-contracts/Staking.sol\":1748:1761  _checkOwner() */\n      tag_341\n        /* \"JaiHo/system-contracts/Staking.sol\":1748:1759  _checkOwner */\n      tag_194\n        /* \"JaiHo/system-contracts/Staking.sol\":1748:1761  _checkOwner() */\n      jump\t// in\n    tag_341:\n        /* \"JaiHo/system-contracts/Staking.sol\":14039:14090  payable(msg.sender).transfer(address(this).balance) */\n      mload(0x40)\n        /* \"JaiHo/system-contracts/Staking.sol\":14047:14057  msg.sender */\n      caller\n      swap1\n        /* \"JaiHo/system-contracts/Staking.sol\":14068:14089  address(this).balance */\n      selfbalance\n        /* \"JaiHo/system-contracts/Staking.sol\":14039:14090  payable(msg.sender).transfer(address(this).balance) */\n      dup1\n      iszero\n      0x08fc\n      mul\n      swap2\n      0x00\n      dup2\n      dup2\n      dup2\n        /* \"JaiHo/system-contracts/Staking.sol\":14068:14089  address(this).balance */\n      dup6\n        /* \"JaiHo/system-contracts/Staking.sol\":14047:14057  msg.sender */\n      dup9\n        /* \"JaiHo/system-contracts/Staking.sol\":14039:14090  payable(msg.sender).transfer(address(this).balance) */\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_344\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_344:\n      pop\n        /* \"JaiHo/system-contracts/Staking.sol\":13980:14097  function rescueCoins() external onlyOwner{        ... */\n      jump\t// out\n        /* \"JaiHo/system-contracts/Staking.sol\":13225:13343  function updateMaxStakers(... */\n    tag_145:\n        /* \"JaiHo/system-contracts/Staking.sol\":1748:1761  _checkOwner() */\n      tag_346\n        /* \"JaiHo/system-contracts/Staking.sol\":1748:1759  _checkOwner */\n      tag_194\n        /* \"JaiHo/system-contracts/Staking.sol\":1748:1761  _checkOwner() */\n      jump\t// in\n    tag_346:\n        /* \"JaiHo/system-contracts/Staking.sol\":13312:13322  MaxStakers */\n      0x04\n        /* \"JaiHo/system-contracts/Staking.sol\":13312:13336  MaxStakers = _MaxStakers */\n      dup1\n      sload\n      not(0xffff)\n      and\n      0xffff\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"JaiHo/system-contracts/Staking.sol\":13225:13343  function updateMaxStakers(... */\n      jump\t// out\n        /* \"JaiHo/system-contracts/Staking.sol\":11402:11589  function getTotalStakeOfActiveStakers()... */\n    tag_162:\n        /* \"JaiHo/system-contracts/Staking.sol\":11487:11500  uint256 total */\n      0x00\n        /* \"JaiHo/system-contracts/Staking.sol\":11502:11513  uint256 len */\n      dup1\n        /* \"JaiHo/system-contracts/Staking.sol\":11536:11582  getTotalStakeOfActiveStakersExcept(address(0)) */\n      tag_349\n        /* \"JaiHo/system-contracts/Staking.sol\":11579:11580  0 */\n      0x00\n        /* \"JaiHo/system-contracts/Staking.sol\":11536:11570  getTotalStakeOfActiveStakersExcept */\n      tag_301\n        /* \"JaiHo/system-contracts/Staking.sol\":11536:11582  getTotalStakeOfActiveStakersExcept(address(0)) */\n      jump\t// in\n    tag_349:\n        /* \"JaiHo/system-contracts/Staking.sol\":11529:11582  return getTotalStakeOfActiveStakersExcept(address(0)) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"JaiHo/system-contracts/Staking.sol\":11402:11589  function getTotalStakeOfActiveStakers()... */\n      swap1\n      swap2\n      jump\t// out\n        /* \"JaiHo/system-contracts/Staking.sol\":13575:13719  function updateStakingLockPeriod(uint64 _stakingLockPeriod) external onlyOwner... */\n    tag_168:\n        /* \"JaiHo/system-contracts/Staking.sol\":1748:1761  _checkOwner() */\n      tag_351\n        /* \"JaiHo/system-contracts/Staking.sol\":1748:1759  _checkOwner */\n      tag_194\n        /* \"JaiHo/system-contracts/Staking.sol\":1748:1761  _checkOwner() */\n      jump\t// in\n    tag_351:\n        /* \"JaiHo/system-contracts/Staking.sol\":13686:13712  _stakingLockPeriod * 86400 */\n      tag_353\n        /* \"JaiHo/system-contracts/Staking.sol\":13686:13704  _stakingLockPeriod */\n      dup2\n        /* \"JaiHo/system-contracts/Staking.sol\":13707:13712  86400 */\n      0x015180\n        /* \"JaiHo/system-contracts/Staking.sol\":13686:13712  _stakingLockPeriod * 86400 */\n      tag_354\n      jump\t// in\n    tag_353:\n        /* \"JaiHo/system-contracts/Staking.sol\":13666:13683  stakingLockPeriod */\n      0x08\n        /* \"JaiHo/system-contracts/Staking.sol\":13666:13712  stakingLockPeriod = _stakingLockPeriod * 86400 */\n      dup1\n      sload\n      not(0xffffffffffffffff)\n      and\n      sub(shl(0x40, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n      pop\n        /* \"JaiHo/system-contracts/Staking.sol\":13575:13719  function updateStakingLockPeriod(uint64 _stakingLockPeriod) external onlyOwner... */\n      jump\t// out\n        /* \"JaiHo/system-contracts/Staking.sol\":2735:2967  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_172:\n        /* \"JaiHo/system-contracts/Staking.sol\":1748:1761  _checkOwner() */\n      tag_356\n        /* \"JaiHo/system-contracts/Staking.sol\":1748:1759  _checkOwner */\n      tag_194\n        /* \"JaiHo/system-contracts/Staking.sol\":1748:1761  _checkOwner() */\n      jump\t// in\n    tag_356:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"JaiHo/system-contracts/Staking.sol\":2836:2858  newOwner != address(0) */\n      dup2\n      and\n        /* \"JaiHo/system-contracts/Staking.sol\":2815:2922  require(... */\n      tag_358\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":15155:15157   */\n      0x20\n        /* \"JaiHo/system-contracts/Staking.sol\":2815:2922  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":15137:15158   */\n      mstore\n        /* \"#utility.yul\":15194:15196   */\n      0x26\n        /* \"#utility.yul\":15174:15192   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":15167:15197   */\n      mstore\n        /* \"#utility.yul\":15233:15267   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":15213:15231   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":15206:15268   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":15284:15302   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":15277:15313   */\n      mstore\n        /* \"#utility.yul\":15330:15349   */\n      0x84\n      add\n        /* \"JaiHo/system-contracts/Staking.sol\":2815:2922  require(... */\n      tag_197\n        /* \"#utility.yul\":14953:15355   */\n      jump\n        /* \"JaiHo/system-contracts/Staking.sol\":2815:2922  require(... */\n    tag_358:\n        /* \"JaiHo/system-contracts/Staking.sol\":2932:2960  _transferOwnership(newOwner) */\n      tag_344\n        /* \"JaiHo/system-contracts/Staking.sol\":2951:2959  newOwner */\n      dup2\n        /* \"JaiHo/system-contracts/Staking.sol\":2932:2950  _transferOwnership */\n      tag_268\n        /* \"JaiHo/system-contracts/Staking.sol\":2932:2960  _transferOwnership(newOwner) */\n      jump\t// in\n        /* \"JaiHo/system-contracts/Staking.sol\":12290:13219  function viewStakeReward(address _staker) public view returns(uint256 valReward, uint256 stakerReward){... */\n    tag_176:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"JaiHo/system-contracts/Staking.sol\":12480:12509  rewardWithdrawalTime[_staker] */\n      dup2\n      and\n        /* \"JaiHo/system-contracts/Staking.sol\":12352:12369  uint256 valReward */\n      0x00\n        /* \"JaiHo/system-contracts/Staking.sol\":12480:12509  rewardWithdrawalTime[_staker] */\n      swap1\n      dup2\n      mstore\n        /* \"JaiHo/system-contracts/Staking.sol\":12480:12500  rewardWithdrawalTime */\n      0x0a\n        /* \"JaiHo/system-contracts/Staking.sol\":12480:12509  rewardWithdrawalTime[_staker] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"JaiHo/system-contracts/Staking.sol\":12352:12369  uint256 valReward */\n      dup2\n      swap1\n      dup2\n      swap1\n      dup2\n      swap1\n        /* \"JaiHo/system-contracts/Staking.sol\":12480:12513  rewardWithdrawalTime[_staker] > 0 */\n      iszero\n        /* \"JaiHo/system-contracts/Staking.sol\":12477:12632  if(rewardWithdrawalTime[_staker] > 0)... */\n      tag_363\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"JaiHo/system-contracts/Staking.sol\":12602:12631  rewardWithdrawalTime[_staker] */\n      dup6\n      and\n        /* \"JaiHo/system-contracts/Staking.sol\":12581:12632  reflectionPercentSum[rewardWithdrawalTime[_staker]] */\n      0x00\n        /* \"JaiHo/system-contracts/Staking.sol\":12602:12631  rewardWithdrawalTime[_staker] */\n      swap1\n      dup2\n      mstore\n        /* \"JaiHo/system-contracts/Staking.sol\":12602:12622  rewardWithdrawalTime */\n      0x0a\n        /* \"JaiHo/system-contracts/Staking.sol\":12602:12631  rewardWithdrawalTime[_staker] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sload\n        /* \"JaiHo/system-contracts/Staking.sol\":12581:12632  reflectionPercentSum[rewardWithdrawalTime[_staker]] */\n      dup4\n      mstore\n        /* \"JaiHo/system-contracts/Staking.sol\":12581:12601  reflectionPercentSum */\n      0x0e\n        /* \"JaiHo/system-contracts/Staking.sol\":12581:12632  reflectionPercentSum[rewardWithdrawalTime[_staker]] */\n      swap1\n      swap2\n      mstore\n      dup1\n      dup3\n      keccak256\n      sload\n        /* \"JaiHo/system-contracts/Staking.sol\":12563:12577  lastRewardTime */\n      sload(0x0d)\n        /* \"JaiHo/system-contracts/Staking.sol\":12542:12578  reflectionPercentSum[lastRewardTime] */\n      dup4\n      mstore\n      swap2\n      keccak256\n      sload\n        /* \"JaiHo/system-contracts/Staking.sol\":12542:12632  reflectionPercentSum[lastRewardTime] - reflectionPercentSum[rewardWithdrawalTime[_staker]] */\n      tag_364\n      swap2\n        /* \"JaiHo/system-contracts/Staking.sol\":12581:12632  reflectionPercentSum[rewardWithdrawalTime[_staker]] */\n      swap1\n        /* \"JaiHo/system-contracts/Staking.sol\":12542:12632  reflectionPercentSum[lastRewardTime] - reflectionPercentSum[rewardWithdrawalTime[_staker]] */\n      tag_205\n      jump\t// in\n    tag_364:\n        /* \"JaiHo/system-contracts/Staking.sol\":12527:12632  validPercent = reflectionPercentSum[lastRewardTime] - reflectionPercentSum[rewardWithdrawalTime[_staker]] */\n      swap2\n      pop\n        /* \"JaiHo/system-contracts/Staking.sol\":12477:12632  if(rewardWithdrawalTime[_staker] > 0)... */\n    tag_363:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"JaiHo/system-contracts/Staking.sol\":12730:12751  valStakeTime[_staker] */\n      dup6\n      and\n        /* \"JaiHo/system-contracts/Staking.sol\":12709:12752  reflectionPercentSum[valStakeTime[_staker]] */\n      0x00\n        /* \"JaiHo/system-contracts/Staking.sol\":12730:12751  valStakeTime[_staker] */\n      swap1\n      dup2\n      mstore\n        /* \"JaiHo/system-contracts/Staking.sol\":12730:12742  valStakeTime */\n      0x0c\n        /* \"JaiHo/system-contracts/Staking.sol\":12730:12751  valStakeTime[_staker] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sload\n        /* \"JaiHo/system-contracts/Staking.sol\":12709:12752  reflectionPercentSum[valStakeTime[_staker]] */\n      dup4\n      mstore\n        /* \"JaiHo/system-contracts/Staking.sol\":12709:12729  reflectionPercentSum */\n      0x0e\n        /* \"JaiHo/system-contracts/Staking.sol\":12709:12752  reflectionPercentSum[valStakeTime[_staker]] */\n      swap1\n      swap2\n      mstore\n      dup1\n      dup3\n      keccak256\n      sload\n        /* \"JaiHo/system-contracts/Staking.sol\":12691:12705  lastRewardTime */\n      sload(0x0d)\n        /* \"JaiHo/system-contracts/Staking.sol\":12670:12706  reflectionPercentSum[lastRewardTime] */\n      dup4\n      mstore\n      swap2\n      keccak256\n      sload\n        /* \"JaiHo/system-contracts/Staking.sol\":12670:12752  reflectionPercentSum[lastRewardTime] - reflectionPercentSum[valStakeTime[_staker]] */\n      tag_365\n      swap2\n        /* \"JaiHo/system-contracts/Staking.sol\":12709:12752  reflectionPercentSum[valStakeTime[_staker]] */\n      swap1\n        /* \"JaiHo/system-contracts/Staking.sol\":12670:12752  reflectionPercentSum[lastRewardTime] - reflectionPercentSum[valStakeTime[_staker]] */\n      tag_205\n      jump\t// in\n    tag_365:\n        /* \"JaiHo/system-contracts/Staking.sol\":12811:12826  valDataContract */\n      sload(0x01)\n        /* \"JaiHo/system-contracts/Staking.sol\":12811:12866  valDataContract.validatorSpecificInfo2(_staker,_staker) */\n      mload(0x40)\n      shl(0xe0, 0x64877981)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":6974:6989   */\n      dup9\n      dup2\n      and\n        /* \"JaiHo/system-contracts/Staking.sol\":12811:12866  valDataContract.validatorSpecificInfo2(_staker,_staker) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":6956:6990   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":7006:7024   */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":6999:7042   */\n      mstore\n        /* \"JaiHo/system-contracts/Staking.sol\":12646:12752  validValidatorPercent = reflectionPercentSum[lastRewardTime] - reflectionPercentSum[valStakeTime[_staker]] */\n      swap3\n      swap4\n      pop\n        /* \"JaiHo/system-contracts/Staking.sol\":12768:12797  uint256 validatorsStakedCoins */\n      0x00\n      swap3\n        /* \"JaiHo/system-contracts/Staking.sol\":12811:12826  valDataContract */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"JaiHo/system-contracts/Staking.sol\":12811:12849  valDataContract.validatorSpecificInfo2 */\n      0x64877981\n      swap1\n        /* \"#utility.yul\":6891:6909   */\n      0x44\n      add\n        /* \"JaiHo/system-contracts/Staking.sol\":12811:12866  valDataContract.validatorSpecificInfo2(_staker,_staker) */\n      0xc0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_368\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_368:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_369\n      swap2\n      swap1\n      tag_278\n      jump\t// in\n    tag_369:\n        /* \"JaiHo/system-contracts/Staking.sol\":12767:12866  (uint256 validatorsStakedCoins, , , , ,)  = valDataContract.validatorSpecificInfo2(_staker,_staker) */\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"JaiHo/system-contracts/Staking.sol\":12923:12924  0 */\n      0x00\n        /* \"JaiHo/system-contracts/Staking.sol\":12899:12920  validValidatorPercent */\n      dup3\n        /* \"JaiHo/system-contracts/Staking.sol\":12884:12896  validPercent */\n      dup5\n        /* \"JaiHo/system-contracts/Staking.sol\":12884:12920  validPercent + validValidatorPercent */\n      tag_370\n      swap2\n      swap1\n      tag_210\n      jump\t// in\n    tag_370:\n        /* \"JaiHo/system-contracts/Staking.sol\":12884:12924  validPercent + validValidatorPercent > 0 */\n      gt\n        /* \"JaiHo/system-contracts/Staking.sol\":12881:13190  if(validPercent + validValidatorPercent > 0)... */\n      iszero\n      tag_371\n      jumpi\n        /* \"JaiHo/system-contracts/Staking.sol\":13016:13035  1000000000000000000 */\n      0x0de0b6b3a7640000\n        /* \"JaiHo/system-contracts/Staking.sol\":12968:13013  validatorsStakedCoins * validValidatorPercent */\n      tag_372\n        /* \"JaiHo/system-contracts/Staking.sol\":12992:13013  validValidatorPercent */\n      dup4\n        /* \"JaiHo/system-contracts/Staking.sol\":12968:12989  validatorsStakedCoins */\n      dup4\n        /* \"JaiHo/system-contracts/Staking.sol\":12968:13013  validatorsStakedCoins * validValidatorPercent */\n      tag_214\n      jump\t// in\n    tag_372:\n        /* \"JaiHo/system-contracts/Staking.sol\":12968:13035  validatorsStakedCoins * validValidatorPercent / 1000000000000000000 */\n      tag_373\n      swap2\n      swap1\n      tag_216\n      jump\t// in\n    tag_373:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"JaiHo/system-contracts/Staking.sol\":13068:13087  stakerInfo[_staker] */\n      dup8\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"JaiHo/system-contracts/Staking.sol\":13068:13078  stakerInfo */\n      0x02\n        /* \"JaiHo/system-contracts/Staking.sol\":13068:13087  stakerInfo[_staker] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"JaiHo/system-contracts/Staking.sol\":12956:13035  valReward = validatorsStakedCoins * validValidatorPercent / 1000000000000000000 */\n      swap1\n      swap6\n      pop\n        /* \"JaiHo/system-contracts/Staking.sol\":13105:13124  1000000000000000000 */\n      0x0de0b6b3a7640000\n      swap1\n        /* \"JaiHo/system-contracts/Staking.sol\":13068:13102  stakerInfo[_staker] * validPercent */\n      tag_374\n      swap1\n        /* \"JaiHo/system-contracts/Staking.sol\":13090:13102  validPercent */\n      dup6\n      swap1\n        /* \"JaiHo/system-contracts/Staking.sol\":13068:13102  stakerInfo[_staker] * validPercent */\n      tag_214\n      jump\t// in\n    tag_374:\n        /* \"JaiHo/system-contracts/Staking.sol\":13068:13124  stakerInfo[_staker] * validPercent / 1000000000000000000 */\n      tag_375\n      swap2\n      swap1\n      tag_216\n      jump\t// in\n    tag_375:\n        /* \"JaiHo/system-contracts/Staking.sol\":13053:13124  stakerReward = stakerInfo[_staker] * validPercent / 1000000000000000000 */\n      swap4\n      pop\n        /* \"JaiHo/system-contracts/Staking.sol\":13142:13174  return (valReward, stakerReward) */\n      pop\n      pop\n      pop\n        /* \"JaiHo/system-contracts/Staking.sol\":12290:13219  function viewStakeReward(address _staker) public view returns(uint256 valReward, uint256 stakerReward){... */\n      swap2\n      pop\n      swap2\n      jump\t// out\n        /* \"JaiHo/system-contracts/Staking.sol\":12881:13190  if(validPercent + validValidatorPercent > 0)... */\n    tag_371:\n      pop\n        /* \"JaiHo/system-contracts/Staking.sol\":13207:13208  0 */\n      0x00\n      swap6\n      dup7\n      swap6\n      pop\n        /* \"JaiHo/system-contracts/Staking.sol\":12290:13219  function viewStakeReward(address _staker) public view returns(uint256 valReward, uint256 stakerReward){... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"JaiHo/system-contracts/Staking.sol\":13348:13570  function updateMinimalStakingCoin(uint256 _MinimalStakingCoin... */\n    tag_181:\n        /* \"JaiHo/system-contracts/Staking.sol\":1748:1761  _checkOwner() */\n      tag_377\n        /* \"JaiHo/system-contracts/Staking.sol\":1748:1759  _checkOwner */\n      tag_194\n        /* \"JaiHo/system-contracts/Staking.sol\":1748:1761  _checkOwner() */\n      jump\t// in\n    tag_377:\n        /* \"JaiHo/system-contracts/Staking.sol\":13481:13482  0 */\n      0x00\n        /* \"JaiHo/system-contracts/Staking.sol\":13459:13478  _MinimalStakingCoin */\n      dup2\n        /* \"JaiHo/system-contracts/Staking.sol\":13459:13482  _MinimalStakingCoin > 0 */\n      gt\n        /* \"JaiHo/system-contracts/Staking.sol\":13451:13515  require(_MinimalStakingCoin > 0, 'Incorrect MinimalStakingCoin') */\n      tag_379\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":15562:15564   */\n      0x20\n        /* \"JaiHo/system-contracts/Staking.sol\":13451:13515  require(_MinimalStakingCoin > 0, 'Incorrect MinimalStakingCoin') */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":15544:15565   */\n      mstore\n        /* \"#utility.yul\":15601:15603   */\n      0x1c\n        /* \"#utility.yul\":15581:15599   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":15574:15604   */\n      mstore\n        /* \"#utility.yul\":15640:15670   */\n      0x496e636f7272656374204d696e696d616c5374616b696e67436f696e00000000\n        /* \"#utility.yul\":15620:15638   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":15613:15671   */\n      mstore\n        /* \"#utility.yul\":15688:15706   */\n      0x64\n      add\n        /* \"JaiHo/system-contracts/Staking.sol\":13451:13515  require(_MinimalStakingCoin > 0, 'Incorrect MinimalStakingCoin') */\n      tag_197\n        /* \"#utility.yul\":15360:15712   */\n      jump\n        /* \"JaiHo/system-contracts/Staking.sol\":13451:13515  require(_MinimalStakingCoin > 0, 'Incorrect MinimalStakingCoin') */\n    tag_379:\n        /* \"JaiHo/system-contracts/Staking.sol\":13523:13541  MinimalStakingCoin */\n      0x03\n        /* \"JaiHo/system-contracts/Staking.sol\":13523:13563  MinimalStakingCoin = _MinimalStakingCoin */\n      sstore\n        /* \"JaiHo/system-contracts/Staking.sol\":13348:13570  function updateMinimalStakingCoin(uint256 _MinimalStakingCoin... */\n      jump\t// out\n        /* \"JaiHo/system-contracts/Staking.sol\":4583:4616  address[] public currentStakerSet */\n    tag_185:\n      0x05\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_382\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_382:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n      pop\n      dup2\n      jump\t// out\n        /* \"JaiHo/system-contracts/Staking.sol\":2013:2143  function _checkOwner() internal view virtual {... */\n    tag_194:\n        /* \"JaiHo/system-contracts/Staking.sol\":1901:1908  address */\n      0x00\n        /* \"JaiHo/system-contracts/Staking.sol\":1927:1933  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"JaiHo/system-contracts/Staking.sol\":665:675  msg.sender */\n      caller\n        /* \"JaiHo/system-contracts/Staking.sol\":2076:2099  owner() == _msgSender() */\n      eq\n        /* \"JaiHo/system-contracts/Staking.sol\":2068:2136  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_267\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":15919:15921   */\n      0x20\n        /* \"JaiHo/system-contracts/Staking.sol\":2068:2136  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":15901:15922   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":15938:15956   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":15931:15961   */\n      mstore\n        /* \"#utility.yul\":15997:16031   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":15977:15995   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":15970:16032   */\n      mstore\n        /* \"#utility.yul\":16049:16067   */\n      0x64\n      add\n        /* \"JaiHo/system-contracts/Staking.sol\":2068:2136  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_197\n        /* \"#utility.yul\":15717:16073   */\n      jump\n        /* \"JaiHo/system-contracts/Staking.sol\":10248:10855  function removeStakerFromCurrrentSet(address staker) private {... */\n    tag_208:\n        /* \"JaiHo/system-contracts/Staking.sol\":10337:10346  uint256 i */\n      0x00\n        /* \"JaiHo/system-contracts/Staking.sol\":10319:10849  for (... */\n    tag_392:\n        /* \"JaiHo/system-contracts/Staking.sol\":10368:10384  currentStakerSet */\n      0x05\n        /* \"JaiHo/system-contracts/Staking.sol\":10368:10391  currentStakerSet.length */\n      sload\n        /* \"JaiHo/system-contracts/Staking.sol\":10364:10391  i < currentStakerSet.length */\n      dup2\n      lt\n        /* \"JaiHo/system-contracts/Staking.sol\":10319:10849  for (... */\n      iszero\n      tag_393\n      jumpi\n        /* \"JaiHo/system-contracts/Staking.sol\":10447:10463  currentStakerSet */\n      0x05\n        /* \"JaiHo/system-contracts/Staking.sol\":10464:10465  i */\n      dup2\n        /* \"JaiHo/system-contracts/Staking.sol\":10447:10466  currentStakerSet[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_396\n      jumpi\n      tag_396\n      tag_259\n      jump\t// in\n    tag_396:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"JaiHo/system-contracts/Staking.sol\":10437:10466  staker == currentStakerSet[i] */\n      swap1\n      dup4\n      and\n      sub\n        /* \"JaiHo/system-contracts/Staking.sol\":10433:10839  if (staker == currentStakerSet[i]) {... */\n      tag_398\n      jumpi\n        /* \"JaiHo/system-contracts/Staking.sol\":10524:10540  currentStakerSet */\n      0x05\n        /* \"JaiHo/system-contracts/Staking.sol\":10524:10547  currentStakerSet.length */\n      sload\n        /* \"JaiHo/system-contracts/Staking.sol\":10524:10551  currentStakerSet.length - 1 */\n      tag_399\n      swap1\n        /* \"JaiHo/system-contracts/Staking.sol\":10550:10551  1 */\n      0x01\n      swap1\n        /* \"JaiHo/system-contracts/Staking.sol\":10524:10551  currentStakerSet.length - 1 */\n      tag_205\n      jump\t// in\n    tag_399:\n        /* \"JaiHo/system-contracts/Staking.sol\":10519:10520  i */\n      dup2\n        /* \"JaiHo/system-contracts/Staking.sol\":10519:10551  i != currentStakerSet.length - 1 */\n      eq\n        /* \"JaiHo/system-contracts/Staking.sol\":10515:10686  if (i != currentStakerSet.length - 1) {... */\n      tag_400\n      jumpi\n        /* \"JaiHo/system-contracts/Staking.sol\":10597:10613  currentStakerSet */\n      0x05\n        /* \"JaiHo/system-contracts/Staking.sol\":10614:10662  currentStakerSet... */\n      dup1\n      sload\n        /* \"JaiHo/system-contracts/Staking.sol\":10614:10666  currentStakerSet... */\n      tag_401\n      swap1\n        /* \"JaiHo/system-contracts/Staking.sol\":10665:10666  1 */\n      0x01\n      swap1\n        /* \"JaiHo/system-contracts/Staking.sol\":10614:10666  currentStakerSet... */\n      tag_205\n      jump\t// in\n    tag_401:\n        /* \"JaiHo/system-contracts/Staking.sol\":10597:10667  currentStakerSet[currentStakerSet... */\n      dup2\n      sload\n      dup2\n      lt\n      tag_403\n      jumpi\n      tag_403\n      tag_259\n      jump\t// in\n    tag_403:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sload\n        /* \"JaiHo/system-contracts/Staking.sol\":10575:10591  currentStakerSet */\n      0x05\n        /* \"JaiHo/system-contracts/Staking.sol\":10575:10594  currentStakerSet[i] */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"JaiHo/system-contracts/Staking.sol\":10597:10667  currentStakerSet[currentStakerSet... */\n      swap1\n      swap3\n      and\n      swap2\n        /* \"JaiHo/system-contracts/Staking.sol\":10592:10593  i */\n      dup4\n      swap1\n        /* \"JaiHo/system-contracts/Staking.sol\":10575:10594  currentStakerSet[i] */\n      dup2\n      lt\n      tag_406\n      jumpi\n      tag_406\n      tag_259\n      jump\t// in\n    tag_406:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n        /* \"JaiHo/system-contracts/Staking.sol\":10575:10667  currentStakerSet[i] = currentStakerSet[currentStakerSet... */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n      mul\n      not\n      and\n      swap1\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"JaiHo/system-contracts/Staking.sol\":10515:10686  if (i != currentStakerSet.length - 1) {... */\n    tag_400:\n        /* \"JaiHo/system-contracts/Staking.sol\":10704:10720  currentStakerSet */\n      0x05\n        /* \"JaiHo/system-contracts/Staking.sol\":10704:10726  currentStakerSet.pop() */\n      dup1\n      sload\n      dup1\n      tag_409\n      jumpi\n      tag_409\n      tag_410\n      jump\t// in\n    tag_409:\n      0x00\n      dup3\n      dup2\n      mstore\n      0x20\n      swap1\n      keccak256\n      dup2\n      add\n      not(0x00)\n      swap1\n      dup2\n      add\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap1\n      sstore\n      add\n      swap1\n      sstore\n        /* \"JaiHo/system-contracts/Staking.sol\":10749:10800  LogRemoveFromCurrentStaker(staker, block.timestamp) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      swap1\n      0x77f1de51ae9c845b4fff5f1512c8736ea703337fe77421649a51f6188d3470b2\n      swap1\n      tag_412\n      swap1\n        /* \"JaiHo/system-contracts/Staking.sol\":10784:10799  block.timestamp */\n      timestamp\n        /* \"#utility.yul\":449:474   */\n      dup2\n      mstore\n        /* \"#utility.yul\":437:439   */\n      0x20\n        /* \"#utility.yul\":422:440   */\n      add\n      swap1\n        /* \"#utility.yul\":303:480   */\n      jump\n        /* \"JaiHo/system-contracts/Staking.sol\":10749:10800  LogRemoveFromCurrentStaker(staker, block.timestamp) */\n    tag_412:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"JaiHo/system-contracts/Staking.sol\":10319:10849  for (... */\n      pop\n        /* \"JaiHo/system-contracts/Staking.sol\":10248:10855  function removeStakerFromCurrrentSet(address staker) private {... */\n      pop\n      jump\t// out\n        /* \"JaiHo/system-contracts/Staking.sol\":10433:10839  if (staker == currentStakerSet[i]) {... */\n    tag_398:\n        /* \"JaiHo/system-contracts/Staking.sol\":10405:10408  i++ */\n      dup1\n      tag_413\n      dup2\n      tag_263\n      jump\t// in\n    tag_413:\n      swap2\n      pop\n      pop\n        /* \"JaiHo/system-contracts/Staking.sol\":10319:10849  for (... */\n      jump(tag_392)\n    tag_393:\n      pop\n        /* \"JaiHo/system-contracts/Staking.sol\":10248:10855  function removeStakerFromCurrrentSet(address staker) private {... */\n      pop\n      jump\t// out\n        /* \"JaiHo/system-contracts/Staking.sol\":3121:3308  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_268:\n        /* \"JaiHo/system-contracts/Staking.sol\":3194:3210  address oldOwner */\n      0x00\n        /* \"JaiHo/system-contracts/Staking.sol\":3213:3219  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"JaiHo/system-contracts/Staking.sol\":3229:3246  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"JaiHo/system-contracts/Staking.sol\":3261:3301  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"JaiHo/system-contracts/Staking.sol\":3213:3219  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"JaiHo/system-contracts/Staking.sol\":3261:3301  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"JaiHo/system-contracts/Staking.sol\":3194:3210  address oldOwner */\n      swap1\n        /* \"JaiHo/system-contracts/Staking.sol\":3261:3301  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"JaiHo/system-contracts/Staking.sol\":3184:3308  {... */\n      pop\n        /* \"JaiHo/system-contracts/Staking.sol\":3121:3308  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"JaiHo/system-contracts/Staking.sol\":11595:12021  function getTotalStakeOfActiveStakersExcept(address sta)... */\n    tag_301:\n        /* \"JaiHo/system-contracts/Staking.sol\":11698:11711  uint256 total */\n      0x00\n        /* \"JaiHo/system-contracts/Staking.sol\":11713:11724  uint256 len */\n      dup1\n        /* \"JaiHo/system-contracts/Staking.sol\":11745:11754  uint256 i */\n      0x00\n        /* \"JaiHo/system-contracts/Staking.sol\":11740:11985  for (uint256 i = 0; i < currentStakerSet.length; i++) {... */\n    tag_416:\n        /* \"JaiHo/system-contracts/Staking.sol\":11764:11780  currentStakerSet */\n      0x05\n        /* \"JaiHo/system-contracts/Staking.sol\":11764:11787  currentStakerSet.length */\n      sload\n        /* \"JaiHo/system-contracts/Staking.sol\":11760:11787  i < currentStakerSet.length */\n      dup2\n      lt\n        /* \"JaiHo/system-contracts/Staking.sol\":11740:11985  for (uint256 i = 0; i < currentStakerSet.length; i++) {... */\n      iszero\n      tag_417\n      jumpi\n        /* \"JaiHo/system-contracts/Staking.sol\":11836:11852  currentStakerSet */\n      0x05\n        /* \"JaiHo/system-contracts/Staking.sol\":11853:11854  i */\n      dup2\n        /* \"JaiHo/system-contracts/Staking.sol\":11836:11855  currentStakerSet[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_420\n      jumpi\n      tag_420\n      tag_259\n      jump\t// in\n    tag_420:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"JaiHo/system-contracts/Staking.sol\":11829:11855  sta != currentStakerSet[i] */\n      dup6\n      dup2\n      and\n        /* \"JaiHo/system-contracts/Staking.sol\":11836:11855  currentStakerSet[i] */\n      swap2\n      and\n        /* \"JaiHo/system-contracts/Staking.sol\":11829:11855  sta != currentStakerSet[i] */\n      eq\n        /* \"JaiHo/system-contracts/Staking.sol\":11808:11975  if (... */\n      tag_422\n      jumpi\n        /* \"JaiHo/system-contracts/Staking.sol\":11905:11915  stakerInfo */\n      0x02\n        /* \"JaiHo/system-contracts/Staking.sol\":11905:11936  stakerInfo[currentStakerSet[i]] */\n      0x00\n        /* \"JaiHo/system-contracts/Staking.sol\":11916:11932  currentStakerSet */\n      0x05\n        /* \"JaiHo/system-contracts/Staking.sol\":11933:11934  i */\n      dup4\n        /* \"JaiHo/system-contracts/Staking.sol\":11916:11935  currentStakerSet[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_424\n      jumpi\n      tag_424\n      tag_259\n      jump\t// in\n    tag_424:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n      swap1\n      swap2\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"JaiHo/system-contracts/Staking.sol\":11905:11936  stakerInfo[currentStakerSet[i]] */\n      dup4\n      mstore\n      dup3\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x40\n      add\n      swap1\n      keccak256\n      sload\n        /* \"JaiHo/system-contracts/Staking.sol\":11896:11937  total + (stakerInfo[currentStakerSet[i]]) */\n      tag_426\n      swap1\n        /* \"JaiHo/system-contracts/Staking.sol\":11896:11901  total */\n      dup5\n        /* \"JaiHo/system-contracts/Staking.sol\":11896:11937  total + (stakerInfo[currentStakerSet[i]]) */\n      tag_210\n      jump\t// in\n    tag_426:\n        /* \"JaiHo/system-contracts/Staking.sol\":11888:11937  total = total + (stakerInfo[currentStakerSet[i]]) */\n      swap3\n      pop\n        /* \"JaiHo/system-contracts/Staking.sol\":11955:11960  len++ */\n      dup2\n      tag_427\n      dup2\n      tag_263\n      jump\t// in\n    tag_427:\n      swap3\n      pop\n      pop\n        /* \"JaiHo/system-contracts/Staking.sol\":11808:11975  if (... */\n    tag_422:\n        /* \"JaiHo/system-contracts/Staking.sol\":11789:11792  i++ */\n      dup1\n      tag_428\n      dup2\n      tag_263\n      jump\t// in\n    tag_428:\n      swap2\n      pop\n      pop\n        /* \"JaiHo/system-contracts/Staking.sol\":11740:11985  for (uint256 i = 0; i < currentStakerSet.length; i++) {... */\n      jump(tag_416)\n    tag_417:\n      pop\n        /* \"JaiHo/system-contracts/Staking.sol\":11595:12021  function getTotalStakeOfActiveStakersExcept(address sta)... */\n      swap2\n      pop\n      swap2\n      jump\t// out\n        /* \"#utility.yul\":14:298   */\n    tag_45:\n        /* \"#utility.yul\":72:78   */\n      0x00\n        /* \"#utility.yul\":125:127   */\n      0x20\n        /* \"#utility.yul\":113:122   */\n      dup3\n        /* \"#utility.yul\":104:111   */\n      dup5\n        /* \"#utility.yul\":100:123   */\n      sub\n        /* \"#utility.yul\":96:128   */\n      slt\n        /* \"#utility.yul\":93:145   */\n      iszero\n      tag_442\n      jumpi\n        /* \"#utility.yul\":141:142   */\n      0x00\n        /* \"#utility.yul\":138:139   */\n      dup1\n        /* \"#utility.yul\":131:143   */\n      revert\n        /* \"#utility.yul\":93:145   */\n    tag_442:\n        /* \"#utility.yul\":180:189   */\n      dup2\n        /* \"#utility.yul\":167:190   */\n      calldataload\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":223:228   */\n      dup2\n        /* \"#utility.yul\":219:249   */\n      and\n        /* \"#utility.yul\":212:217   */\n      dup2\n        /* \"#utility.yul\":209:250   */\n      eq\n        /* \"#utility.yul\":199:268   */\n      tag_443\n      jumpi\n        /* \"#utility.yul\":264:265   */\n      0x00\n        /* \"#utility.yul\":261:262   */\n      dup1\n        /* \"#utility.yul\":254:266   */\n      revert\n        /* \"#utility.yul\":199:268   */\n    tag_443:\n        /* \"#utility.yul\":287:292   */\n      swap4\n        /* \"#utility.yul\":14:298   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":485:616   */\n    tag_430:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":560:591   */\n      dup2\n      and\n        /* \"#utility.yul\":550:592   */\n      dup2\n      eq\n        /* \"#utility.yul\":540:610   */\n      tag_344\n      jumpi\n        /* \"#utility.yul\":606:607   */\n      0x00\n        /* \"#utility.yul\":603:604   */\n      dup1\n        /* \"#utility.yul\":596:608   */\n      revert\n        /* \"#utility.yul\":621:868   */\n    tag_55:\n        /* \"#utility.yul\":680:686   */\n      0x00\n        /* \"#utility.yul\":733:735   */\n      0x20\n        /* \"#utility.yul\":721:730   */\n      dup3\n        /* \"#utility.yul\":712:719   */\n      dup5\n        /* \"#utility.yul\":708:731   */\n      sub\n        /* \"#utility.yul\":704:736   */\n      slt\n        /* \"#utility.yul\":701:753   */\n      iszero\n      tag_448\n      jumpi\n        /* \"#utility.yul\":749:750   */\n      0x00\n        /* \"#utility.yul\":746:747   */\n      dup1\n        /* \"#utility.yul\":739:751   */\n      revert\n        /* \"#utility.yul\":701:753   */\n    tag_448:\n        /* \"#utility.yul\":788:797   */\n      dup2\n        /* \"#utility.yul\":775:798   */\n      calldataload\n        /* \"#utility.yul\":807:838   */\n      tag_443\n        /* \"#utility.yul\":832:837   */\n      dup2\n        /* \"#utility.yul\":807:838   */\n      tag_430\n      jump\t// in\n        /* \"#utility.yul\":1065:1245   */\n    tag_74:\n        /* \"#utility.yul\":1124:1130   */\n      0x00\n        /* \"#utility.yul\":1177:1179   */\n      0x20\n        /* \"#utility.yul\":1165:1174   */\n      dup3\n        /* \"#utility.yul\":1156:1163   */\n      dup5\n        /* \"#utility.yul\":1152:1175   */\n      sub\n        /* \"#utility.yul\":1148:1180   */\n      slt\n        /* \"#utility.yul\":1145:1197   */\n      iszero\n      tag_452\n      jumpi\n        /* \"#utility.yul\":1193:1194   */\n      0x00\n        /* \"#utility.yul\":1190:1191   */\n      dup1\n        /* \"#utility.yul\":1183:1195   */\n      revert\n        /* \"#utility.yul\":1145:1197   */\n    tag_452:\n      pop\n        /* \"#utility.yul\":1216:1239   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1065:1245   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1458:2116   */\n    tag_118:\n        /* \"#utility.yul\":1629:1631   */\n      0x20\n        /* \"#utility.yul\":1681:1702   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":1751:1764   */\n      dup3\n      mload\n        /* \"#utility.yul\":1654:1672   */\n      dup3\n      dup3\n      add\n        /* \"#utility.yul\":1773:1795   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":1600:1604   */\n      0x00\n      swap2\n        /* \"#utility.yul\":1629:1631   */\n      swap1\n        /* \"#utility.yul\":1852:1867   */\n      dup5\n      dup3\n      add\n      swap1\n        /* \"#utility.yul\":1826:1828   */\n      0x40\n        /* \"#utility.yul\":1811:1829   */\n      dup6\n      add\n      swap1\n        /* \"#utility.yul\":1600:1604   */\n      dup5\n        /* \"#utility.yul\":1895:2090   */\n    tag_455:\n        /* \"#utility.yul\":1909:1915   */\n      dup2\n        /* \"#utility.yul\":1906:1907   */\n      dup2\n        /* \"#utility.yul\":1903:1916   */\n      lt\n        /* \"#utility.yul\":1895:2090   */\n      iszero\n      tag_457\n      jumpi\n        /* \"#utility.yul\":1974:1987   */\n      dup4\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1970:2009   */\n      and\n        /* \"#utility.yul\":1958:2010   */\n      dup4\n      mstore\n        /* \"#utility.yul\":2065:2080   */\n      swap3\n      dup5\n      add\n      swap3\n        /* \"#utility.yul\":2030:2042   */\n      swap2\n      dup5\n      add\n      swap2\n        /* \"#utility.yul\":2006:2007   */\n      0x01\n        /* \"#utility.yul\":1924:1933   */\n      add\n        /* \"#utility.yul\":1895:2090   */\n      jump(tag_455)\n    tag_457:\n      pop\n        /* \"#utility.yul\":2107:2110   */\n      swap1\n      swap7\n        /* \"#utility.yul\":1458:2116   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2121:2436   */\n    tag_122:\n        /* \"#utility.yul\":2189:2195   */\n      0x00\n        /* \"#utility.yul\":2197:2203   */\n      dup1\n        /* \"#utility.yul\":2250:2252   */\n      0x40\n        /* \"#utility.yul\":2238:2247   */\n      dup4\n        /* \"#utility.yul\":2229:2236   */\n      dup6\n        /* \"#utility.yul\":2225:2248   */\n      sub\n        /* \"#utility.yul\":2221:2253   */\n      slt\n        /* \"#utility.yul\":2218:2270   */\n      iszero\n      tag_459\n      jumpi\n        /* \"#utility.yul\":2266:2267   */\n      0x00\n        /* \"#utility.yul\":2263:2264   */\n      dup1\n        /* \"#utility.yul\":2256:2268   */\n      revert\n        /* \"#utility.yul\":2218:2270   */\n    tag_459:\n        /* \"#utility.yul\":2305:2314   */\n      dup3\n        /* \"#utility.yul\":2292:2315   */\n      calldataload\n        /* \"#utility.yul\":2324:2355   */\n      tag_460\n        /* \"#utility.yul\":2349:2354   */\n      dup2\n        /* \"#utility.yul\":2324:2355   */\n      tag_430\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":2374:2379   */\n      swap5\n        /* \"#utility.yul\":2426:2428   */\n      0x20\n        /* \"#utility.yul\":2411:2429   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":2398:2430   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":2121:2436   */\n      jump\t// out\n        /* \"#utility.yul\":2634:2906   */\n    tag_144:\n        /* \"#utility.yul\":2692:2698   */\n      0x00\n        /* \"#utility.yul\":2745:2747   */\n      0x20\n        /* \"#utility.yul\":2733:2742   */\n      dup3\n        /* \"#utility.yul\":2724:2731   */\n      dup5\n        /* \"#utility.yul\":2720:2743   */\n      sub\n        /* \"#utility.yul\":2716:2748   */\n      slt\n        /* \"#utility.yul\":2713:2765   */\n      iszero\n      tag_463\n      jumpi\n        /* \"#utility.yul\":2761:2762   */\n      0x00\n        /* \"#utility.yul\":2758:2759   */\n      dup1\n        /* \"#utility.yul\":2751:2763   */\n      revert\n        /* \"#utility.yul\":2713:2765   */\n    tag_463:\n        /* \"#utility.yul\":2800:2809   */\n      dup2\n        /* \"#utility.yul\":2787:2810   */\n      calldataload\n        /* \"#utility.yul\":2850:2856   */\n      0xffff\n        /* \"#utility.yul\":2843:2848   */\n      dup2\n        /* \"#utility.yul\":2839:2857   */\n      and\n        /* \"#utility.yul\":2832:2837   */\n      dup2\n        /* \"#utility.yul\":2829:2858   */\n      eq\n        /* \"#utility.yul\":2819:2876   */\n      tag_443\n      jumpi\n        /* \"#utility.yul\":2872:2873   */\n      0x00\n        /* \"#utility.yul\":2869:2870   */\n      dup1\n        /* \"#utility.yul\":2862:2874   */\n      revert\n        /* \"#utility.yul\":4307:4434   */\n    tag_431:\n        /* \"#utility.yul\":4368:4378   */\n      0x4e487b71\n        /* \"#utility.yul\":4363:4366   */\n      0xe0\n        /* \"#utility.yul\":4359:4379   */\n      shl\n        /* \"#utility.yul\":4356:4357   */\n      0x00\n        /* \"#utility.yul\":4349:4380   */\n      mstore\n        /* \"#utility.yul\":4399:4403   */\n      0x11\n        /* \"#utility.yul\":4396:4397   */\n      0x04\n        /* \"#utility.yul\":4389:4404   */\n      mstore\n        /* \"#utility.yul\":4423:4427   */\n      0x24\n        /* \"#utility.yul\":4420:4421   */\n      0x00\n        /* \"#utility.yul\":4413:4428   */\n      revert\n        /* \"#utility.yul\":4439:4567   */\n    tag_205:\n        /* \"#utility.yul\":4506:4515   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":4527:4538   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":4524:4561   */\n      iszero\n      tag_473\n      jumpi\n        /* \"#utility.yul\":4541:4559   */\n      tag_473\n      tag_431\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":4439:4567   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4572:4697   */\n    tag_210:\n        /* \"#utility.yul\":4637:4646   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":4658:4668   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":4655:4691   */\n      iszero\n      tag_473\n      jumpi\n        /* \"#utility.yul\":4671:4689   */\n      tag_473\n      tag_431\n      jump\t// in\n        /* \"#utility.yul\":4702:4870   */\n    tag_214:\n        /* \"#utility.yul\":4775:4784   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":4806:4815   */\n      dup2\n      iszero\n        /* \"#utility.yul\":4823:4838   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":4817:4839   */\n      dup5\n      eq\n        /* \"#utility.yul\":4803:4840   */\n      or\n        /* \"#utility.yul\":4793:4864   */\n      tag_473\n      jumpi\n        /* \"#utility.yul\":4844:4862   */\n      tag_473\n      tag_431\n      jump\t// in\n        /* \"#utility.yul\":4875:5092   */\n    tag_216:\n        /* \"#utility.yul\":4915:4916   */\n      0x00\n        /* \"#utility.yul\":4941:4942   */\n      dup3\n        /* \"#utility.yul\":4931:5063   */\n      tag_481\n      jumpi\n        /* \"#utility.yul\":4985:4995   */\n      0x4e487b71\n        /* \"#utility.yul\":4980:4983   */\n      0xe0\n        /* \"#utility.yul\":4976:4996   */\n      shl\n        /* \"#utility.yul\":4973:4974   */\n      0x00\n        /* \"#utility.yul\":4966:4997   */\n      mstore\n        /* \"#utility.yul\":5020:5024   */\n      0x12\n        /* \"#utility.yul\":5017:5018   */\n      0x04\n        /* \"#utility.yul\":5010:5025   */\n      mstore\n        /* \"#utility.yul\":5048:5052   */\n      0x24\n        /* \"#utility.yul\":5045:5046   */\n      0x00\n        /* \"#utility.yul\":5038:5053   */\n      revert\n        /* \"#utility.yul\":4931:5063   */\n    tag_481:\n      pop\n        /* \"#utility.yul\":5077:5086   */\n      div\n      swap1\n        /* \"#utility.yul\":4875:5092   */\n      jump\t// out\n        /* \"#utility.yul\":6472:6599   */\n    tag_259:\n        /* \"#utility.yul\":6533:6543   */\n      0x4e487b71\n        /* \"#utility.yul\":6528:6531   */\n      0xe0\n        /* \"#utility.yul\":6524:6544   */\n      shl\n        /* \"#utility.yul\":6521:6522   */\n      0x00\n        /* \"#utility.yul\":6514:6545   */\n      mstore\n        /* \"#utility.yul\":6564:6568   */\n      0x32\n        /* \"#utility.yul\":6561:6562   */\n      0x04\n        /* \"#utility.yul\":6554:6569   */\n      mstore\n        /* \"#utility.yul\":6588:6592   */\n      0x24\n        /* \"#utility.yul\":6585:6586   */\n      0x00\n        /* \"#utility.yul\":6578:6593   */\n      revert\n        /* \"#utility.yul\":6604:6739   */\n    tag_263:\n        /* \"#utility.yul\":6643:6646   */\n      0x00\n        /* \"#utility.yul\":6664:6681   */\n      0x01\n      dup3\n      add\n        /* \"#utility.yul\":6661:6704   */\n      tag_489\n      jumpi\n        /* \"#utility.yul\":6684:6702   */\n      tag_489\n      tag_431\n      jump\t// in\n    tag_489:\n      pop\n        /* \"#utility.yul\":6731:6732   */\n      0x01\n        /* \"#utility.yul\":6720:6733   */\n      add\n      swap1\n        /* \"#utility.yul\":6604:6739   */\n      jump\t// out\n        /* \"#utility.yul\":7053:7204   */\n    tag_432:\n        /* \"#utility.yul\":7136:7149   */\n      dup1\n      mload\n        /* \"#utility.yul\":7178:7179   */\n      0x05\n        /* \"#utility.yul\":7168:7180   */\n      dup2\n      lt\n        /* \"#utility.yul\":7158:7198   */\n      tag_246\n      jumpi\n        /* \"#utility.yul\":7194:7195   */\n      0x00\n        /* \"#utility.yul\":7191:7192   */\n      dup1\n        /* \"#utility.yul\":7184:7196   */\n      revert\n        /* \"#utility.yul\":7209:7806   */\n    tag_278:\n        /* \"#utility.yul\":7334:7340   */\n      0x00\n        /* \"#utility.yul\":7342:7348   */\n      dup1\n        /* \"#utility.yul\":7350:7356   */\n      0x00\n        /* \"#utility.yul\":7358:7364   */\n      dup1\n        /* \"#utility.yul\":7366:7372   */\n      0x00\n        /* \"#utility.yul\":7374:7380   */\n      dup1\n        /* \"#utility.yul\":7427:7430   */\n      0xc0\n        /* \"#utility.yul\":7415:7424   */\n      dup8\n        /* \"#utility.yul\":7406:7413   */\n      dup10\n        /* \"#utility.yul\":7402:7425   */\n      sub\n        /* \"#utility.yul\":7398:7431   */\n      slt\n        /* \"#utility.yul\":7395:7448   */\n      iszero\n      tag_494\n      jumpi\n        /* \"#utility.yul\":7444:7445   */\n      0x00\n        /* \"#utility.yul\":7441:7442   */\n      dup1\n        /* \"#utility.yul\":7434:7446   */\n      revert\n        /* \"#utility.yul\":7395:7448   */\n    tag_494:\n        /* \"#utility.yul\":7473:7482   */\n      dup7\n        /* \"#utility.yul\":7467:7483   */\n      mload\n        /* \"#utility.yul\":7457:7483   */\n      swap6\n      pop\n        /* \"#utility.yul\":7502:7555   */\n      tag_495\n        /* \"#utility.yul\":7551:7553   */\n      0x20\n        /* \"#utility.yul\":7540:7549   */\n      dup9\n        /* \"#utility.yul\":7536:7554   */\n      add\n        /* \"#utility.yul\":7502:7555   */\n      tag_432\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":7492:7555   */\n      swap5\n      pop\n        /* \"#utility.yul\":7595:7597   */\n      0x40\n        /* \"#utility.yul\":7584:7593   */\n      dup8\n        /* \"#utility.yul\":7580:7598   */\n      add\n        /* \"#utility.yul\":7574:7599   */\n      mload\n        /* \"#utility.yul\":7564:7599   */\n      swap4\n      pop\n        /* \"#utility.yul\":7639:7641   */\n      0x60\n        /* \"#utility.yul\":7628:7637   */\n      dup8\n        /* \"#utility.yul\":7624:7642   */\n      add\n        /* \"#utility.yul\":7618:7643   */\n      mload\n        /* \"#utility.yul\":7608:7643   */\n      swap3\n      pop\n        /* \"#utility.yul\":7683:7686   */\n      0x80\n        /* \"#utility.yul\":7672:7681   */\n      dup8\n        /* \"#utility.yul\":7668:7687   */\n      add\n        /* \"#utility.yul\":7662:7688   */\n      mload\n        /* \"#utility.yul\":7652:7688   */\n      swap2\n      pop\n        /* \"#utility.yul\":7731:7734   */\n      0xa0\n        /* \"#utility.yul\":7720:7729   */\n      dup8\n        /* \"#utility.yul\":7716:7735   */\n      add\n        /* \"#utility.yul\":7710:7736   */\n      mload\n        /* \"#utility.yul\":7745:7776   */\n      tag_496\n        /* \"#utility.yul\":7770:7775   */\n      dup2\n        /* \"#utility.yul\":7745:7776   */\n      tag_430\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":7795:7800   */\n      dup1\n        /* \"#utility.yul\":7785:7800   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":7209:7806   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      jump\t// out\n        /* \"#utility.yul\":7811:7995   */\n    tag_286:\n        /* \"#utility.yul\":7881:7887   */\n      0x00\n        /* \"#utility.yul\":7934:7936   */\n      0x20\n        /* \"#utility.yul\":7922:7931   */\n      dup3\n        /* \"#utility.yul\":7913:7920   */\n      dup5\n        /* \"#utility.yul\":7909:7932   */\n      sub\n        /* \"#utility.yul\":7905:7937   */\n      slt\n        /* \"#utility.yul\":7902:7954   */\n      iszero\n      tag_498\n      jumpi\n        /* \"#utility.yul\":7950:7951   */\n      0x00\n        /* \"#utility.yul\":7947:7948   */\n      dup1\n        /* \"#utility.yul\":7940:7952   */\n      revert\n        /* \"#utility.yul\":7902:7954   */\n    tag_498:\n      pop\n        /* \"#utility.yul\":7973:7989   */\n      mload\n      swap2\n        /* \"#utility.yul\":7811:7995   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8000:8127   */\n    tag_433:\n        /* \"#utility.yul\":8061:8071   */\n      0x4e487b71\n        /* \"#utility.yul\":8056:8059   */\n      0xe0\n        /* \"#utility.yul\":8052:8072   */\n      shl\n        /* \"#utility.yul\":8049:8050   */\n      0x00\n        /* \"#utility.yul\":8042:8073   */\n      mstore\n        /* \"#utility.yul\":8092:8096   */\n      0x41\n        /* \"#utility.yul\":8089:8090   */\n      0x04\n        /* \"#utility.yul\":8082:8097   */\n      mstore\n        /* \"#utility.yul\":8116:8120   */\n      0x24\n        /* \"#utility.yul\":8113:8114   */\n      0x00\n        /* \"#utility.yul\":8106:8121   */\n      revert\n        /* \"#utility.yul\":8132:8407   */\n    tag_434:\n        /* \"#utility.yul\":8203:8205   */\n      0x40\n        /* \"#utility.yul\":8197:8206   */\n      mload\n        /* \"#utility.yul\":8268:8270   */\n      0x1f\n        /* \"#utility.yul\":8249:8262   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":8245:8272   */\n      and\n        /* \"#utility.yul\":8233:8273   */\n      dup2\n      add\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":8288:8322   */\n      dup2\n      gt\n        /* \"#utility.yul\":8324:8346   */\n      dup3\n      dup3\n      lt\n        /* \"#utility.yul\":8285:8347   */\n      or\n        /* \"#utility.yul\":8282:8370   */\n      iszero\n      tag_502\n      jumpi\n        /* \"#utility.yul\":8350:8368   */\n      tag_502\n      tag_433\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":8386:8388   */\n      0x40\n        /* \"#utility.yul\":8379:8401   */\n      mstore\n        /* \"#utility.yul\":8132:8407   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8412:8595   */\n    tag_435:\n        /* \"#utility.yul\":8472:8476   */\n      0x00\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":8497:8503   */\n      dup3\n        /* \"#utility.yul\":8494:8524   */\n      gt\n        /* \"#utility.yul\":8491:8547   */\n      iszero\n      tag_505\n      jumpi\n        /* \"#utility.yul\":8527:8545   */\n      tag_505\n      tag_433\n      jump\t// in\n    tag_505:\n      pop\n        /* \"#utility.yul\":8572:8573   */\n      0x05\n        /* \"#utility.yul\":8568:8582   */\n      shl\n        /* \"#utility.yul\":8584:8588   */\n      0x20\n        /* \"#utility.yul\":8564:8589   */\n      add\n      swap1\n        /* \"#utility.yul\":8412:8595   */\n      jump\t// out\n        /* \"#utility.yul\":8600:9334   */\n    tag_436:\n        /* \"#utility.yul\":8665:8670   */\n      0x00\n        /* \"#utility.yul\":8718:8721   */\n      dup3\n        /* \"#utility.yul\":8711:8715   */\n      0x1f\n        /* \"#utility.yul\":8703:8709   */\n      dup4\n        /* \"#utility.yul\":8699:8716   */\n      add\n        /* \"#utility.yul\":8695:8722   */\n      slt\n        /* \"#utility.yul\":8685:8740   */\n      tag_507\n      jumpi\n        /* \"#utility.yul\":8736:8737   */\n      0x00\n        /* \"#utility.yul\":8733:8734   */\n      dup1\n        /* \"#utility.yul\":8726:8738   */\n      revert\n        /* \"#utility.yul\":8685:8740   */\n    tag_507:\n        /* \"#utility.yul\":8765:8771   */\n      dup2\n        /* \"#utility.yul\":8759:8772   */\n      mload\n        /* \"#utility.yul\":8791:8795   */\n      0x20\n        /* \"#utility.yul\":8815:8875   */\n      tag_508\n        /* \"#utility.yul\":8831:8874   */\n      tag_509\n        /* \"#utility.yul\":8871:8873   */\n      dup4\n        /* \"#utility.yul\":8831:8874   */\n      tag_435\n      jump\t// in\n    tag_509:\n        /* \"#utility.yul\":8815:8875   */\n      tag_434\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":8909:8924   */\n      dup3\n      dup2\n      mstore\n        /* \"#utility.yul\":8995:8996   */\n      0x05\n        /* \"#utility.yul\":8991:9001   */\n      swap3\n      swap1\n      swap3\n      shl\n        /* \"#utility.yul\":8979:9002   */\n      dup5\n      add\n        /* \"#utility.yul\":8975:9007   */\n      dup2\n      add\n      swap2\n        /* \"#utility.yul\":8940:8952   */\n      dup2\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":9019:9034   */\n      dup7\n      dup5\n      gt\n        /* \"#utility.yul\":9016:9051   */\n      iszero\n      tag_510\n      jumpi\n        /* \"#utility.yul\":9047:9048   */\n      0x00\n        /* \"#utility.yul\":9044:9045   */\n      dup1\n        /* \"#utility.yul\":9037:9049   */\n      revert\n        /* \"#utility.yul\":9016:9051   */\n    tag_510:\n        /* \"#utility.yul\":9083:9085   */\n      dup3\n        /* \"#utility.yul\":9075:9081   */\n      dup7\n        /* \"#utility.yul\":9071:9086   */\n      add\n        /* \"#utility.yul\":9095:9305   */\n    tag_511:\n        /* \"#utility.yul\":9111:9117   */\n      dup5\n        /* \"#utility.yul\":9106:9109   */\n      dup2\n        /* \"#utility.yul\":9103:9118   */\n      lt\n        /* \"#utility.yul\":9095:9305   */\n      iszero\n      tag_513\n      jumpi\n        /* \"#utility.yul\":9184:9187   */\n      dup1\n        /* \"#utility.yul\":9178:9188   */\n      mload\n        /* \"#utility.yul\":9201:9232   */\n      tag_514\n        /* \"#utility.yul\":9226:9231   */\n      dup2\n        /* \"#utility.yul\":9201:9232   */\n      tag_430\n      jump\t// in\n    tag_514:\n        /* \"#utility.yul\":9245:9263   */\n      dup4\n      mstore\n        /* \"#utility.yul\":9283:9295   */\n      swap2\n      dup4\n      add\n      swap2\n        /* \"#utility.yul\":9128:9140   */\n      dup4\n      add\n        /* \"#utility.yul\":9095:9305   */\n      jump(tag_511)\n    tag_513:\n      pop\n        /* \"#utility.yul\":9323:9328   */\n      swap7\n        /* \"#utility.yul\":8600:9334   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9339:10030   */\n    tag_437:\n        /* \"#utility.yul\":9408:9413   */\n      0x00\n        /* \"#utility.yul\":9461:9464   */\n      dup3\n        /* \"#utility.yul\":9454:9458   */\n      0x1f\n        /* \"#utility.yul\":9446:9452   */\n      dup4\n        /* \"#utility.yul\":9442:9459   */\n      add\n        /* \"#utility.yul\":9438:9465   */\n      slt\n        /* \"#utility.yul\":9428:9483   */\n      tag_516\n      jumpi\n        /* \"#utility.yul\":9479:9480   */\n      0x00\n        /* \"#utility.yul\":9476:9477   */\n      dup1\n        /* \"#utility.yul\":9469:9481   */\n      revert\n        /* \"#utility.yul\":9428:9483   */\n    tag_516:\n        /* \"#utility.yul\":9508:9514   */\n      dup2\n        /* \"#utility.yul\":9502:9515   */\n      mload\n        /* \"#utility.yul\":9534:9538   */\n      0x20\n        /* \"#utility.yul\":9558:9618   */\n      tag_517\n        /* \"#utility.yul\":9574:9617   */\n      tag_509\n        /* \"#utility.yul\":9614:9616   */\n      dup4\n        /* \"#utility.yul\":9574:9617   */\n      tag_435\n      jump\t// in\n        /* \"#utility.yul\":9558:9618   */\n    tag_517:\n        /* \"#utility.yul\":9652:9667   */\n      dup3\n      dup2\n      mstore\n        /* \"#utility.yul\":9738:9739   */\n      0x05\n        /* \"#utility.yul\":9734:9744   */\n      swap3\n      swap1\n      swap3\n      shl\n        /* \"#utility.yul\":9722:9745   */\n      dup5\n      add\n        /* \"#utility.yul\":9718:9750   */\n      dup2\n      add\n      swap2\n        /* \"#utility.yul\":9683:9695   */\n      dup2\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":9762:9777   */\n      dup7\n      dup5\n      gt\n        /* \"#utility.yul\":9759:9794   */\n      iszero\n      tag_519\n      jumpi\n        /* \"#utility.yul\":9790:9791   */\n      0x00\n        /* \"#utility.yul\":9787:9788   */\n      dup1\n        /* \"#utility.yul\":9780:9792   */\n      revert\n        /* \"#utility.yul\":9759:9794   */\n    tag_519:\n        /* \"#utility.yul\":9826:9828   */\n      dup3\n        /* \"#utility.yul\":9818:9824   */\n      dup7\n        /* \"#utility.yul\":9814:9829   */\n      add\n        /* \"#utility.yul\":9838:10001   */\n    tag_520:\n        /* \"#utility.yul\":9854:9860   */\n      dup5\n        /* \"#utility.yul\":9849:9852   */\n      dup2\n        /* \"#utility.yul\":9846:9861   */\n      lt\n        /* \"#utility.yul\":9838:10001   */\n      iszero\n      tag_513\n      jumpi\n        /* \"#utility.yul\":9920:9958   */\n      tag_523\n        /* \"#utility.yul\":9954:9957   */\n      dup2\n        /* \"#utility.yul\":9920:9958   */\n      tag_432\n      jump\t// in\n    tag_523:\n        /* \"#utility.yul\":9908:9959   */\n      dup4\n      mstore\n        /* \"#utility.yul\":9979:9991   */\n      swap2\n      dup4\n      add\n      swap2\n        /* \"#utility.yul\":9871:9883   */\n      dup4\n      add\n        /* \"#utility.yul\":9838:10001   */\n      jump(tag_520)\n        /* \"#utility.yul\":10035:10694   */\n    tag_438:\n        /* \"#utility.yul\":10100:10105   */\n      0x00\n        /* \"#utility.yul\":10153:10156   */\n      dup3\n        /* \"#utility.yul\":10146:10150   */\n      0x1f\n        /* \"#utility.yul\":10138:10144   */\n      dup4\n        /* \"#utility.yul\":10134:10151   */\n      add\n        /* \"#utility.yul\":10130:10157   */\n      slt\n        /* \"#utility.yul\":10120:10175   */\n      tag_525\n      jumpi\n        /* \"#utility.yul\":10171:10172   */\n      0x00\n        /* \"#utility.yul\":10168:10169   */\n      dup1\n        /* \"#utility.yul\":10161:10173   */\n      revert\n        /* \"#utility.yul\":10120:10175   */\n    tag_525:\n        /* \"#utility.yul\":10200:10206   */\n      dup2\n        /* \"#utility.yul\":10194:10207   */\n      mload\n        /* \"#utility.yul\":10226:10230   */\n      0x20\n        /* \"#utility.yul\":10250:10310   */\n      tag_526\n        /* \"#utility.yul\":10266:10309   */\n      tag_509\n        /* \"#utility.yul\":10306:10308   */\n      dup4\n        /* \"#utility.yul\":10266:10309   */\n      tag_435\n      jump\t// in\n        /* \"#utility.yul\":10250:10310   */\n    tag_526:\n        /* \"#utility.yul\":10344:10359   */\n      dup3\n      dup2\n      mstore\n        /* \"#utility.yul\":10430:10431   */\n      0x05\n        /* \"#utility.yul\":10426:10436   */\n      swap3\n      swap1\n      swap3\n      shl\n        /* \"#utility.yul\":10414:10437   */\n      dup5\n      add\n        /* \"#utility.yul\":10410:10442   */\n      dup2\n      add\n      swap2\n        /* \"#utility.yul\":10375:10387   */\n      dup2\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":10454:10469   */\n      dup7\n      dup5\n      gt\n        /* \"#utility.yul\":10451:10486   */\n      iszero\n      tag_528\n      jumpi\n        /* \"#utility.yul\":10482:10483   */\n      0x00\n        /* \"#utility.yul\":10479:10480   */\n      dup1\n        /* \"#utility.yul\":10472:10484   */\n      revert\n        /* \"#utility.yul\":10451:10486   */\n    tag_528:\n        /* \"#utility.yul\":10518:10520   */\n      dup3\n        /* \"#utility.yul\":10510:10516   */\n      dup7\n        /* \"#utility.yul\":10506:10521   */\n      add\n        /* \"#utility.yul\":10530:10665   */\n    tag_529:\n        /* \"#utility.yul\":10546:10552   */\n      dup5\n        /* \"#utility.yul\":10541:10544   */\n      dup2\n        /* \"#utility.yul\":10538:10553   */\n      lt\n        /* \"#utility.yul\":10530:10665   */\n      iszero\n      tag_513\n      jumpi\n        /* \"#utility.yul\":10612:10622   */\n      dup1\n      mload\n        /* \"#utility.yul\":10600:10623   */\n      dup4\n      mstore\n        /* \"#utility.yul\":10643:10655   */\n      swap2\n      dup4\n      add\n      swap2\n        /* \"#utility.yul\":10563:10575   */\n      dup4\n      add\n        /* \"#utility.yul\":10530:10665   */\n      jump(tag_529)\n        /* \"#utility.yul\":10699:12347   */\n    tag_439:\n        /* \"#utility.yul\":10763:10768   */\n      0x00\n        /* \"#utility.yul\":10793:10797   */\n      0x1f\n        /* \"#utility.yul\":10837:10840   */\n      dup4\n        /* \"#utility.yul\":10832:10834   */\n      dup2\n        /* \"#utility.yul\":10824:10830   */\n      dup5\n        /* \"#utility.yul\":10820:10835   */\n      add\n        /* \"#utility.yul\":10816:10841   */\n      slt\n        /* \"#utility.yul\":10806:10859   */\n      tag_533\n      jumpi\n        /* \"#utility.yul\":10855:10856   */\n      0x00\n        /* \"#utility.yul\":10852:10853   */\n      dup1\n        /* \"#utility.yul\":10845:10857   */\n      revert\n        /* \"#utility.yul\":10806:10859   */\n    tag_533:\n        /* \"#utility.yul\":10884:10890   */\n      dup3\n        /* \"#utility.yul\":10878:10891   */\n      mload\n        /* \"#utility.yul\":10910:10914   */\n      0x20\n        /* \"#utility.yul\":10934:10994   */\n      tag_534\n        /* \"#utility.yul\":10950:10993   */\n      tag_509\n        /* \"#utility.yul\":10990:10992   */\n      dup4\n        /* \"#utility.yul\":10950:10993   */\n      tag_435\n      jump\t// in\n        /* \"#utility.yul\":10934:10994   */\n    tag_534:\n        /* \"#utility.yul\":11028:11043   */\n      dup3\n      dup2\n      mstore\n        /* \"#utility.yul\":11114:11115   */\n      0x05\n        /* \"#utility.yul\":11110:11120   */\n      swap3\n      swap1\n      swap3\n      shl\n        /* \"#utility.yul\":11098:11121   */\n      dup6\n      add\n        /* \"#utility.yul\":11094:11126   */\n      dup2\n      add\n      swap2\n        /* \"#utility.yul\":11059:11071   */\n      dup2\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":11138:11153   */\n      dup8\n      dup5\n      gt\n        /* \"#utility.yul\":11135:11170   */\n      iszero\n      tag_536\n      jumpi\n        /* \"#utility.yul\":11166:11167   */\n      0x00\n        /* \"#utility.yul\":11163:11164   */\n      dup1\n        /* \"#utility.yul\":11156:11168   */\n      revert\n        /* \"#utility.yul\":11135:11170   */\n    tag_536:\n        /* \"#utility.yul\":11202:11204   */\n      dup3\n        /* \"#utility.yul\":11194:11200   */\n      dup8\n        /* \"#utility.yul\":11190:11205   */\n      add\n        /* \"#utility.yul\":11214:12318   */\n    tag_537:\n        /* \"#utility.yul\":11230:11236   */\n      dup5\n        /* \"#utility.yul\":11225:11228   */\n      dup2\n        /* \"#utility.yul\":11222:11237   */\n      lt\n        /* \"#utility.yul\":11214:12318   */\n      iszero\n      tag_539\n      jumpi\n        /* \"#utility.yul\":11309:11312   */\n      dup1\n        /* \"#utility.yul\":11303:11313   */\n      mload\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":11386:11388   */\n      dup1\n        /* \"#utility.yul\":11373:11384   */\n      dup3\n        /* \"#utility.yul\":11370:11389   */\n      gt\n        /* \"#utility.yul\":11367:11476   */\n      iszero\n      tag_540\n      jumpi\n        /* \"#utility.yul\":11430:11431   */\n      0x00\n        /* \"#utility.yul\":11459:11461   */\n      dup1\n        /* \"#utility.yul\":11455:11457   */\n      dup2\n        /* \"#utility.yul\":11448:11462   */\n      revert\n        /* \"#utility.yul\":11367:11476   */\n    tag_540:\n        /* \"#utility.yul\":11511:11522   */\n      dup2\n        /* \"#utility.yul\":11503:11509   */\n      dup11\n        /* \"#utility.yul\":11499:11523   */\n      add\n        /* \"#utility.yul\":11489:11523   */\n      swap2\n      pop\n        /* \"#utility.yul\":11563:11566   */\n      dup11\n        /* \"#utility.yul\":11558:11560   */\n      0x3f\n        /* \"#utility.yul\":11554:11556   */\n      dup4\n        /* \"#utility.yul\":11550:11561   */\n      add\n        /* \"#utility.yul\":11546:11567   */\n      slt\n        /* \"#utility.yul\":11536:11655   */\n      tag_541\n      jumpi\n        /* \"#utility.yul\":11609:11610   */\n      0x00\n        /* \"#utility.yul\":11638:11640   */\n      dup1\n        /* \"#utility.yul\":11634:11636   */\n      dup2\n        /* \"#utility.yul\":11627:11641   */\n      revert\n        /* \"#utility.yul\":11536:11655   */\n    tag_541:\n        /* \"#utility.yul\":11692:11694   */\n      dup6\n        /* \"#utility.yul\":11688:11690   */\n      dup3\n        /* \"#utility.yul\":11684:11695   */\n      add\n        /* \"#utility.yul\":11678:11696   */\n      mload\n        /* \"#utility.yul\":11719:11721   */\n      dup2\n        /* \"#utility.yul\":11715:11717   */\n      dup2\n        /* \"#utility.yul\":11712:11722   */\n      gt\n        /* \"#utility.yul\":11709:11745   */\n      iszero\n      tag_543\n      jumpi\n        /* \"#utility.yul\":11725:11743   */\n      tag_543\n      tag_433\n      jump\t// in\n    tag_543:\n        /* \"#utility.yul\":11773:11824   */\n      tag_544\n        /* \"#utility.yul\":11797:11808   */\n      dup2\n      dup11\n      add\n      not(0x1f)\n        /* \"#utility.yul\":11793:11818   */\n      and\n        /* \"#utility.yul\":11789:11823   */\n      dup9\n      add\n        /* \"#utility.yul\":11773:11824   */\n      tag_434\n      jump\t// in\n    tag_544:\n        /* \"#utility.yul\":11758:11824   */\n      swap2\n      pop\n        /* \"#utility.yul\":11853:11855   */\n      dup1\n        /* \"#utility.yul\":11844:11851   */\n      dup3\n        /* \"#utility.yul\":11837:11856   */\n      mstore\n        /* \"#utility.yul\":11879:11881   */\n      0x40\n        /* \"#utility.yul\":11922:11925   */\n      dup13\n        /* \"#utility.yul\":11917:11919   */\n      dup2\n        /* \"#utility.yul\":11912:11914   */\n      dup4\n        /* \"#utility.yul\":11908:11910   */\n      dup7\n        /* \"#utility.yul\":11904:11915   */\n      add\n        /* \"#utility.yul\":11900:11920   */\n      add\n        /* \"#utility.yul\":11897:11926   */\n      gt\n        /* \"#utility.yul\":11894:12016   */\n      iszero\n      tag_545\n      jumpi\n        /* \"#utility.yul\":11968:11969   */\n      0x00\n        /* \"#utility.yul\":11998:12001   */\n      dup1\n        /* \"#utility.yul\":11993:11996   */\n      dup2\n        /* \"#utility.yul\":11986:12002   */\n      revert\n        /* \"#utility.yul\":11894:12016   */\n    tag_545:\n        /* \"#utility.yul\":12038:12039   */\n      0x00\n        /* \"#utility.yul\":12052:12194   */\n    tag_546:\n        /* \"#utility.yul\":12066:12068   */\n      dup3\n        /* \"#utility.yul\":12063:12064   */\n      dup2\n        /* \"#utility.yul\":12060:12069   */\n      lt\n        /* \"#utility.yul\":12052:12194   */\n      iszero\n      tag_548\n      jumpi\n        /* \"#utility.yul\":12163:12173   */\n      dup5\n      dup2\n      add\n        /* \"#utility.yul\":12159:12178   */\n      dup3\n      add\n        /* \"#utility.yul\":12153:12179   */\n      mload\n        /* \"#utility.yul\":12131:12146   */\n      dup5\n      dup3\n      add\n        /* \"#utility.yul\":12127:12151   */\n      dup11\n      add\n        /* \"#utility.yul\":12120:12180   */\n      mstore\n        /* \"#utility.yul\":12077:12087   */\n      dup9\n      add\n        /* \"#utility.yul\":12052:12194   */\n      jump(tag_546)\n    tag_548:\n      pop\n      pop\n        /* \"#utility.yul\":12241:12242   */\n      0x00\n        /* \"#utility.yul\":12218:12234   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":12214:12239   */\n      dup8\n      add\n        /* \"#utility.yul\":12207:12243   */\n      mstore\n        /* \"#utility.yul\":12256:12276   */\n      dup5\n      mstore\n      pop\n        /* \"#utility.yul\":12296:12308   */\n      swap2\n      dup4\n      add\n      swap2\n        /* \"#utility.yul\":11247:11259   */\n      dup4\n      add\n        /* \"#utility.yul\":11214:12318   */\n      jump(tag_537)\n    tag_539:\n      pop\n        /* \"#utility.yul\":12336:12341   */\n      swap8\n        /* \"#utility.yul\":10699:12347   */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12352:13814   */\n    tag_305:\n        /* \"#utility.yul\":12631:12637   */\n      0x00\n        /* \"#utility.yul\":12639:12645   */\n      dup1\n        /* \"#utility.yul\":12647:12653   */\n      0x00\n        /* \"#utility.yul\":12655:12661   */\n      dup1\n        /* \"#utility.yul\":12663:12669   */\n      0x00\n        /* \"#utility.yul\":12671:12677   */\n      dup1\n        /* \"#utility.yul\":12679:12685   */\n      0x00\n        /* \"#utility.yul\":12732:12735   */\n      0xe0\n        /* \"#utility.yul\":12720:12729   */\n      dup9\n        /* \"#utility.yul\":12711:12718   */\n      dup11\n        /* \"#utility.yul\":12707:12730   */\n      sub\n        /* \"#utility.yul\":12703:12736   */\n      slt\n        /* \"#utility.yul\":12700:12753   */\n      iszero\n      tag_550\n      jumpi\n        /* \"#utility.yul\":12749:12750   */\n      0x00\n        /* \"#utility.yul\":12746:12747   */\n      dup1\n        /* \"#utility.yul\":12739:12751   */\n      revert\n        /* \"#utility.yul\":12700:12753   */\n    tag_550:\n        /* \"#utility.yul\":12778:12787   */\n      dup8\n        /* \"#utility.yul\":12772:12788   */\n      mload\n        /* \"#utility.yul\":12762:12788   */\n      swap7\n      pop\n        /* \"#utility.yul\":12828:12830   */\n      0x20\n        /* \"#utility.yul\":12817:12826   */\n      dup9\n        /* \"#utility.yul\":12813:12831   */\n      add\n        /* \"#utility.yul\":12807:12832   */\n      mload\n        /* \"#utility.yul\":12797:12832   */\n      swap6\n      pop\n        /* \"#utility.yul\":12876:12878   */\n      0x40\n        /* \"#utility.yul\":12865:12874   */\n      dup9\n        /* \"#utility.yul\":12861:12879   */\n      add\n        /* \"#utility.yul\":12855:12880   */\n      mload\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":12940:12942   */\n      dup1\n        /* \"#utility.yul\":12932:12938   */\n      dup3\n        /* \"#utility.yul\":12929:12943   */\n      gt\n        /* \"#utility.yul\":12926:12960   */\n      iszero\n      tag_551\n      jumpi\n        /* \"#utility.yul\":12956:12957   */\n      0x00\n        /* \"#utility.yul\":12953:12954   */\n      dup1\n        /* \"#utility.yul\":12946:12958   */\n      revert\n        /* \"#utility.yul\":12926:12960   */\n    tag_551:\n        /* \"#utility.yul\":12979:13051   */\n      tag_552\n        /* \"#utility.yul\":13043:13050   */\n      dup12\n        /* \"#utility.yul\":13034:13040   */\n      dup4\n        /* \"#utility.yul\":13023:13032   */\n      dup13\n        /* \"#utility.yul\":13019:13041   */\n      add\n        /* \"#utility.yul\":12979:13051   */\n      tag_436\n      jump\t// in\n    tag_552:\n        /* \"#utility.yul\":12969:13051   */\n      swap7\n      pop\n        /* \"#utility.yul\":13097:13099   */\n      0x60\n        /* \"#utility.yul\":13086:13095   */\n      dup11\n        /* \"#utility.yul\":13082:13100   */\n      add\n        /* \"#utility.yul\":13076:13101   */\n      mload\n        /* \"#utility.yul\":13060:13101   */\n      swap2\n      pop\n        /* \"#utility.yul\":13126:13128   */\n      dup1\n        /* \"#utility.yul\":13116:13124   */\n      dup3\n        /* \"#utility.yul\":13113:13129   */\n      gt\n        /* \"#utility.yul\":13110:13146   */\n      iszero\n      tag_553\n      jumpi\n        /* \"#utility.yul\":13142:13143   */\n      0x00\n        /* \"#utility.yul\":13139:13140   */\n      dup1\n        /* \"#utility.yul\":13132:13144   */\n      revert\n        /* \"#utility.yul\":13110:13146   */\n    tag_553:\n        /* \"#utility.yul\":13165:13243   */\n      tag_554\n        /* \"#utility.yul\":13235:13242   */\n      dup12\n        /* \"#utility.yul\":13224:13232   */\n      dup4\n        /* \"#utility.yul\":13213:13222   */\n      dup13\n        /* \"#utility.yul\":13209:13233   */\n      add\n        /* \"#utility.yul\":13165:13243   */\n      tag_437\n      jump\t// in\n    tag_554:\n        /* \"#utility.yul\":13155:13243   */\n      swap6\n      pop\n        /* \"#utility.yul\":13289:13292   */\n      0x80\n        /* \"#utility.yul\":13278:13287   */\n      dup11\n        /* \"#utility.yul\":13274:13293   */\n      add\n        /* \"#utility.yul\":13268:13294   */\n      mload\n        /* \"#utility.yul\":13252:13294   */\n      swap2\n      pop\n        /* \"#utility.yul\":13319:13321   */\n      dup1\n        /* \"#utility.yul\":13309:13317   */\n      dup3\n        /* \"#utility.yul\":13306:13322   */\n      gt\n        /* \"#utility.yul\":13303:13339   */\n      iszero\n      tag_555\n      jumpi\n        /* \"#utility.yul\":13335:13336   */\n      0x00\n        /* \"#utility.yul\":13332:13333   */\n      dup1\n        /* \"#utility.yul\":13325:13337   */\n      revert\n        /* \"#utility.yul\":13303:13339   */\n    tag_555:\n        /* \"#utility.yul\":13358:13432   */\n      tag_556\n        /* \"#utility.yul\":13424:13431   */\n      dup12\n        /* \"#utility.yul\":13413:13421   */\n      dup4\n        /* \"#utility.yul\":13402:13411   */\n      dup13\n        /* \"#utility.yul\":13398:13422   */\n      add\n        /* \"#utility.yul\":13358:13432   */\n      tag_438\n      jump\t// in\n    tag_556:\n        /* \"#utility.yul\":13348:13432   */\n      swap5\n      pop\n        /* \"#utility.yul\":13478:13481   */\n      0xa0\n        /* \"#utility.yul\":13467:13476   */\n      dup11\n        /* \"#utility.yul\":13463:13482   */\n      add\n        /* \"#utility.yul\":13457:13483   */\n      mload\n        /* \"#utility.yul\":13441:13483   */\n      swap2\n      pop\n        /* \"#utility.yul\":13508:13510   */\n      dup1\n        /* \"#utility.yul\":13498:13506   */\n      dup3\n        /* \"#utility.yul\":13495:13511   */\n      gt\n        /* \"#utility.yul\":13492:13528   */\n      iszero\n      tag_557\n      jumpi\n        /* \"#utility.yul\":13524:13525   */\n      0x00\n        /* \"#utility.yul\":13521:13522   */\n      dup1\n        /* \"#utility.yul\":13514:13526   */\n      revert\n        /* \"#utility.yul\":13492:13528   */\n    tag_557:\n        /* \"#utility.yul\":13547:13620   */\n      tag_558\n        /* \"#utility.yul\":13612:13619   */\n      dup12\n        /* \"#utility.yul\":13601:13609   */\n      dup4\n        /* \"#utility.yul\":13590:13599   */\n      dup13\n        /* \"#utility.yul\":13586:13610   */\n      add\n        /* \"#utility.yul\":13547:13620   */\n      tag_439\n      jump\t// in\n    tag_558:\n        /* \"#utility.yul\":13537:13620   */\n      swap4\n      pop\n        /* \"#utility.yul\":13666:13669   */\n      0xc0\n        /* \"#utility.yul\":13655:13664   */\n      dup11\n        /* \"#utility.yul\":13651:13670   */\n      add\n        /* \"#utility.yul\":13645:13671   */\n      mload\n        /* \"#utility.yul\":13629:13671   */\n      swap2\n      pop\n        /* \"#utility.yul\":13696:13698   */\n      dup1\n        /* \"#utility.yul\":13686:13694   */\n      dup3\n        /* \"#utility.yul\":13683:13699   */\n      gt\n        /* \"#utility.yul\":13680:13716   */\n      iszero\n      tag_559\n      jumpi\n        /* \"#utility.yul\":13712:13713   */\n      0x00\n        /* \"#utility.yul\":13709:13710   */\n      dup1\n        /* \"#utility.yul\":13702:13714   */\n      revert\n        /* \"#utility.yul\":13680:13716   */\n    tag_559:\n      pop\n        /* \"#utility.yul\":13735:13808   */\n      tag_560\n        /* \"#utility.yul\":13800:13807   */\n      dup11\n        /* \"#utility.yul\":13789:13797   */\n      dup3\n        /* \"#utility.yul\":13778:13787   */\n      dup12\n        /* \"#utility.yul\":13774:13798   */\n      add\n        /* \"#utility.yul\":13735:13808   */\n      tag_439\n      jump\t// in\n    tag_560:\n        /* \"#utility.yul\":13725:13808   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":12352:13814   */\n      swap3\n      swap6\n      swap9\n      swap2\n      swap5\n      swap8\n      pop\n      swap3\n      swap6\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13819:13994   */\n    tag_319:\n        /* \"#utility.yul\":13856:13859   */\n      0x00\n        /* \"#utility.yul\":13900:13904   */\n      0xff\n        /* \"#utility.yul\":13893:13898   */\n      dup3\n        /* \"#utility.yul\":13889:13905   */\n      and\n        /* \"#utility.yul\":13929:13933   */\n      0xff\n        /* \"#utility.yul\":13920:13927   */\n      dup2\n        /* \"#utility.yul\":13917:13934   */\n      sub\n        /* \"#utility.yul\":13914:13957   */\n      tag_563\n      jumpi\n        /* \"#utility.yul\":13937:13955   */\n      tag_563\n      tag_431\n      jump\t// in\n    tag_563:\n        /* \"#utility.yul\":13986:13987   */\n      0x01\n        /* \"#utility.yul\":13973:13988   */\n      add\n      swap3\n        /* \"#utility.yul\":13819:13994   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14691:14948   */\n    tag_354:\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":14812:14822   */\n      dup2\n      dup2\n      and\n        /* \"#utility.yul\":14824:14834   */\n      dup4\n      dup3\n      and\n        /* \"#utility.yul\":14808:14835   */\n      mul\n        /* \"#utility.yul\":14855:14875   */\n      dup1\n      dup3\n      and\n      swap2\n        /* \"#utility.yul\":14762:14780   */\n      swap1\n        /* \"#utility.yul\":14894:14918   */\n      dup3\n      dup2\n      eq\n        /* \"#utility.yul\":14884:14942   */\n      tag_568\n      jumpi\n        /* \"#utility.yul\":14922:14940   */\n      tag_568\n      tag_431\n      jump\t// in\n    tag_568:\n        /* \"#utility.yul\":14884:14942   */\n      pop\n      pop\n        /* \"#utility.yul\":14691:14948   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16078:16205   */\n    tag_410:\n        /* \"#utility.yul\":16139:16149   */\n      0x4e487b71\n        /* \"#utility.yul\":16134:16137   */\n      0xe0\n        /* \"#utility.yul\":16130:16150   */\n      shl\n        /* \"#utility.yul\":16127:16128   */\n      0x00\n        /* \"#utility.yul\":16120:16151   */\n      mstore\n        /* \"#utility.yul\":16170:16174   */\n      0x31\n        /* \"#utility.yul\":16167:16168   */\n      0x04\n        /* \"#utility.yul\":16160:16175   */\n      mstore\n        /* \"#utility.yul\":16194:16198   */\n      0x24\n        /* \"#utility.yul\":16191:16192   */\n      0x00\n        /* \"#utility.yul\":16184:16199   */\n      revert\n\n    auxdata: 0xa2646970667358221220836b0bef05db4712911c246e3cb2b498a21165a92e8744392b45fcb09a25bb4864736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_42": {
									"entryPoint": null,
									"id": 42,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_11": {
									"entryPoint": null,
									"id": 11,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_130": {
									"entryPoint": 124,
									"id": 130,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052600180546001600160a01b031916730c4f6f3e5458ac81005eef84521373904f18e36e179055670de0b6b3a764000060039081556004805461ffff19169091179055600880546001600160401b0319166276a7001790556103e860095534801561006d57600080fd5b506100773361007c565b6100cc565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b611f03806100db6000396000f3fe6080604052600436106101ee5760003560e01c80639fb82db91161010d578063e0639364116100a0578063f2fde38b1161006f578063f2fde38b146105a3578063f3883538146105c3578063f67c4dfd146105e3578063f6b663c314610603578063fe32f55e1461062357600080fd5b8063e06393641461050b578063e6af61c814610543578063e75bcb9614610559578063ee7cb2881461058357600080fd5b8063bddd6de4116100dc578063bddd6de41461047a578063be645692146104a8578063c7907f54146104be578063cc001f16146104de57600080fd5b80639fb82db9146103ed578063a9e30ccf1461040f578063aa4704f31461042f578063b08061081461046557600080fd5b806368015791116101855780638b0e9f3f116101545780638b0e9f3f146103875780638da5cb5b1461039d5780638f73c5ae146103cf5780639231cf74146103d757600080fd5b80636801579114610305578063715018a61461032557806372d30a701461033a57806382cb1c181461035a57600080fd5b80633a4b66f1116101c15780633a4b66f11461029057806341f349b5146102985780635fa34ebd146102b85780636285b5a2146102e557600080fd5b8063062b6139146101f357806315908d51146102155780632170e4721461023e5780632def66201461026b575b600080fd5b3480156101ff57600080fd5b5061021361020e3660046118af565b610643565b005b34801561022157600080fd5b5061022b60095481565b6040519081526020015b60405180910390f35b34801561024a57600080fd5b5061022b6102593660046118f4565b600b6020526000908152604090205481565b34801561027757600080fd5b506102806106b1565b6040519015158152602001610235565b6102806108d9565b3480156102a457600080fd5b506102806102b33660046118f4565b610ae5565b3480156102c457600080fd5b5061022b6102d3366004611911565b600e6020526000908152604090205481565b3480156102f157600080fd5b506102136103003660046118f4565b610b37565b34801561031157600080fd5b506102806103203660046118f4565b610baa565b34801561033157600080fd5b50610213610c13565b34801561034657600080fd5b506102806103553660046118f4565b610c27565b34801561036657600080fd5b5061022b6103753660046118f4565b600c6020526000908152604090205481565b34801561039357600080fd5b5061022b60065481565b3480156103a957600080fd5b506000546001600160a01b03165b6040516001600160a01b039091168152602001610235565b610213610f1c565b3480156103e357600080fd5b5061022b600d5481565b3480156103f957600080fd5b506104026111b6565b604051610235919061192a565b34801561041b57600080fd5b5061021361042a366004611977565b611218565b34801561043b57600080fd5b5061022b61044a3660046118f4565b6001600160a01b031660009081526002602052604090205490565b34801561047157600080fd5b506102136112b4565b34801561048657600080fd5b506004546104959061ffff1681565b60405161ffff9091168152602001610235565b3480156104b457600080fd5b5061022b60035481565b3480156104ca57600080fd5b506102136104d93660046119a3565b6112eb565b3480156104ea57600080fd5b5061022b6104f93660046118f4565b600a6020526000908152604090205481565b34801561051757600080fd5b5060085461052b906001600160401b031681565b6040516001600160401b039091168152602001610235565b34801561054f57600080fd5b5061022b60075481565b34801561056557600080fd5b5061056e61130b565b60408051928352602083019190915201610235565b34801561058f57600080fd5b5061021361059e3660046118af565b611320565b3480156105af57600080fd5b506102136105be3660046118f4565b611359565b3480156105cf57600080fd5b5061056e6105de3660046118f4565b6113cf565b3480156105ef57600080fd5b506102136105fe366004611911565b61156e565b34801561060f57600080fd5b506103b761061e366004611911565b6115cb565b34801561062f57600080fd5b506001546103b7906001600160a01b031681565b61064b6115f5565b612710816001600160401b0316106106a35760405162461bcd60e51b815260206004820152601660248201527550656e616c74792063616e6e6f74206265203130302560501b60448201526064015b60405180910390fd5b6001600160401b0316600955565b32600081815260026020526040812054909190806107115760405162461bcd60e51b815260206004820152601860248201527f596f7520646f6e2774206861766520616e79207374616b650000000000000000604482015260640161069a565b61071a82610c27565b506001600160a01b03821660009081526002602052604090205461073f9082906119dd565b6001600160a01b0383166000908152600260205260409020556006546107669082906119dd565b6006556107728261164f565b6008546001600160a01b0383166000908152600b6020526040812054909182916107a5916001600160401b0316906119f6565b42111580156107b657506000600954115b1561083157612710600954846107cc9190611a09565b6107d69190611a20565b90506107e281846119dd565b9150806007546107f291906119f6565b6007556040516001600160a01b0385169083156108fc029084906000818181858888f1935050505015801561082b573d6000803e3d6000fd5b50610869565b6040516001600160a01b0385169084156108fc029085906000818181858888f19350505050158015610867573d6000803e3d6000fd5b505b6001600160a01b0384166000818152600a60209081526040808320839055600b8252808320929092558151868152908101849052428183015290517f753014cc7945cb3c93016ecb5bc2a66e26d69971a934fcfe2a882794cb3448279181900360600190a2600194505050505090565b600354600090339034908110156109325760405162461bcd60e51b815260206004820152601860248201527f5374616b696e6720636f696e73206e6f7420656e6f7567680000000000000000604482015260640161069a565b60045460055461ffff9091161161098b5760405162461bcd60e51b815260206004820152601860248201527f43616e2774207374616b6520736c6f742069732066756c6c0000000000000000604482015260640161069a565b6001600160a01b03821660009081526002602052604081205490036109e757600d546000036109b95742600d555b600d546001600160a01b0383166000908152600a60209081526040808320849055600b9091529020556109f2565b6109f082610c27565b505b6001600160a01b038216600090815260026020526040902054610a169082906119f6565b6001600160a01b038316600090815260026020526040902055610a3882610baa565b610a8857600580546001810182556000919091527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db00180546001600160a01b0319166001600160a01b0384161790555b80600654610a9691906119f6565b600655604080518281524260208201526001600160a01b038416917fa0d1fa51224fb08c7c0b48d481448ad6a31c945d1a68cac8758cac3a92d5001c910160405180910390a260019250505090565b6008546001600160a01b0382166000908152600b60205260408120549091610b18916001600160401b03909116906119f6565b4211158015610b2957506000600954115b15610b32575060015b919050565b610b3f6115f5565b6001600160a01b038116610b885760405162461bcd60e51b815260206004820152601060248201526f1a5b9d985b1a590818dbdb9d1c9858dd60821b604482015260640161069a565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6000805b600554811015610c0a57826001600160a01b031660058281548110610bd557610bd5611a42565b6000918252602090912001546001600160a01b031603610bf85750600192915050565b80610c0281611a58565b915050610bae565b50600092915050565b610c1b6115f5565b610c2560006117b0565b565b6001600160a01b0381166000908152600a60205260408120548190819015610c85576001600160a01b0384166000908152600a60209081526040808320548352600e90915280822054600d548352912054610c8291906119dd565b91505b6001600160a01b0384166000908152600c60209081526040808320548352600e90915280822054600d548352912054610cbe91906119dd565b600154604051636487798160e01b81526001600160a01b038781166004830181905260248301529293506000929091169063648779819060440160c060405180830381865afa158015610d15573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d399190611a80565b5050505050905060008284610d4e91906119f6565b1115610f11576001600160a01b0385166000908152600a602052604090205415610d8f57600d546001600160a01b0386166000908152600a60205260409020555b60015460405163d0744e3d60e01b81526001600160a01b03878116600483018190526024830152600092169063d0744e3d90604401602060405180830381865afa158015610de1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e059190611adc565b1115610e2857600d546001600160a01b0386166000908152600c60205260409020555b6001600160a01b038516600090815260026020526040812054670de0b6b3a764000090610e56908690611a09565b610e609190611a20565b90506000670de0b6b3a7640000610e778585611a09565b610e819190611a20565b90506001600160a01b0387166108fc610e9a83856119f6565b6040518115909202916000818181858888f19350505050158015610ec2573d6000803e3d6000fd5b506001600160a01b0387167ff03271da9252f83cabf8baf9c18589849bdadb0ad1f6268432d871380624b9e6610ef883856119f6565b604080519182524260208301520160405180910390a250505b506001949350505050565b600060075434610f2c91906119f6565b90506000610f3a6000611800565b5090506000600160009054906101000a90046001600160a01b03166001600160a01b0316633f8dc65a6040518163ffffffff1660e01b8152600401600060405180830381865afa158015610f92573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610fba9190810190611d89565b5050825192955091935060009250829150505b828160ff1610156110c65760015484516000916001600160a01b031690636487798190879060ff861690811061100557611005611a42565b6020026020010151878560ff168151811061102257611022611a42565b60200260200101516040518363ffffffff1660e01b815260040161105c9291906001600160a01b0392831681529116602082015260400190565b60c060405180830381865afa158015611079573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061109d9190611a80565b5050505050905080836110b091906119f6565b92505080806110be90611e6d565b915050610fcd565b5060006110d382866119f6565b1161110d5760405162461bcd60e51b815260206004820152600a6024820152694e6f207374616b65727360b01b604482015260640161069a565b600d80546000908152600e60205260409020544290915561112e82866119f6565b61114087670de0b6b3a7640000611a09565b61114a9190611a20565b61115490826119f6565b600d546000908152600e602052604080822092909255600755517fddd247369eddde588b8afa794145311a9ac4ff297c32d895359c5befc1a4e1f3906111a69088904290918252602082015260400190565b60405180910390a1505050505050565b6060600580548060200260200160405190810160405280929190818152602001828054801561120e57602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116111f0575b5050505050905090565b6001546001600160a01b031633146112725760405162461bcd60e51b815260206004820152601860248201527f6f6e6c7956616c44617461436f6e7472616374206f6e6c790000000000000000604482015260640161069a565b801561129357506001600160a01b03166000908152600c6020526040812055565b50600d546001600160a01b03919091166000908152600c6020526040902055565b6112bc6115f5565b60405133904780156108fc02916000818181858888f193505050501580156112e8573d6000803e3d6000fd5b50565b6112f36115f5565b6004805461ffff191661ffff92909216919091179055565b6000806113186000611800565b915091509091565b6113286115f5565b6113358162015180611e8c565b6008805467ffffffffffffffff19166001600160401b039290921691909117905550565b6113616115f5565b6001600160a01b0381166113c65760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161069a565b6112e8816117b0565b6001600160a01b0381166000908152600a60205260408120548190819081901561142f576001600160a01b0385166000908152600a60209081526040808320548352600e90915280822054600d54835291205461142c91906119dd565b91505b6001600160a01b0385166000908152600c60209081526040808320548352600e90915280822054600d54835291205461146891906119dd565b600154604051636487798160e01b81526001600160a01b038881166004830181905260248301529293506000929091169063648779819060440160c060405180830381865afa1580156114bf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114e39190611a80565b50505050509050600082846114f891906119f6565b111561156057670de0b6b3a76400006115118383611a09565b61151b9190611a20565b6001600160a01b038716600090815260026020526040902054909550670de0b6b3a76400009061154c908590611a09565b6115569190611a20565b9350505050915091565b506000958695509350505050565b6115766115f5565b600081116115c65760405162461bcd60e51b815260206004820152601c60248201527f496e636f7272656374204d696e696d616c5374616b696e67436f696e00000000604482015260640161069a565b600355565b600581815481106115db57600080fd5b6000918252602090912001546001600160a01b0316905081565b6000546001600160a01b03163314610c255760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161069a565b60005b6005548110156117ac576005818154811061166f5761166f611a42565b6000918252602090912001546001600160a01b039081169083160361179a5760055461169d906001906119dd565b811461171e57600580546116b3906001906119dd565b815481106116c3576116c3611a42565b600091825260209091200154600580546001600160a01b0390921691839081106116ef576116ef611a42565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b031602179055505b600580548061172f5761172f611eb7565b600082815260209020810160001990810180546001600160a01b03191690550190556040516001600160a01b038316907f77f1de51ae9c845b4fff5f1512c8736ea703337fe77421649a51f6188d3470b29061178e9042815260200190565b60405180910390a25050565b806117a481611a58565b915050611652565b5050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60008060005b6005548110156118a9576005818154811061182357611823611a42565b6000918252602090912001546001600160a01b0385811691161461189757600260006005838154811061185857611858611a42565b60009182526020808320909101546001600160a01b0316835282019290925260400190205461188790846119f6565b92508161189381611a58565b9250505b806118a181611a58565b915050611806565b50915091565b6000602082840312156118c157600080fd5b81356001600160401b03811681146118d857600080fd5b9392505050565b6001600160a01b03811681146112e857600080fd5b60006020828403121561190657600080fd5b81356118d8816118df565b60006020828403121561192357600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b8181101561196b5783516001600160a01b031683529284019291840191600101611946565b50909695505050505050565b6000806040838503121561198a57600080fd5b8235611995816118df565b946020939093013593505050565b6000602082840312156119b557600080fd5b813561ffff811681146118d857600080fd5b634e487b7160e01b600052601160045260246000fd5b818103818111156119f0576119f06119c7565b92915050565b808201808211156119f0576119f06119c7565b80820281158282048414176119f0576119f06119c7565b600082611a3d57634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052603260045260246000fd5b600060018201611a6a57611a6a6119c7565b5060010190565b805160058110610b3257600080fd5b60008060008060008060c08789031215611a9957600080fd5b86519550611aa960208801611a71565b945060408701519350606087015192506080870151915060a0870151611ace816118df565b809150509295509295509295565b600060208284031215611aee57600080fd5b5051919050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715611b3357611b33611af5565b604052919050565b60006001600160401b03821115611b5457611b54611af5565b5060051b60200190565b600082601f830112611b6f57600080fd5b81516020611b84611b7f83611b3b565b611b0b565b82815260059290921b84018101918181019086841115611ba357600080fd5b8286015b84811015611bc7578051611bba816118df565b8352918301918301611ba7565b509695505050505050565b600082601f830112611be357600080fd5b81516020611bf3611b7f83611b3b565b82815260059290921b84018101918181019086841115611c1257600080fd5b8286015b84811015611bc757611c2781611a71565b8352918301918301611c16565b600082601f830112611c4557600080fd5b81516020611c55611b7f83611b3b565b82815260059290921b84018101918181019086841115611c7457600080fd5b8286015b84811015611bc75780518352918301918301611c78565b6000601f8381840112611ca157600080fd5b82516020611cb1611b7f83611b3b565b82815260059290921b85018101918181019087841115611cd057600080fd5b8287015b84811015611d7d5780516001600160401b0380821115611cf45760008081fd5b818a0191508a603f830112611d095760008081fd5b8582015181811115611d1d57611d1d611af5565b611d2e818a01601f19168801611b0b565b915080825260408c81838601011115611d475760008081fd5b60005b82811015611d65578481018201518482018a01528801611d4a565b50506000908201870152845250918301918301611cd4565b50979650505050505050565b600080600080600080600060e0888a031215611da457600080fd5b875196506020880151955060408801516001600160401b0380821115611dc957600080fd5b611dd58b838c01611b5e565b965060608a0151915080821115611deb57600080fd5b611df78b838c01611bd2565b955060808a0151915080821115611e0d57600080fd5b611e198b838c01611c34565b945060a08a0151915080821115611e2f57600080fd5b611e3b8b838c01611c8f565b935060c08a0151915080821115611e5157600080fd5b50611e5e8a828b01611c8f565b91505092959891949750929550565b600060ff821660ff8103611e8357611e836119c7565b60010192915050565b6001600160401b03818116838216028082169190828114611eaf57611eaf6119c7565b505092915050565b634e487b7160e01b600052603160045260246000fdfea2646970667358221220836b0bef05db4712911c246e3cb2b498a21165a92e8744392b45fcb09a25bb4864736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH20 0xC4F6F3E5458AC81005EEF84521373904F18E36E OR SWAP1 SSTORE PUSH8 0xDE0B6B3A7640000 PUSH1 0x3 SWAP1 DUP2 SSTORE PUSH1 0x4 DUP1 SLOAD PUSH2 0xFFFF NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB NOT AND PUSH3 0x76A700 OR SWAP1 SSTORE PUSH2 0x3E8 PUSH1 0x9 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x6D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x77 CALLER PUSH2 0x7C JUMP JUMPDEST PUSH2 0xCC JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x1F03 DUP1 PUSH2 0xDB PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1EE JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9FB82DB9 GT PUSH2 0x10D JUMPI DUP1 PUSH4 0xE0639364 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xF2FDE38B GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x5A3 JUMPI DUP1 PUSH4 0xF3883538 EQ PUSH2 0x5C3 JUMPI DUP1 PUSH4 0xF67C4DFD EQ PUSH2 0x5E3 JUMPI DUP1 PUSH4 0xF6B663C3 EQ PUSH2 0x603 JUMPI DUP1 PUSH4 0xFE32F55E EQ PUSH2 0x623 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xE0639364 EQ PUSH2 0x50B JUMPI DUP1 PUSH4 0xE6AF61C8 EQ PUSH2 0x543 JUMPI DUP1 PUSH4 0xE75BCB96 EQ PUSH2 0x559 JUMPI DUP1 PUSH4 0xEE7CB288 EQ PUSH2 0x583 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xBDDD6DE4 GT PUSH2 0xDC JUMPI DUP1 PUSH4 0xBDDD6DE4 EQ PUSH2 0x47A JUMPI DUP1 PUSH4 0xBE645692 EQ PUSH2 0x4A8 JUMPI DUP1 PUSH4 0xC7907F54 EQ PUSH2 0x4BE JUMPI DUP1 PUSH4 0xCC001F16 EQ PUSH2 0x4DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9FB82DB9 EQ PUSH2 0x3ED JUMPI DUP1 PUSH4 0xA9E30CCF EQ PUSH2 0x40F JUMPI DUP1 PUSH4 0xAA4704F3 EQ PUSH2 0x42F JUMPI DUP1 PUSH4 0xB0806108 EQ PUSH2 0x465 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x68015791 GT PUSH2 0x185 JUMPI DUP1 PUSH4 0x8B0E9F3F GT PUSH2 0x154 JUMPI DUP1 PUSH4 0x8B0E9F3F EQ PUSH2 0x387 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x39D JUMPI DUP1 PUSH4 0x8F73C5AE EQ PUSH2 0x3CF JUMPI DUP1 PUSH4 0x9231CF74 EQ PUSH2 0x3D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x68015791 EQ PUSH2 0x305 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x325 JUMPI DUP1 PUSH4 0x72D30A70 EQ PUSH2 0x33A JUMPI DUP1 PUSH4 0x82CB1C18 EQ PUSH2 0x35A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3A4B66F1 GT PUSH2 0x1C1 JUMPI DUP1 PUSH4 0x3A4B66F1 EQ PUSH2 0x290 JUMPI DUP1 PUSH4 0x41F349B5 EQ PUSH2 0x298 JUMPI DUP1 PUSH4 0x5FA34EBD EQ PUSH2 0x2B8 JUMPI DUP1 PUSH4 0x6285B5A2 EQ PUSH2 0x2E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x62B6139 EQ PUSH2 0x1F3 JUMPI DUP1 PUSH4 0x15908D51 EQ PUSH2 0x215 JUMPI DUP1 PUSH4 0x2170E472 EQ PUSH2 0x23E JUMPI DUP1 PUSH4 0x2DEF6620 EQ PUSH2 0x26B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x213 PUSH2 0x20E CALLDATASIZE PUSH1 0x4 PUSH2 0x18AF JUMP JUMPDEST PUSH2 0x643 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x221 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x22B PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x24A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x22B PUSH2 0x259 CALLDATASIZE PUSH1 0x4 PUSH2 0x18F4 JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x277 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x280 PUSH2 0x6B1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x235 JUMP JUMPDEST PUSH2 0x280 PUSH2 0x8D9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x280 PUSH2 0x2B3 CALLDATASIZE PUSH1 0x4 PUSH2 0x18F4 JUMP JUMPDEST PUSH2 0xAE5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x22B PUSH2 0x2D3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1911 JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x213 PUSH2 0x300 CALLDATASIZE PUSH1 0x4 PUSH2 0x18F4 JUMP JUMPDEST PUSH2 0xB37 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x311 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x280 PUSH2 0x320 CALLDATASIZE PUSH1 0x4 PUSH2 0x18F4 JUMP JUMPDEST PUSH2 0xBAA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x331 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x213 PUSH2 0xC13 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x346 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x280 PUSH2 0x355 CALLDATASIZE PUSH1 0x4 PUSH2 0x18F4 JUMP JUMPDEST PUSH2 0xC27 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x366 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x22B PUSH2 0x375 CALLDATASIZE PUSH1 0x4 PUSH2 0x18F4 JUMP JUMPDEST PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x393 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x22B PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x235 JUMP JUMPDEST PUSH2 0x213 PUSH2 0xF1C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x22B PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x402 PUSH2 0x11B6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x235 SWAP2 SWAP1 PUSH2 0x192A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x41B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x213 PUSH2 0x42A CALLDATASIZE PUSH1 0x4 PUSH2 0x1977 JUMP JUMPDEST PUSH2 0x1218 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x43B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x22B PUSH2 0x44A CALLDATASIZE PUSH1 0x4 PUSH2 0x18F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x471 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x213 PUSH2 0x12B4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x486 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 SLOAD PUSH2 0x495 SWAP1 PUSH2 0xFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x235 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x22B PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x213 PUSH2 0x4D9 CALLDATASIZE PUSH1 0x4 PUSH2 0x19A3 JUMP JUMPDEST PUSH2 0x12EB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x22B PUSH2 0x4F9 CALLDATASIZE PUSH1 0x4 PUSH2 0x18F4 JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x517 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x8 SLOAD PUSH2 0x52B SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x235 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x54F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x22B PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x565 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x56E PUSH2 0x130B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x235 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x58F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x213 PUSH2 0x59E CALLDATASIZE PUSH1 0x4 PUSH2 0x18AF JUMP JUMPDEST PUSH2 0x1320 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x213 PUSH2 0x5BE CALLDATASIZE PUSH1 0x4 PUSH2 0x18F4 JUMP JUMPDEST PUSH2 0x1359 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x56E PUSH2 0x5DE CALLDATASIZE PUSH1 0x4 PUSH2 0x18F4 JUMP JUMPDEST PUSH2 0x13CF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x213 PUSH2 0x5FE CALLDATASIZE PUSH1 0x4 PUSH2 0x1911 JUMP JUMPDEST PUSH2 0x156E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x60F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B7 PUSH2 0x61E CALLDATASIZE PUSH1 0x4 PUSH2 0x1911 JUMP JUMPDEST PUSH2 0x15CB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x62F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH2 0x3B7 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x64B PUSH2 0x15F5 JUMP JUMPDEST PUSH2 0x2710 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND LT PUSH2 0x6A3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x50656E616C74792063616E6E6F742062652031303025 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x9 SSTORE JUMP JUMPDEST ORIGIN PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 DUP1 PUSH2 0x711 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520646F6E2774206861766520616E79207374616B650000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x69A JUMP JUMPDEST PUSH2 0x71A DUP3 PUSH2 0xC27 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x73F SWAP1 DUP3 SWAP1 PUSH2 0x19DD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x6 SLOAD PUSH2 0x766 SWAP1 DUP3 SWAP1 PUSH2 0x19DD JUMP JUMPDEST PUSH1 0x6 SSTORE PUSH2 0x772 DUP3 PUSH2 0x164F JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 DUP3 SWAP2 PUSH2 0x7A5 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND SWAP1 PUSH2 0x19F6 JUMP JUMPDEST TIMESTAMP GT ISZERO DUP1 ISZERO PUSH2 0x7B6 JUMPI POP PUSH1 0x0 PUSH1 0x9 SLOAD GT JUMPDEST ISZERO PUSH2 0x831 JUMPI PUSH2 0x2710 PUSH1 0x9 SLOAD DUP5 PUSH2 0x7CC SWAP2 SWAP1 PUSH2 0x1A09 JUMP JUMPDEST PUSH2 0x7D6 SWAP2 SWAP1 PUSH2 0x1A20 JUMP JUMPDEST SWAP1 POP PUSH2 0x7E2 DUP2 DUP5 PUSH2 0x19DD JUMP JUMPDEST SWAP2 POP DUP1 PUSH1 0x7 SLOAD PUSH2 0x7F2 SWAP2 SWAP1 PUSH2 0x19F6 JUMP JUMPDEST PUSH1 0x7 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 DUP4 ISZERO PUSH2 0x8FC MUL SWAP1 DUP5 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x82B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0x869 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 DUP5 ISZERO PUSH2 0x8FC MUL SWAP1 DUP6 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x867 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP4 SWAP1 SSTORE PUSH1 0xB DUP3 MSTORE DUP1 DUP4 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE DUP2 MLOAD DUP7 DUP2 MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE TIMESTAMP DUP2 DUP4 ADD MSTORE SWAP1 MLOAD PUSH32 0x753014CC7945CB3C93016ECB5BC2A66E26D69971A934FCFE2A882794CB344827 SWAP2 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 LOG2 PUSH1 0x1 SWAP5 POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x0 SWAP1 CALLER SWAP1 CALLVALUE SWAP1 DUP2 LT ISZERO PUSH2 0x932 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5374616B696E6720636F696E73206E6F7420656E6F7567680000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x69A JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x5 SLOAD PUSH2 0xFFFF SWAP1 SWAP2 AND GT PUSH2 0x98B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E2774207374616B6520736C6F742069732066756C6C0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x69A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SUB PUSH2 0x9E7 JUMPI PUSH1 0xD SLOAD PUSH1 0x0 SUB PUSH2 0x9B9 JUMPI TIMESTAMP PUSH1 0xD SSTORE JUMPDEST PUSH1 0xD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP5 SWAP1 SSTORE PUSH1 0xB SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SSTORE PUSH2 0x9F2 JUMP JUMPDEST PUSH2 0x9F0 DUP3 PUSH2 0xC27 JUMP JUMPDEST POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xA16 SWAP1 DUP3 SWAP1 PUSH2 0x19F6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH2 0xA38 DUP3 PUSH2 0xBAA JUMP JUMPDEST PUSH2 0xA88 JUMPI PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB0 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND OR SWAP1 SSTORE JUMPDEST DUP1 PUSH1 0x6 SLOAD PUSH2 0xA96 SWAP2 SWAP1 PUSH2 0x19F6 JUMP JUMPDEST PUSH1 0x6 SSTORE PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE TIMESTAMP PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP2 PUSH32 0xA0D1FA51224FB08C7C0B48D481448AD6A31C945D1A68CAC8758CAC3A92D5001C SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x1 SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0xB18 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH2 0x19F6 JUMP JUMPDEST TIMESTAMP GT ISZERO DUP1 ISZERO PUSH2 0xB29 JUMPI POP PUSH1 0x0 PUSH1 0x9 SLOAD GT JUMPDEST ISZERO PUSH2 0xB32 JUMPI POP PUSH1 0x1 JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB3F PUSH2 0x15F5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xB88 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x1A5B9D985B1A590818DBDB9D1C9858DD PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x69A JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x5 SLOAD DUP2 LT ISZERO PUSH2 0xC0A JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xBD5 JUMPI PUSH2 0xBD5 PUSH2 0x1A42 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xBF8 JUMPI POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 PUSH2 0xC02 DUP2 PUSH2 0x1A58 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xBAE JUMP JUMPDEST POP PUSH1 0x0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC1B PUSH2 0x15F5 JUMP JUMPDEST PUSH2 0xC25 PUSH1 0x0 PUSH2 0x17B0 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP2 SWAP1 DUP2 SWAP1 ISZERO PUSH2 0xC85 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD DUP4 MSTORE PUSH1 0xE SWAP1 SWAP2 MSTORE DUP1 DUP3 KECCAK256 SLOAD PUSH1 0xD SLOAD DUP4 MSTORE SWAP2 KECCAK256 SLOAD PUSH2 0xC82 SWAP2 SWAP1 PUSH2 0x19DD JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD DUP4 MSTORE PUSH1 0xE SWAP1 SWAP2 MSTORE DUP1 DUP3 KECCAK256 SLOAD PUSH1 0xD SLOAD DUP4 MSTORE SWAP2 KECCAK256 SLOAD PUSH2 0xCBE SWAP2 SWAP1 PUSH2 0x19DD JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x64877981 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND PUSH1 0x4 DUP4 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP4 ADD MSTORE SWAP3 SWAP4 POP PUSH1 0x0 SWAP3 SWAP1 SWAP2 AND SWAP1 PUSH4 0x64877981 SWAP1 PUSH1 0x44 ADD PUSH1 0xC0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD15 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD39 SWAP2 SWAP1 PUSH2 0x1A80 JUMP JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 DUP3 DUP5 PUSH2 0xD4E SWAP2 SWAP1 PUSH2 0x19F6 JUMP JUMPDEST GT ISZERO PUSH2 0xF11 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0xD8F JUMPI PUSH1 0xD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xD0744E3D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND PUSH1 0x4 DUP4 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x0 SWAP3 AND SWAP1 PUSH4 0xD0744E3D SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xDE1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE05 SWAP2 SWAP1 PUSH2 0x1ADC JUMP JUMPDEST GT ISZERO PUSH2 0xE28 JUMPI PUSH1 0xD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH8 0xDE0B6B3A7640000 SWAP1 PUSH2 0xE56 SWAP1 DUP7 SWAP1 PUSH2 0x1A09 JUMP JUMPDEST PUSH2 0xE60 SWAP2 SWAP1 PUSH2 0x1A20 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 PUSH2 0xE77 DUP6 DUP6 PUSH2 0x1A09 JUMP JUMPDEST PUSH2 0xE81 SWAP2 SWAP1 PUSH2 0x1A20 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH2 0x8FC PUSH2 0xE9A DUP4 DUP6 PUSH2 0x19F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 ISZERO SWAP1 SWAP3 MUL SWAP2 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xEC2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH32 0xF03271DA9252F83CABF8BAF9C18589849BDADB0AD1F6268432D871380624B9E6 PUSH2 0xEF8 DUP4 DUP6 PUSH2 0x19F6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE TIMESTAMP PUSH1 0x20 DUP4 ADD MSTORE ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 SLOAD CALLVALUE PUSH2 0xF2C SWAP2 SWAP1 PUSH2 0x19F6 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xF3A PUSH1 0x0 PUSH2 0x1800 JUMP JUMPDEST POP SWAP1 POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x3F8DC65A PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF92 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0xFBA SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1D89 JUMP JUMPDEST POP POP DUP3 MLOAD SWAP3 SWAP6 POP SWAP2 SWAP4 POP PUSH1 0x0 SWAP3 POP DUP3 SWAP2 POP POP JUMPDEST DUP3 DUP2 PUSH1 0xFF AND LT ISZERO PUSH2 0x10C6 JUMPI PUSH1 0x1 SLOAD DUP5 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x64877981 SWAP1 DUP8 SWAP1 PUSH1 0xFF DUP7 AND SWAP1 DUP2 LT PUSH2 0x1005 JUMPI PUSH2 0x1005 PUSH2 0x1A42 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP8 DUP6 PUSH1 0xFF AND DUP2 MLOAD DUP2 LT PUSH2 0x1022 JUMPI PUSH2 0x1022 PUSH2 0x1A42 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x105C SWAP3 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND DUP2 MSTORE SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0xC0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1079 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x109D SWAP2 SWAP1 PUSH2 0x1A80 JUMP JUMPDEST POP POP POP POP POP SWAP1 POP DUP1 DUP4 PUSH2 0x10B0 SWAP2 SWAP1 PUSH2 0x19F6 JUMP JUMPDEST SWAP3 POP POP DUP1 DUP1 PUSH2 0x10BE SWAP1 PUSH2 0x1E6D JUMP JUMPDEST SWAP2 POP POP PUSH2 0xFCD JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x10D3 DUP3 DUP7 PUSH2 0x19F6 JUMP JUMPDEST GT PUSH2 0x110D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x4E6F207374616B657273 PUSH1 0xB0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x69A JUMP JUMPDEST PUSH1 0xD DUP1 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD TIMESTAMP SWAP1 SWAP2 SSTORE PUSH2 0x112E DUP3 DUP7 PUSH2 0x19F6 JUMP JUMPDEST PUSH2 0x1140 DUP8 PUSH8 0xDE0B6B3A7640000 PUSH2 0x1A09 JUMP JUMPDEST PUSH2 0x114A SWAP2 SWAP1 PUSH2 0x1A20 JUMP JUMPDEST PUSH2 0x1154 SWAP1 DUP3 PUSH2 0x19F6 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE PUSH1 0x7 SSTORE MLOAD PUSH32 0xDDD247369EDDDE588B8AFA794145311A9AC4FF297C32D895359C5BEFC1A4E1F3 SWAP1 PUSH2 0x11A6 SWAP1 DUP9 SWAP1 TIMESTAMP SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x120E JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x11F0 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1272 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6F6E6C7956616C44617461436F6E7472616374206F6E6C790000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x69A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1293 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE JUMP JUMPDEST POP PUSH1 0xD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE JUMP JUMPDEST PUSH2 0x12BC PUSH2 0x15F5 JUMP JUMPDEST PUSH1 0x40 MLOAD CALLER SWAP1 SELFBALANCE DUP1 ISZERO PUSH2 0x8FC MUL SWAP2 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x12E8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x12F3 PUSH2 0x15F5 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH2 0xFFFF NOT AND PUSH2 0xFFFF SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1318 PUSH1 0x0 PUSH2 0x1800 JUMP JUMPDEST SWAP2 POP SWAP2 POP SWAP1 SWAP2 JUMP JUMPDEST PUSH2 0x1328 PUSH2 0x15F5 JUMP JUMPDEST PUSH2 0x1335 DUP2 PUSH3 0x15180 PUSH2 0x1E8C JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x1361 PUSH2 0x15F5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x13C6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x69A JUMP JUMPDEST PUSH2 0x12E8 DUP2 PUSH2 0x17B0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP2 SWAP1 DUP2 SWAP1 DUP2 SWAP1 ISZERO PUSH2 0x142F JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD DUP4 MSTORE PUSH1 0xE SWAP1 SWAP2 MSTORE DUP1 DUP3 KECCAK256 SLOAD PUSH1 0xD SLOAD DUP4 MSTORE SWAP2 KECCAK256 SLOAD PUSH2 0x142C SWAP2 SWAP1 PUSH2 0x19DD JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD DUP4 MSTORE PUSH1 0xE SWAP1 SWAP2 MSTORE DUP1 DUP3 KECCAK256 SLOAD PUSH1 0xD SLOAD DUP4 MSTORE SWAP2 KECCAK256 SLOAD PUSH2 0x1468 SWAP2 SWAP1 PUSH2 0x19DD JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x64877981 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND PUSH1 0x4 DUP4 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP4 ADD MSTORE SWAP3 SWAP4 POP PUSH1 0x0 SWAP3 SWAP1 SWAP2 AND SWAP1 PUSH4 0x64877981 SWAP1 PUSH1 0x44 ADD PUSH1 0xC0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x14BF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x14E3 SWAP2 SWAP1 PUSH2 0x1A80 JUMP JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 DUP3 DUP5 PUSH2 0x14F8 SWAP2 SWAP1 PUSH2 0x19F6 JUMP JUMPDEST GT ISZERO PUSH2 0x1560 JUMPI PUSH8 0xDE0B6B3A7640000 PUSH2 0x1511 DUP4 DUP4 PUSH2 0x1A09 JUMP JUMPDEST PUSH2 0x151B SWAP2 SWAP1 PUSH2 0x1A20 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP6 POP PUSH8 0xDE0B6B3A7640000 SWAP1 PUSH2 0x154C SWAP1 DUP6 SWAP1 PUSH2 0x1A09 JUMP JUMPDEST PUSH2 0x1556 SWAP2 SWAP1 PUSH2 0x1A20 JUMP JUMPDEST SWAP4 POP POP POP POP SWAP2 POP SWAP2 JUMP JUMPDEST POP PUSH1 0x0 SWAP6 DUP7 SWAP6 POP SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x1576 PUSH2 0x15F5 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x15C6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E636F7272656374204D696E696D616C5374616B696E67436F696E00000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x69A JUMP JUMPDEST PUSH1 0x3 SSTORE JUMP JUMPDEST PUSH1 0x5 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x15DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xC25 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x69A JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x5 SLOAD DUP2 LT ISZERO PUSH2 0x17AC JUMPI PUSH1 0x5 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x166F JUMPI PUSH2 0x166F PUSH2 0x1A42 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP4 AND SUB PUSH2 0x179A JUMPI PUSH1 0x5 SLOAD PUSH2 0x169D SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x19DD JUMP JUMPDEST DUP2 EQ PUSH2 0x171E JUMPI PUSH1 0x5 DUP1 SLOAD PUSH2 0x16B3 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x19DD JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x16C3 JUMPI PUSH2 0x16C3 PUSH2 0x1A42 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP4 SWAP1 DUP2 LT PUSH2 0x16EF JUMPI PUSH2 0x16EF PUSH2 0x1A42 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP JUMPDEST PUSH1 0x5 DUP1 SLOAD DUP1 PUSH2 0x172F JUMPI PUSH2 0x172F PUSH2 0x1EB7 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 DUP2 ADD PUSH1 0x0 NOT SWAP1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE ADD SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0x77F1DE51AE9C845B4FFF5F1512C8736EA703337FE77421649A51F6188D3470B2 SWAP1 PUSH2 0x178E SWAP1 TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST DUP1 PUSH2 0x17A4 DUP2 PUSH2 0x1A58 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1652 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 JUMPDEST PUSH1 0x5 SLOAD DUP2 LT ISZERO PUSH2 0x18A9 JUMPI PUSH1 0x5 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1823 JUMPI PUSH2 0x1823 PUSH2 0x1A42 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND SWAP2 AND EQ PUSH2 0x1897 JUMPI PUSH1 0x2 PUSH1 0x0 PUSH1 0x5 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x1858 JUMPI PUSH2 0x1858 PUSH2 0x1A42 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 SLOAD PUSH2 0x1887 SWAP1 DUP5 PUSH2 0x19F6 JUMP JUMPDEST SWAP3 POP DUP2 PUSH2 0x1893 DUP2 PUSH2 0x1A58 JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 PUSH2 0x18A1 DUP2 PUSH2 0x1A58 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1806 JUMP JUMPDEST POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x18D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x12E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1906 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x18D8 DUP2 PUSH2 0x18DF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1923 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x196B JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x1946 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x198A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1995 DUP2 PUSH2 0x18DF JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xFFFF DUP2 AND DUP2 EQ PUSH2 0x18D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x19F0 JUMPI PUSH2 0x19F0 PUSH2 0x19C7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x19F0 JUMPI PUSH2 0x19F0 PUSH2 0x19C7 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x19F0 JUMPI PUSH2 0x19F0 PUSH2 0x19C7 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1A3D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x1A6A JUMPI PUSH2 0x1A6A PUSH2 0x19C7 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x5 DUP2 LT PUSH2 0xB32 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x1A99 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 MLOAD SWAP6 POP PUSH2 0x1AA9 PUSH1 0x20 DUP9 ADD PUSH2 0x1A71 JUMP JUMPDEST SWAP5 POP PUSH1 0x40 DUP8 ADD MLOAD SWAP4 POP PUSH1 0x60 DUP8 ADD MLOAD SWAP3 POP PUSH1 0x80 DUP8 ADD MLOAD SWAP2 POP PUSH1 0xA0 DUP8 ADD MLOAD PUSH2 0x1ACE DUP2 PUSH2 0x18DF JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1AEE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1B33 JUMPI PUSH2 0x1B33 PUSH2 0x1AF5 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT ISZERO PUSH2 0x1B54 JUMPI PUSH2 0x1B54 PUSH2 0x1AF5 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1B6F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x20 PUSH2 0x1B84 PUSH2 0x1B7F DUP4 PUSH2 0x1B3B JUMP JUMPDEST PUSH2 0x1B0B JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP7 DUP5 GT ISZERO PUSH2 0x1BA3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x1BC7 JUMPI DUP1 MLOAD PUSH2 0x1BBA DUP2 PUSH2 0x18DF JUMP JUMPDEST DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x1BA7 JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1BE3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x20 PUSH2 0x1BF3 PUSH2 0x1B7F DUP4 PUSH2 0x1B3B JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP7 DUP5 GT ISZERO PUSH2 0x1C12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x1BC7 JUMPI PUSH2 0x1C27 DUP2 PUSH2 0x1A71 JUMP JUMPDEST DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x1C16 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1C45 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x20 PUSH2 0x1C55 PUSH2 0x1B7F DUP4 PUSH2 0x1B3B JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP7 DUP5 GT ISZERO PUSH2 0x1C74 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x1BC7 JUMPI DUP1 MLOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x1C78 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F DUP4 DUP2 DUP5 ADD SLT PUSH2 0x1CA1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x20 PUSH2 0x1CB1 PUSH2 0x1B7F DUP4 PUSH2 0x1B3B JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP6 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP8 DUP5 GT ISZERO PUSH2 0x1CD0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP8 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x1D7D JUMPI DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x1CF4 JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST DUP2 DUP11 ADD SWAP2 POP DUP11 PUSH1 0x3F DUP4 ADD SLT PUSH2 0x1D09 JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST DUP6 DUP3 ADD MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x1D1D JUMPI PUSH2 0x1D1D PUSH2 0x1AF5 JUMP JUMPDEST PUSH2 0x1D2E DUP2 DUP11 ADD PUSH1 0x1F NOT AND DUP9 ADD PUSH2 0x1B0B JUMP JUMPDEST SWAP2 POP DUP1 DUP3 MSTORE PUSH1 0x40 DUP13 DUP2 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x1D47 JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1D65 JUMPI DUP5 DUP2 ADD DUP3 ADD MLOAD DUP5 DUP3 ADD DUP11 ADD MSTORE DUP9 ADD PUSH2 0x1D4A JUMP JUMPDEST POP POP PUSH1 0x0 SWAP1 DUP3 ADD DUP8 ADD MSTORE DUP5 MSTORE POP SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x1CD4 JUMP JUMPDEST POP SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x1DA4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 MLOAD SWAP7 POP PUSH1 0x20 DUP9 ADD MLOAD SWAP6 POP PUSH1 0x40 DUP9 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x1DC9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1DD5 DUP12 DUP4 DUP13 ADD PUSH2 0x1B5E JUMP JUMPDEST SWAP7 POP PUSH1 0x60 DUP11 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1DEB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1DF7 DUP12 DUP4 DUP13 ADD PUSH2 0x1BD2 JUMP JUMPDEST SWAP6 POP PUSH1 0x80 DUP11 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1E0D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1E19 DUP12 DUP4 DUP13 ADD PUSH2 0x1C34 JUMP JUMPDEST SWAP5 POP PUSH1 0xA0 DUP11 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1E2F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1E3B DUP12 DUP4 DUP13 ADD PUSH2 0x1C8F JUMP JUMPDEST SWAP4 POP PUSH1 0xC0 DUP11 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1E51 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E5E DUP11 DUP3 DUP12 ADD PUSH2 0x1C8F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0xFF DUP2 SUB PUSH2 0x1E83 JUMPI PUSH2 0x1E83 PUSH2 0x19C7 JUMP JUMPDEST PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 DUP2 AND DUP4 DUP3 AND MUL DUP1 DUP3 AND SWAP2 SWAP1 DUP3 DUP2 EQ PUSH2 0x1EAF JUMPI PUSH2 0x1EAF PUSH2 0x19C7 JUMP JUMPDEST POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP4 PUSH12 0xBEF05DB4712911C246E3CB2 0xB4 SWAP9 LOG2 GT PUSH6 0xA92E8744392B GASLIMIT 0xFC 0xB0 SWAP11 0x25 0xBB BASEFEE PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "4252:10415:0:-:0;;;4287:106;;;-1:-1:-1;;;;;;4287:106:0;4350:42;4287:106;;;4533:7;4496:44;;;;4547:28;;;-1:-1:-1;;4547:28:0;;;;;;4723:41;;;-1:-1:-1;;;;;;4723:41:0;4757:7;4723:41;;;4806:4;4771:39;;4252:10415;;;;;;;;;-1:-1:-1;1590:32:0;665:10;1590:18;:32::i;:::-;4252:10415;;3121:187;3194:16;3213:6;;-1:-1:-1;;;;;3229:17:0;;;-1:-1:-1;;;;;;3229:17:0;;;;;;3261:40;;3213:6;;;;;;;3261:40;;3194:16;3261:40;3184:124;3121:187;:::o;4252:10415::-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@MaxStakers_208": {
									"entryPoint": null,
									"id": 208,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@MinimalStakingCoin_205": {
									"entryPoint": null,
									"id": 205,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkOwner_73": {
									"entryPoint": 5621,
									"id": 73,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_11": {
									"entryPoint": null,
									"id": 11,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_130": {
									"entryPoint": 6064,
									"id": 130,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@checkforpenalty_841": {
									"entryPoint": 2789,
									"id": 841,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@currentStakerSet_211": {
									"entryPoint": 5579,
									"id": 211,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@distributeReward_757": {
									"entryPoint": 3868,
									"id": 757,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getActiveStakers_863": {
									"entryPoint": 4534,
									"id": 863,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getStakingInfo_854": {
									"entryPoint": null,
									"id": 854,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getTotalStakeOfActiveStakersExcept_926": {
									"entryPoint": 6144,
									"id": 926,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"@getTotalStakeOfActiveStakers_878": {
									"entryPoint": 4875,
									"id": 878,
									"parameterSlots": 0,
									"returnSlots": 2
								},
								"@isActiveStaker_958": {
									"entryPoint": 2986,
									"id": 958,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@lastRewardTime_235": {
									"entryPoint": null,
									"id": 235,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@mutateValStakeTimeMapping_1154": {
									"entryPoint": 4632,
									"id": 1154,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@owner_59": {
									"entryPoint": null,
									"id": 59,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@penaltyPercentage_221": {
									"entryPoint": null,
									"id": 221,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@reflectionPercentSum_239": {
									"entryPoint": null,
									"id": 239,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@removeStakerFromCurrrentSet_814": {
									"entryPoint": 5711,
									"id": 814,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@renounceOwnership_87": {
									"entryPoint": 3091,
									"id": 87,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rescueCoins_1129": {
									"entryPoint": 4788,
									"id": 1129,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewardWithdrawalTime_225": {
									"entryPoint": null,
									"id": 225,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@stakeTime_229": {
									"entryPoint": null,
									"id": 229,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@stake_385": {
									"entryPoint": 2265,
									"id": 385,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@stakingLockPeriod_218": {
									"entryPoint": null,
									"id": 218,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalPenalty_215": {
									"entryPoint": null,
									"id": 215,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalStake_213": {
									"entryPoint": null,
									"id": 213,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_110": {
									"entryPoint": 4953,
									"id": 110,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@unstake_520": {
									"entryPoint": 1713,
									"id": 520,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@updateMaxStakers_1057": {
									"entryPoint": 4843,
									"id": 1057,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@updateMinimalStakingCoin_1076": {
									"entryPoint": 5486,
									"id": 1076,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@updatePenaltyPercentage_1109": {
									"entryPoint": 1603,
									"id": 1109,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@updateStakingLockPeriod_1090": {
									"entryPoint": 4896,
									"id": 1090,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@updateValidatorDataContract_1178": {
									"entryPoint": 2871,
									"id": 1178,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@valDataContract_198": {
									"entryPoint": null,
									"id": 198,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@valStakeTime_233": {
									"entryPoint": null,
									"id": 233,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@viewStakeReward_1045": {
									"entryPoint": 5071,
									"id": 1045,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"@withdrawStakingReward_646": {
									"entryPoint": 3111,
									"id": 646,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_array_address_dyn_fromMemory": {
									"entryPoint": 7006,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_array_enum_Status_dyn_fromMemory": {
									"entryPoint": 7122,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_array_string_dyn_fromMemory": {
									"entryPoint": 7311,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_array_uint256_dyn_fromMemory": {
									"entryPoint": 7220,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_enum_Status_fromMemory": {
									"entryPoint": 6769,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 6388,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 6519,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint16": {
									"entryPoint": 6563,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 6417,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 6876,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_enum$_Status_$137t_uint256t_uint256t_uint256t_address_fromMemory": {
									"entryPoint": 6784,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 6
								},
								"abi_decode_tuple_t_uint256t_uint256t_array$_t_address_$dyn_memory_ptrt_array$_t_enum$_Status_$137_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_array$_t_string_memory_ptr_$dyn_memory_ptrt_array$_t_string_memory_ptr_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 7561,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 7
								},
								"abi_decode_tuple_t_uint64": {
									"entryPoint": 6319,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 6442,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_InterfaceValidator_$190__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1c1c4317381ec0c760e7211168a74acf7dbced02cc52aa86e92af470f9e24fe3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_42f46607fb15b7b6277e560cb4c47a556656af70297e39e5ca0f1a20e37a69fe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_54025137788e7e9d462111aca326bb911826fad4e8e597c5ee14218225070076__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5cb2cb851500aab97b488d2fab8c38eaf8be2ad6fb9cf8bbf8c57c01c610f95b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_72c7b026e567bb46366a5bd22cdcf2cff2158a77f2b7f6ce1289658b87e6ce64__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_900e2ba09f45ece17ffae1e191643d3c8705b0667ea87acdfa71696a7c7fd0f7__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ba804126d815ed68ee4da90636d7a5e80cb0f9d156959f15a3e42c332e0abffb__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d2ba0f653fcbe1afc9b84e320657368b893b7ad54da2f700d876aa380dcc7782__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 6923,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_array_address_dyn": {
									"entryPoint": 6971,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 6646,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 6688,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 6665,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint64": {
									"entryPoint": 7820,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 6621,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 6744,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint8": {
									"entryPoint": 7789,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 6599,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x31": {
									"entryPoint": 7863,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 6722,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 6901,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_address": {
									"entryPoint": 6367,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:16207:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "83:215:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "129:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "138:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "141:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "131:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "131:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "131:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "104:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "113:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "100:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "100:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "125:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "96:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "96:32:1"
															},
															"nodeType": "YulIf",
															"src": "93:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "154:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "180:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "167:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "167:23:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "158:5:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "252:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "261:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "264:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "254:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "254:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "254:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "212:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "223:5:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "230:18:1",
																						"type": "",
																						"value": "0xffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "219:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "219:30:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "209:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "209:41:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "202:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "202:49:1"
															},
															"nodeType": "YulIf",
															"src": "199:69:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "277:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "287:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "277:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint64",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "49:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "60:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "72:6:1",
														"type": ""
													}
												],
												"src": "14:284:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "404:76:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "414:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "426:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "437:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "422:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "422:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "414:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "456:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "467:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "449:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "449:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "449:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "373:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "384:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "395:4:1",
														"type": ""
													}
												],
												"src": "303:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "530:86:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "594:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "603:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "606:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "596:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "596:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "596:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "553:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "564:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "579:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "584:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "575:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "575:11:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "588:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "571:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "571:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "560:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "560:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "550:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "550:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "543:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "543:50:1"
															},
															"nodeType": "YulIf",
															"src": "540:70:1"
														}
													]
												},
												"name": "validator_revert_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "519:5:1",
														"type": ""
													}
												],
												"src": "485:131:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "691:177:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "737:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "746:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "749:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "739:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "739:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "739:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "712:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "721:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "708:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "708:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "733:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "704:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "704:32:1"
															},
															"nodeType": "YulIf",
															"src": "701:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "762:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "788:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "775:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "775:23:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "766:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "832:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "807:24:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "807:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "807:31:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "847:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "857:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "847:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "657:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "668:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "680:6:1",
														"type": ""
													}
												],
												"src": "621:247:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "968:92:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "978:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "990:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1001:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "986:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "986:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "978:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1020:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1045:6:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1038:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1038:14:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1031:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1031:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1013:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1013:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1013:41:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "937:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "948:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "959:4:1",
														"type": ""
													}
												],
												"src": "873:187:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1135:110:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1181:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1190:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1193:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1183:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1183:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1183:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1156:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1165:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1152:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1152:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1177:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1148:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1148:32:1"
															},
															"nodeType": "YulIf",
															"src": "1145:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1206:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1229:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1216:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1216:23:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1206:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1101:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1112:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1124:6:1",
														"type": ""
													}
												],
												"src": "1065:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1351:102:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1361:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1373:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1384:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1369:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1369:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1361:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1403:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1418:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1434:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1439:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1430:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1430:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1443:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "1426:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1426:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1414:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1414:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1396:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1396:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1396:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1320:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1331:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1342:4:1",
														"type": ""
													}
												],
												"src": "1250:203:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1609:507:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1619:12:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1629:2:1",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1623:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1640:32:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1658:9:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1669:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1654:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1654:18:1"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "1644:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1688:9:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1699:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1681:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1681:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1681:21:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1711:17:1",
															"value": {
																"name": "tail_1",
																"nodeType": "YulIdentifier",
																"src": "1722:6:1"
															},
															"variables": [
																{
																	"name": "pos",
																	"nodeType": "YulTypedName",
																	"src": "1715:3:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1737:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1757:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1751:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1751:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1741:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "1780:6:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1788:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1773:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1773:22:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1773:22:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1804:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1815:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1826:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1811:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1811:18:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "1804:3:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1838:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1856:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1864:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1852:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1852:15:1"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "1842:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1876:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1885:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1880:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1944:146:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "1965:3:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "srcPtr",
																									"nodeType": "YulIdentifier",
																									"src": "1980:6:1"
																								}
																							],
																							"functionName": {
																								"name": "mload",
																								"nodeType": "YulIdentifier",
																								"src": "1974:5:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1974:13:1"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "1997:3:1",
																											"type": "",
																											"value": "160"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "2002:1:1",
																											"type": "",
																											"value": "1"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nodeType": "YulIdentifier",
																										"src": "1993:3:1"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "1993:11:1"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2006:1:1",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "sub",
																								"nodeType": "YulIdentifier",
																								"src": "1989:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1989:19:1"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "1970:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1970:39:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1958:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1958:52:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1958:52:1"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "2023:19:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "2034:3:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "2039:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2030:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2030:12:1"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "2023:3:1"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "2055:25:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "2069:6:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "2077:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2065:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2065:15:1"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2055:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1906:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1909:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1903:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1903:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1917:18:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1919:14:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1928:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1931:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1924:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1924:9:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1919:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1899:3:1",
																"statements": []
															},
															"src": "1895:195:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2099:11:1",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "2107:3:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2099:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1578:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1589:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1600:4:1",
														"type": ""
													}
												],
												"src": "1458:658:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2208:228:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2254:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2263:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2266:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2256:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2256:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2256:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2229:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2238:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2225:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2225:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2250:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2221:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2221:32:1"
															},
															"nodeType": "YulIf",
															"src": "2218:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2279:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2305:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2292:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2292:23:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "2283:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2349:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "2324:24:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2324:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2324:31:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2364:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2374:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2364:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2388:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2415:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2426:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2411:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2411:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2398:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2398:32:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2388:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2166:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2177:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2189:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2197:6:1",
														"type": ""
													}
												],
												"src": "2121:315:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2540:89:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2550:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2562:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2573:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2558:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2558:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2550:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2592:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2607:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2615:6:1",
																				"type": "",
																				"value": "0xffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2603:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2603:19:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2585:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2585:38:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2585:38:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2509:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2520:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2531:4:1",
														"type": ""
													}
												],
												"src": "2441:188:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2703:203:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2749:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2758:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2761:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2751:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2751:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2751:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2724:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2733:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2720:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2720:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2745:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2716:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2716:32:1"
															},
															"nodeType": "YulIf",
															"src": "2713:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2774:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2800:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2787:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2787:23:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "2778:5:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2860:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2869:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2872:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2862:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2862:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2862:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2832:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2843:5:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2850:6:1",
																						"type": "",
																						"value": "0xffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "2839:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2839:18:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2829:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2829:29:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2822:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2822:37:1"
															},
															"nodeType": "YulIf",
															"src": "2819:57:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2885:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2895:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2885:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2669:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2680:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2692:6:1",
														"type": ""
													}
												],
												"src": "2634:272:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3010:101:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3020:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3032:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3043:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3028:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3028:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3020:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3062:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3077:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3085:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3073:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3073:31:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3055:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3055:50:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3055:50:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2979:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2990:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3001:4:1",
														"type": ""
													}
												],
												"src": "2911:200:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3245:119:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3255:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3267:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3278:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3263:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3263:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3255:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3297:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3308:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3290:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3290:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3290:25:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3335:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3346:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3331:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3331:18:1"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "3351:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3324:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3324:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3324:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3206:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3217:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3225:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3236:4:1",
														"type": ""
													}
												],
												"src": "3116:248:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3496:102:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3506:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3518:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3529:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3514:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3514:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3506:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3548:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3563:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3579:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3584:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "3575:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3575:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3588:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "3571:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3571:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3559:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3559:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3541:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3541:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3541:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_InterfaceValidator_$190__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3465:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3476:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3487:4:1",
														"type": ""
													}
												],
												"src": "3369:229:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3777:172:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3794:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3805:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3787:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3787:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3787:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3828:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3839:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3824:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3824:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3844:2:1",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3817:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3817:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3817:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3867:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3878:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3863:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3863:18:1"
																	},
																	{
																		"hexValue": "50656e616c74792063616e6e6f742062652031303025",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3883:24:1",
																		"type": "",
																		"value": "Penalty cannot be 100%"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3856:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3856:52:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3856:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3917:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3929:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3940:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3925:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3925:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3917:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_72c7b026e567bb46366a5bd22cdcf2cff2158a77f2b7f6ce1289658b87e6ce64__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3754:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3768:4:1",
														"type": ""
													}
												],
												"src": "3603:346:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4128:174:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4145:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4156:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4138:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4138:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4138:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4179:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4190:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4175:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4175:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4195:2:1",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4168:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4168:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4168:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4218:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4229:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4214:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4214:18:1"
																	},
																	{
																		"hexValue": "596f7520646f6e2774206861766520616e79207374616b65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4234:26:1",
																		"type": "",
																		"value": "You don't have any stake"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4207:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4207:54:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4207:54:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4270:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4282:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4293:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4278:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4278:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4270:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_42f46607fb15b7b6277e560cb4c47a556656af70297e39e5ca0f1a20e37a69fe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4105:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4119:4:1",
														"type": ""
													}
												],
												"src": "3954:348:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4339:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4356:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4363:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4368:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "4359:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4359:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4349:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4349:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4349:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4396:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4399:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4389:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4389:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4389:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4420:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4423:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4413:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4413:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4413:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "4307:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4488:79:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4498:17:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4510:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4513:1:1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "4506:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4506:9:1"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "4498:4:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4539:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "4541:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4541:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4541:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "4530:4:1"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4536:1:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4527:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4527:11:1"
															},
															"nodeType": "YulIf",
															"src": "4524:37:1"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4470:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4473:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "4479:4:1",
														"type": ""
													}
												],
												"src": "4439:128:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4620:77:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4630:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4641:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4644:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4637:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4637:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "4630:3:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4669:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "4671:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4671:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4671:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4661:1:1"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "4664:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4658:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4658:10:1"
															},
															"nodeType": "YulIf",
															"src": "4655:36:1"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4603:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4606:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "4612:3:1",
														"type": ""
													}
												],
												"src": "4572:125:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4754:116:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4764:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4779:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4782:1:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "4775:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4775:9:1"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "4764:7:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4842:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "4844:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4844:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4844:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "4813:1:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "4806:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4806:9:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "4820:1:1"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "4827:7:1"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "4836:1:1"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "4823:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4823:15:1"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "4817:2:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4817:22:1"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "4803:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4803:37:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4796:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4796:45:1"
															},
															"nodeType": "YulIf",
															"src": "4793:71:1"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4733:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4736:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "4742:7:1",
														"type": ""
													}
												],
												"src": "4702:168:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4921:171:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4952:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4973:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "4980:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "4985:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "4976:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4976:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "4966:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4966:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4966:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5017:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5020:4:1",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5010:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5010:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5010:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5045:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5048:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5038:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5038:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5038:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4941:1:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4934:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4934:9:1"
															},
															"nodeType": "YulIf",
															"src": "4931:132:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5072:14:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5081:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5084:1:1"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "5077:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5077:9:1"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "5072:1:1"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4906:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4909:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "4915:1:1",
														"type": ""
													}
												],
												"src": "4875:217:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5254:162:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5264:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5276:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5287:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5272:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5272:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5264:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5306:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5317:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5299:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5299:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5299:25:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5344:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5355:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5340:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5340:18:1"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "5360:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5333:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5333:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5333:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5387:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5398:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5383:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5383:18:1"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "5403:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5376:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5376:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5376:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5207:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "5218:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5226:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5234:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5245:4:1",
														"type": ""
													}
												],
												"src": "5097:319:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5595:174:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5612:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5623:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5605:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5605:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5605:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5646:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5657:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5642:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5642:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5662:2:1",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5635:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5635:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5635:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5685:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5696:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5681:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5681:18:1"
																	},
																	{
																		"hexValue": "5374616b696e6720636f696e73206e6f7420656e6f756768",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5701:26:1",
																		"type": "",
																		"value": "Staking coins not enough"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5674:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5674:54:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5674:54:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5737:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5749:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5760:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5745:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5745:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5737:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d2ba0f653fcbe1afc9b84e320657368b893b7ad54da2f700d876aa380dcc7782__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5572:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5586:4:1",
														"type": ""
													}
												],
												"src": "5421:348:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5948:174:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5965:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5976:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5958:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5958:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5958:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5999:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6010:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5995:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5995:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6015:2:1",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5988:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5988:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5988:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6038:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6049:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6034:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6034:18:1"
																	},
																	{
																		"hexValue": "43616e2774207374616b6520736c6f742069732066756c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6054:26:1",
																		"type": "",
																		"value": "Can't stake slot is full"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6027:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6027:54:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6027:54:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6090:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6102:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6113:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6098:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6098:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6090:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ba804126d815ed68ee4da90636d7a5e80cb0f9d156959f15a3e42c332e0abffb__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5925:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5939:4:1",
														"type": ""
													}
												],
												"src": "5774:348:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6301:166:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6318:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6329:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6311:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6311:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6311:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6352:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6363:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6348:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6348:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6368:2:1",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6341:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6341:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6341:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6391:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6402:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6387:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6387:18:1"
																	},
																	{
																		"hexValue": "696e76616c696420636f6e7472616374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6407:18:1",
																		"type": "",
																		"value": "invalid contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6380:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6380:46:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6380:46:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6435:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6447:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6458:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6443:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6443:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6435:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_900e2ba09f45ece17ffae1e191643d3c8705b0667ea87acdfa71696a7c7fd0f7__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6278:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6292:4:1",
														"type": ""
													}
												],
												"src": "6127:340:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6504:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6521:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6528:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6533:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "6524:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6524:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6514:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6514:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6514:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6561:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6564:4:1",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6554:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6554:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6554:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6585:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6588:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6578:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6578:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6578:15:1"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "6472:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6651:88:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6682:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "6684:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6684:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6684:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6667:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6678:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "6674:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6674:6:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "6664:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6664:17:1"
															},
															"nodeType": "YulIf",
															"src": "6661:43:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6713:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6724:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6731:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6720:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6720:13:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "6713:3:1"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6633:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "6643:3:1",
														"type": ""
													}
												],
												"src": "6604:135:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6873:175:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6883:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6895:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6906:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6891:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6891:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6883:4:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6918:29:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6936:3:1",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6941:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "6932:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6932:11:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6945:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "6928:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6928:19:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "6922:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6963:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "6978:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "6986:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "6974:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6974:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6956:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6956:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6956:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7010:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7021:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7006:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7006:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "7030:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "7038:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "7026:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7026:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6999:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6999:43:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6999:43:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6834:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6845:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6853:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6864:4:1",
														"type": ""
													}
												],
												"src": "6744:304:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7117:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7127:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "7142:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "7136:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7136:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "7127:5:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7182:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7191:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7194:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7184:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7184:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7184:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7171:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7178:1:1",
																				"type": "",
																				"value": "5"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "7168:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7168:12:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7161:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7161:20:1"
															},
															"nodeType": "YulIf",
															"src": "7158:40:1"
														}
													]
												},
												"name": "abi_decode_enum_Status_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "7096:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7107:5:1",
														"type": ""
													}
												],
												"src": "7053:151:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7385:421:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7432:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7441:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7444:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7434:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7434:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7434:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7406:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7415:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7402:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7402:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7427:3:1",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7398:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7398:33:1"
															},
															"nodeType": "YulIf",
															"src": "7395:53:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7457:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7473:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "7467:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7467:16:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "7457:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7492:63:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7540:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7551:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7536:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7536:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_enum_Status_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "7502:33:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7502:53:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "7492:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7564:35:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7584:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7595:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7580:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7580:18:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "7574:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7574:25:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "7564:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7608:35:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7628:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7639:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7624:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7624:18:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "7618:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7618:25:1"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "7608:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7652:36:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7672:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7683:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7668:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7668:19:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "7662:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7662:26:1"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "7652:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7697:39:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7720:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7731:3:1",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7716:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7716:19:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "7710:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7710:26:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "7701:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7770:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "7745:24:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7745:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7745:31:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7785:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "7795:5:1"
															},
															"variableNames": [
																{
																	"name": "value5",
																	"nodeType": "YulIdentifier",
																	"src": "7785:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_enum$_Status_$137t_uint256t_uint256t_uint256t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7311:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7322:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7334:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7342:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "7350:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "7358:6:1",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "7366:6:1",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "7374:6:1",
														"type": ""
													}
												],
												"src": "7209:597:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7892:103:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7938:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7947:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7950:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7940:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7940:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7940:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7913:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7922:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7909:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7909:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7934:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7905:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7905:32:1"
															},
															"nodeType": "YulIf",
															"src": "7902:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7963:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7979:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "7973:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7973:16:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "7963:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7858:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7869:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7881:6:1",
														"type": ""
													}
												],
												"src": "7811:184:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8032:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8049:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8056:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8061:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "8052:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8052:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8042:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8042:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8042:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8089:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8092:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8082:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8082:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8082:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8113:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8116:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8106:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8106:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8106:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "8000:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8177:230:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8187:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8203:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "8197:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8197:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "8187:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8215:58:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "8237:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "size",
																						"nodeType": "YulIdentifier",
																						"src": "8253:4:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8259:2:1",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8249:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8249:13:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8268:2:1",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "8264:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8264:7:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "8245:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8245:27:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8233:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8233:40:1"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "8219:10:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8348:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "8350:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8350:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8350:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "8291:10:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8303:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "8288:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8288:34:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "8327:10:1"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8339:6:1"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "8324:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8324:22:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "8285:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8285:62:1"
															},
															"nodeType": "YulIf",
															"src": "8282:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8386:2:1",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "8390:10:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8379:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8379:22:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8379:22:1"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "8157:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "8166:6:1",
														"type": ""
													}
												],
												"src": "8132:275:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8481:114:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8525:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "8527:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8527:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8527:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8497:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8505:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8494:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8494:30:1"
															},
															"nodeType": "YulIf",
															"src": "8491:56:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8556:33:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8572:1:1",
																				"type": "",
																				"value": "5"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8575:6:1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "8568:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8568:14:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8584:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8564:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8564:25:1"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "8556:4:1"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_array_address_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "8461:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "8472:4:1",
														"type": ""
													}
												],
												"src": "8412:183:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8675:659:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8724:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8733:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8736:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8726:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8726:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8726:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8703:6:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8711:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8699:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8699:17:1"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "8718:3:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "8695:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8695:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8688:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8688:35:1"
															},
															"nodeType": "YulIf",
															"src": "8685:55:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8749:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "8765:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "8759:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8759:13:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "8753:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8781:14:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "8791:4:1",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "8785:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8804:71:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "8871:2:1"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_array_address_dyn",
																			"nodeType": "YulIdentifier",
																			"src": "8831:39:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8831:43:1"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "8815:15:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8815:60:1"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "8808:3:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8884:16:1",
															"value": {
																"name": "dst",
																"nodeType": "YulIdentifier",
																"src": "8897:3:1"
															},
															"variables": [
																{
																	"name": "dst_1",
																	"nodeType": "YulTypedName",
																	"src": "8888:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "8916:3:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "8921:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8909:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8909:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8909:15:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8933:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "8944:3:1"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "8949:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8940:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8940:12:1"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "8933:3:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8961:46:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "8983:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8995:1:1",
																						"type": "",
																						"value": "5"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "8998:2:1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "8991:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8991:10:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8979:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8979:23:1"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "9004:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8975:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8975:32:1"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "8965:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9035:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9044:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9047:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9037:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9037:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9037:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "9022:6:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "9030:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "9019:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9019:15:1"
															},
															"nodeType": "YulIf",
															"src": "9016:35:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9060:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "9075:6:1"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "9083:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9071:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9071:15:1"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "9064:3:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9151:154:1",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "9165:23:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "9184:3:1"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "9178:5:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9178:10:1"
																		},
																		"variables": [
																			{
																				"name": "value",
																				"nodeType": "YulTypedName",
																				"src": "9169:5:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value",
																					"nodeType": "YulIdentifier",
																					"src": "9226:5:1"
																				}
																			],
																			"functionName": {
																				"name": "validator_revert_address",
																				"nodeType": "YulIdentifier",
																				"src": "9201:24:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9201:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9201:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "9252:3:1"
																				},
																				{
																					"name": "value",
																					"nodeType": "YulIdentifier",
																					"src": "9257:5:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "9245:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9245:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9245:18:1"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "9276:19:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "9287:3:1"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "9292:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "9283:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9283:12:1"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "9276:3:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "9106:3:1"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "9111:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "9103:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9103:15:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "9119:23:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "9121:19:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "9132:3:1"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "9137:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "9128:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9128:12:1"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "9121:3:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "9099:3:1",
																"statements": []
															},
															"src": "9095:210:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9314:14:1",
															"value": {
																"name": "dst_1",
																"nodeType": "YulIdentifier",
																"src": "9323:5:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "9314:5:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_array_address_dyn_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "8649:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8657:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "8665:5:1",
														"type": ""
													}
												],
												"src": "8600:734:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9418:612:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9467:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9476:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9479:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9469:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9469:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9469:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9446:6:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9454:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9442:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9442:17:1"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "9461:3:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "9438:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9438:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "9431:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9431:35:1"
															},
															"nodeType": "YulIf",
															"src": "9428:55:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9492:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "9508:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "9502:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9502:13:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "9496:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9524:14:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "9534:4:1",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "9528:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9547:71:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "9614:2:1"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_array_address_dyn",
																			"nodeType": "YulIdentifier",
																			"src": "9574:39:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9574:43:1"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "9558:15:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9558:60:1"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "9551:3:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9627:16:1",
															"value": {
																"name": "dst",
																"nodeType": "YulIdentifier",
																"src": "9640:3:1"
															},
															"variables": [
																{
																	"name": "dst_1",
																	"nodeType": "YulTypedName",
																	"src": "9631:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "9659:3:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "9664:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9652:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9652:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9652:15:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9676:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "9687:3:1"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "9692:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9683:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9683:12:1"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "9676:3:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9704:46:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "9726:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9738:1:1",
																						"type": "",
																						"value": "5"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "9741:2:1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "9734:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9734:10:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9722:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9722:23:1"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "9747:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9718:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9718:32:1"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "9708:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9778:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9787:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9790:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9780:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9780:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9780:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "9765:6:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "9773:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "9762:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9762:15:1"
															},
															"nodeType": "YulIf",
															"src": "9759:35:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9803:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "9818:6:1"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "9826:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9814:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9814:15:1"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "9807:3:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9894:107:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "9915:3:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "9954:3:1"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_enum_Status_fromMemory",
																						"nodeType": "YulIdentifier",
																						"src": "9920:33:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9920:38:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "9908:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9908:51:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9908:51:1"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "9972:19:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "9983:3:1"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "9988:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "9979:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9979:12:1"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "9972:3:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "9849:3:1"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "9854:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "9846:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9846:15:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "9862:23:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "9864:19:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "9875:3:1"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "9880:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "9871:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9871:12:1"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "9864:3:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "9842:3:1",
																"statements": []
															},
															"src": "9838:163:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10010:14:1",
															"value": {
																"name": "dst_1",
																"nodeType": "YulIdentifier",
																"src": "10019:5:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "10010:5:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_array_enum_Status_dyn_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "9392:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9400:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "9408:5:1",
														"type": ""
													}
												],
												"src": "9339:691:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10110:584:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10159:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10168:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10171:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "10161:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10161:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10161:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "10138:6:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10146:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10134:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10134:17:1"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "10153:3:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "10130:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10130:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10123:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10123:35:1"
															},
															"nodeType": "YulIf",
															"src": "10120:55:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10184:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "10200:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "10194:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10194:13:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "10188:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10216:14:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "10226:4:1",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "10220:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10239:71:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "10306:2:1"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_array_address_dyn",
																			"nodeType": "YulIdentifier",
																			"src": "10266:39:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10266:43:1"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "10250:15:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10250:60:1"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "10243:3:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10319:16:1",
															"value": {
																"name": "dst",
																"nodeType": "YulIdentifier",
																"src": "10332:3:1"
															},
															"variables": [
																{
																	"name": "dst_1",
																	"nodeType": "YulTypedName",
																	"src": "10323:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "10351:3:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "10356:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10344:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10344:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10344:15:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10368:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "10379:3:1"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "10384:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10375:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10375:12:1"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "10368:3:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10396:46:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "10418:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10430:1:1",
																						"type": "",
																						"value": "5"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "10433:2:1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "10426:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10426:10:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10414:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10414:23:1"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "10439:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10410:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10410:32:1"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "10400:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10470:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10479:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10482:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "10472:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10472:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10472:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "10457:6:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "10465:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "10454:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10454:15:1"
															},
															"nodeType": "YulIf",
															"src": "10451:35:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10495:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "10510:6:1"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "10518:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10506:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10506:15:1"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "10499:3:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10586:79:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "10607:3:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "10618:3:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "10612:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10612:10:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "10600:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10600:23:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10600:23:1"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "10636:19:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "10647:3:1"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "10652:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "10643:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10643:12:1"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "10636:3:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "10541:3:1"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "10546:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "10538:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10538:15:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "10554:23:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "10556:19:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "10567:3:1"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "10572:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "10563:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10563:12:1"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "10556:3:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "10534:3:1",
																"statements": []
															},
															"src": "10530:135:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10674:14:1",
															"value": {
																"name": "dst_1",
																"nodeType": "YulIdentifier",
																"src": "10683:5:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "10674:5:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_array_uint256_dyn_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "10084:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10092:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "10100:5:1",
														"type": ""
													}
												],
												"src": "10035:659:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10773:1574:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10783:14:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "10793:4:1",
																"type": "",
																"value": "0x1f"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "10787:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10843:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10852:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10855:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "10845:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10845:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10845:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "10824:6:1"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "10832:2:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10820:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10820:15:1"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "10837:3:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "10816:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10816:25:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10809:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10809:33:1"
															},
															"nodeType": "YulIf",
															"src": "10806:53:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10868:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "10884:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "10878:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10878:13:1"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "10872:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10900:14:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "10910:4:1",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "10904:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10923:71:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "10990:2:1"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_array_address_dyn",
																			"nodeType": "YulIdentifier",
																			"src": "10950:39:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10950:43:1"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "10934:15:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10934:60:1"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "10927:3:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11003:16:1",
															"value": {
																"name": "dst",
																"nodeType": "YulIdentifier",
																"src": "11016:3:1"
															},
															"variables": [
																{
																	"name": "dst_1",
																	"nodeType": "YulTypedName",
																	"src": "11007:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "11035:3:1"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "11040:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11028:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11028:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11028:15:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11052:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "11063:3:1"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "11068:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11059:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11059:12:1"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "11052:3:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11080:46:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "11102:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "11114:1:1",
																						"type": "",
																						"value": "5"
																					},
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "11117:2:1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "11110:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11110:10:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11098:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11098:23:1"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "11123:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11094:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11094:32:1"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "11084:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11154:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11163:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11166:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "11156:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11156:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11156:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "11141:6:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "11149:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "11138:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11138:15:1"
															},
															"nodeType": "YulIf",
															"src": "11135:35:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11179:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "11194:6:1"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "11202:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11190:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11190:15:1"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "11183:3:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11270:1048:1",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "11284:29:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "11309:3:1"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "11303:5:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11303:10:1"
																		},
																		"variables": [
																			{
																				"name": "innerOffset",
																				"nodeType": "YulTypedName",
																				"src": "11288:11:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "11326:28:1",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "11336:18:1",
																			"type": "",
																			"value": "0xffffffffffffffff"
																		},
																		"variables": [
																			{
																				"name": "_4",
																				"nodeType": "YulTypedName",
																				"src": "11330:2:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "11402:74:1",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "11420:11:1",
																					"value": {
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "11430:1:1",
																						"type": "",
																						"value": "0"
																					},
																					"variables": [
																						{
																							"name": "_5",
																							"nodeType": "YulTypedName",
																							"src": "11424:2:1",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "_5",
																								"nodeType": "YulIdentifier",
																								"src": "11455:2:1"
																							},
																							{
																								"name": "_5",
																								"nodeType": "YulIdentifier",
																								"src": "11459:2:1"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "11448:6:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "11448:14:1"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "11448:14:1"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "innerOffset",
																					"nodeType": "YulIdentifier",
																					"src": "11373:11:1"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "11386:2:1"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nodeType": "YulIdentifier",
																				"src": "11370:2:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11370:19:1"
																		},
																		"nodeType": "YulIf",
																		"src": "11367:109:1"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "11489:34:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "offset",
																					"nodeType": "YulIdentifier",
																					"src": "11503:6:1"
																				},
																				{
																					"name": "innerOffset",
																					"nodeType": "YulIdentifier",
																					"src": "11511:11:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "11499:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11499:24:1"
																		},
																		"variables": [
																			{
																				"name": "_6",
																				"nodeType": "YulTypedName",
																				"src": "11493:2:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "11581:74:1",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "11599:11:1",
																					"value": {
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "11609:1:1",
																						"type": "",
																						"value": "0"
																					},
																					"variables": [
																						{
																							"name": "_7",
																							"nodeType": "YulTypedName",
																							"src": "11603:2:1",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "_7",
																								"nodeType": "YulIdentifier",
																								"src": "11634:2:1"
																							},
																							{
																								"name": "_7",
																								"nodeType": "YulIdentifier",
																								"src": "11638:2:1"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "11627:6:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "11627:14:1"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "11627:14:1"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "_6",
																									"nodeType": "YulIdentifier",
																									"src": "11554:2:1"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "11558:2:1",
																									"type": "",
																									"value": "63"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "11550:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "11550:11:1"
																						},
																						{
																							"name": "end",
																							"nodeType": "YulIdentifier",
																							"src": "11563:3:1"
																						}
																					],
																					"functionName": {
																						"name": "slt",
																						"nodeType": "YulIdentifier",
																						"src": "11546:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11546:21:1"
																				}
																			],
																			"functionName": {
																				"name": "iszero",
																				"nodeType": "YulIdentifier",
																				"src": "11539:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11539:29:1"
																		},
																		"nodeType": "YulIf",
																		"src": "11536:119:1"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "11668:28:1",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "_6",
																							"nodeType": "YulIdentifier",
																							"src": "11688:2:1"
																						},
																						{
																							"name": "_3",
																							"nodeType": "YulIdentifier",
																							"src": "11692:2:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "11684:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11684:11:1"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "11678:5:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11678:18:1"
																		},
																		"variables": [
																			{
																				"name": "_8",
																				"nodeType": "YulTypedName",
																				"src": "11672:2:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "11723:22:1",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x41",
																							"nodeType": "YulIdentifier",
																							"src": "11725:16:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "11725:18:1"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "11725:18:1"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "_8",
																					"nodeType": "YulIdentifier",
																					"src": "11715:2:1"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "11719:2:1"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nodeType": "YulIdentifier",
																				"src": "11712:2:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11712:10:1"
																		},
																		"nodeType": "YulIf",
																		"src": "11709:36:1"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "11758:66:1",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "_8",
																											"nodeType": "YulIdentifier",
																											"src": "11801:2:1"
																										},
																										{
																											"name": "_1",
																											"nodeType": "YulIdentifier",
																											"src": "11805:2:1"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "11797:3:1"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "11797:11:1"
																								},
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "11814:2:1",
																											"type": "",
																											"value": "31"
																										}
																									],
																									"functionName": {
																										"name": "not",
																										"nodeType": "YulIdentifier",
																										"src": "11810:3:1"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "11810:7:1"
																								}
																							],
																							"functionName": {
																								"name": "and",
																								"nodeType": "YulIdentifier",
																								"src": "11793:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "11793:25:1"
																						},
																						{
																							"name": "_3",
																							"nodeType": "YulIdentifier",
																							"src": "11820:2:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "11789:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11789:34:1"
																				}
																			],
																			"functionName": {
																				"name": "allocate_memory",
																				"nodeType": "YulIdentifier",
																				"src": "11773:15:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11773:51:1"
																		},
																		"variables": [
																			{
																				"name": "array_1",
																				"nodeType": "YulTypedName",
																				"src": "11762:7:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "array_1",
																					"nodeType": "YulIdentifier",
																					"src": "11844:7:1"
																				},
																				{
																					"name": "_8",
																					"nodeType": "YulIdentifier",
																					"src": "11853:2:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "11837:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11837:19:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11837:19:1"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "11869:12:1",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "11879:2:1",
																			"type": "",
																			"value": "64"
																		},
																		"variables": [
																			{
																				"name": "_9",
																				"nodeType": "YulTypedName",
																				"src": "11873:2:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "11939:77:1",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "11957:12:1",
																					"value": {
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "11968:1:1",
																						"type": "",
																						"value": "0"
																					},
																					"variables": [
																						{
																							"name": "_10",
																							"nodeType": "YulTypedName",
																							"src": "11961:3:1",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "_10",
																								"nodeType": "YulIdentifier",
																								"src": "11993:3:1"
																							},
																							{
																								"name": "_10",
																								"nodeType": "YulIdentifier",
																								"src": "11998:3:1"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "11986:6:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "11986:16:1"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "11986:16:1"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "_6",
																									"nodeType": "YulIdentifier",
																									"src": "11908:2:1"
																								},
																								{
																									"name": "_8",
																									"nodeType": "YulIdentifier",
																									"src": "11912:2:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "11904:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "11904:11:1"
																						},
																						{
																							"name": "_9",
																							"nodeType": "YulIdentifier",
																							"src": "11917:2:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "11900:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11900:20:1"
																				},
																				{
																					"name": "end",
																					"nodeType": "YulIdentifier",
																					"src": "11922:3:1"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nodeType": "YulIdentifier",
																				"src": "11897:2:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11897:29:1"
																		},
																		"nodeType": "YulIf",
																		"src": "11894:122:1"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "12029:10:1",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "12038:1:1",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "12033:1:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "12102:92:1",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "array_1",
																												"nodeType": "YulIdentifier",
																												"src": "12135:7:1"
																											},
																											{
																												"name": "i",
																												"nodeType": "YulIdentifier",
																												"src": "12144:1:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "12131:3:1"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "12131:15:1"
																									},
																									{
																										"name": "_3",
																										"nodeType": "YulIdentifier",
																										"src": "12148:2:1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "12127:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "12127:24:1"
																							},
																							{
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "_6",
																														"nodeType": "YulIdentifier",
																														"src": "12167:2:1"
																													},
																													{
																														"name": "i",
																														"nodeType": "YulIdentifier",
																														"src": "12171:1:1"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "12163:3:1"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "12163:10:1"
																											},
																											{
																												"name": "_9",
																												"nodeType": "YulIdentifier",
																												"src": "12175:2:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "12159:3:1"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "12159:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "12153:5:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "12153:26:1"
																							}
																						],
																						"functionName": {
																							"name": "mstore",
																							"nodeType": "YulIdentifier",
																							"src": "12120:6:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "12120:60:1"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "12120:60:1"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "12063:1:1"
																				},
																				{
																					"name": "_8",
																					"nodeType": "YulIdentifier",
																					"src": "12066:2:1"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "12060:2:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12060:9:1"
																		},
																		"nodeType": "YulForLoop",
																		"post": {
																			"nodeType": "YulBlock",
																			"src": "12070:19:1",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "12072:15:1",
																					"value": {
																						"arguments": [
																							{
																								"name": "i",
																								"nodeType": "YulIdentifier",
																								"src": "12081:1:1"
																							},
																							{
																								"name": "_3",
																								"nodeType": "YulIdentifier",
																								"src": "12084:2:1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "12077:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "12077:10:1"
																					},
																					"variableNames": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "12072:1:1"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nodeType": "YulBlock",
																			"src": "12056:3:1",
																			"statements": []
																		},
																		"src": "12052:142:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "array_1",
																									"nodeType": "YulIdentifier",
																									"src": "12222:7:1"
																								},
																								{
																									"name": "_8",
																									"nodeType": "YulIdentifier",
																									"src": "12231:2:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "12218:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "12218:16:1"
																						},
																						{
																							"name": "_3",
																							"nodeType": "YulIdentifier",
																							"src": "12236:2:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "12214:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "12214:25:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12241:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "12207:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12207:36:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12207:36:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "12263:3:1"
																				},
																				{
																					"name": "array_1",
																					"nodeType": "YulIdentifier",
																					"src": "12268:7:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "12256:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12256:20:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12256:20:1"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "12289:19:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "12300:3:1"
																				},
																				{
																					"name": "_3",
																					"nodeType": "YulIdentifier",
																					"src": "12305:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "12296:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12296:12:1"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "12289:3:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "11225:3:1"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "11230:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "11222:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11222:15:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "11238:23:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "11240:19:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "11251:3:1"
																				},
																				{
																					"name": "_3",
																					"nodeType": "YulIdentifier",
																					"src": "11256:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "11247:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11247:12:1"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "11240:3:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "11218:3:1",
																"statements": []
															},
															"src": "11214:1104:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12327:14:1",
															"value": {
																"name": "dst_1",
																"nodeType": "YulIdentifier",
																"src": "12336:5:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "12327:5:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_array_string_dyn_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "10747:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10755:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "10763:5:1",
														"type": ""
													}
												],
												"src": "10699:1648:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12690:1124:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12737:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12746:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12749:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "12739:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12739:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12739:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "12711:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12720:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12707:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12707:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12732:3:1",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "12703:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12703:33:1"
															},
															"nodeType": "YulIf",
															"src": "12700:53:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12762:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12778:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "12772:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12772:16:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "12762:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12797:35:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12817:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12828:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12813:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12813:18:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "12807:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12807:25:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "12797:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12841:39:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12865:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12876:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12861:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12861:18:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "12855:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12855:25:1"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "12845:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12889:28:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "12899:18:1",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "12893:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12944:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12953:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12956:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "12946:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12946:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12946:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "12932:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "12940:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "12929:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12929:14:1"
															},
															"nodeType": "YulIf",
															"src": "12926:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12969:82:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13023:9:1"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "13034:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13019:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13019:22:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "13043:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_address_dyn_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "12979:39:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12979:72:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "12969:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13060:41:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13086:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13097:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13082:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13082:18:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "13076:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13076:25:1"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "13064:8:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13130:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13139:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13142:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "13132:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13132:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13132:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "13116:8:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "13126:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "13113:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13113:16:1"
															},
															"nodeType": "YulIf",
															"src": "13110:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13155:88:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13213:9:1"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "13224:8:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13209:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13209:24:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "13235:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_enum_Status_dyn_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "13165:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13165:78:1"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "13155:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13252:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13278:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13289:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13274:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13274:19:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "13268:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13268:26:1"
															},
															"variables": [
																{
																	"name": "offset_2",
																	"nodeType": "YulTypedName",
																	"src": "13256:8:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13323:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13332:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13335:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "13325:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13325:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13325:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_2",
																		"nodeType": "YulIdentifier",
																		"src": "13309:8:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "13319:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "13306:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13306:16:1"
															},
															"nodeType": "YulIf",
															"src": "13303:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13348:84:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13402:9:1"
																			},
																			{
																				"name": "offset_2",
																				"nodeType": "YulIdentifier",
																				"src": "13413:8:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13398:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13398:24:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "13424:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "13358:39:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13358:74:1"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "13348:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13441:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13467:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13478:3:1",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13463:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13463:19:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "13457:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13457:26:1"
															},
															"variables": [
																{
																	"name": "offset_3",
																	"nodeType": "YulTypedName",
																	"src": "13445:8:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13512:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13521:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13524:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "13514:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13514:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13514:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_3",
																		"nodeType": "YulIdentifier",
																		"src": "13498:8:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "13508:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "13495:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13495:16:1"
															},
															"nodeType": "YulIf",
															"src": "13492:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13537:83:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13590:9:1"
																			},
																			{
																				"name": "offset_3",
																				"nodeType": "YulIdentifier",
																				"src": "13601:8:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13586:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13586:24:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "13612:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_string_dyn_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "13547:38:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13547:73:1"
															},
															"variableNames": [
																{
																	"name": "value5",
																	"nodeType": "YulIdentifier",
																	"src": "13537:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13629:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13655:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13666:3:1",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13651:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13651:19:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "13645:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13645:26:1"
															},
															"variables": [
																{
																	"name": "offset_4",
																	"nodeType": "YulTypedName",
																	"src": "13633:8:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13700:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13709:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13712:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "13702:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13702:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13702:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_4",
																		"nodeType": "YulIdentifier",
																		"src": "13686:8:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "13696:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "13683:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13683:16:1"
															},
															"nodeType": "YulIf",
															"src": "13680:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13725:83:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13778:9:1"
																			},
																			{
																				"name": "offset_4",
																				"nodeType": "YulIdentifier",
																				"src": "13789:8:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13774:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13774:24:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "13800:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_string_dyn_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "13735:38:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13735:73:1"
															},
															"variableNames": [
																{
																	"name": "value6",
																	"nodeType": "YulIdentifier",
																	"src": "13725:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_array$_t_address_$dyn_memory_ptrt_array$_t_enum$_Status_$137_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_array$_t_string_memory_ptr_$dyn_memory_ptrt_array$_t_string_memory_ptr_$dyn_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12608:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "12619:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12631:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "12639:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "12647:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "12655:6:1",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "12663:6:1",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "12671:6:1",
														"type": ""
													},
													{
														"name": "value6",
														"nodeType": "YulTypedName",
														"src": "12679:6:1",
														"type": ""
													}
												],
												"src": "12352:1462:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13864:130:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13874:31:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "13893:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13900:4:1",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "13889:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13889:16:1"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "13878:7:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13935:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "13937:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13937:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13937:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "13920:7:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13929:4:1",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "13917:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13917:17:1"
															},
															"nodeType": "YulIf",
															"src": "13914:43:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13966:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "13977:7:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13986:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13973:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13973:15:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "13966:3:1"
																}
															]
														}
													]
												},
												"name": "increment_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13846:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "13856:3:1",
														"type": ""
													}
												],
												"src": "13819:175:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14173:160:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14190:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14201:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14183:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14183:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14183:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14224:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14235:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14220:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14220:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14240:2:1",
																		"type": "",
																		"value": "10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14213:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14213:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14213:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14263:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14274:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14259:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14259:18:1"
																	},
																	{
																		"hexValue": "4e6f207374616b657273",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14279:12:1",
																		"type": "",
																		"value": "No stakers"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14252:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14252:40:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14252:40:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14301:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14313:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14324:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14309:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14309:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14301:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_54025137788e7e9d462111aca326bb911826fad4e8e597c5ee14218225070076__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14150:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14164:4:1",
														"type": ""
													}
												],
												"src": "13999:334:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14512:174:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14529:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14540:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14522:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14522:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14522:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14563:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14574:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14559:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14559:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14579:2:1",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14552:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14552:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14552:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14602:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14613:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14598:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14598:18:1"
																	},
																	{
																		"hexValue": "6f6e6c7956616c44617461436f6e7472616374206f6e6c79",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14618:26:1",
																		"type": "",
																		"value": "onlyValDataContract only"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14591:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14591:54:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14591:54:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14654:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14666:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14677:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14662:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14662:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14654:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5cb2cb851500aab97b488d2fab8c38eaf8be2ad6fb9cf8bbf8c57c01c610f95b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14489:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14503:4:1",
														"type": ""
													}
												],
												"src": "14338:348:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14742:206:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14752:28:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "14762:18:1",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "14756:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14789:46:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "14816:1:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "14819:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "14812:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14812:10:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "14828:1:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "14831:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "14824:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14824:10:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "14808:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14808:27:1"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nodeType": "YulTypedName",
																	"src": "14793:11:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "14844:31:1",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nodeType": "YulIdentifier",
																		"src": "14859:11:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "14872:2:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "14855:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14855:20:1"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "14844:7:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14920:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "14922:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14922:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14922:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "product",
																				"nodeType": "YulIdentifier",
																				"src": "14897:7:1"
																			},
																			{
																				"name": "product_raw",
																				"nodeType": "YulIdentifier",
																				"src": "14906:11:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "14894:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14894:24:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "14887:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14887:32:1"
															},
															"nodeType": "YulIf",
															"src": "14884:58:1"
														}
													]
												},
												"name": "checked_mul_t_uint64",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "14721:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "14724:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "14730:7:1",
														"type": ""
													}
												],
												"src": "14691:257:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15127:228:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15144:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15155:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15137:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15137:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15137:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15178:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15189:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15174:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15174:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15194:2:1",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15167:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15167:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15167:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15217:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15228:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15213:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15213:18:1"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15233:34:1",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15206:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15206:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15206:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15288:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15299:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15284:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15284:18:1"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15304:8:1",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15277:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15277:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15277:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15322:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15334:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15345:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15330:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15330:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15322:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15104:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15118:4:1",
														"type": ""
													}
												],
												"src": "14953:402:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15534:178:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15551:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15562:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15544:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15544:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15544:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15585:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15596:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15581:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15581:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15601:2:1",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15574:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15574:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15574:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15624:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15635:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15620:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15620:18:1"
																	},
																	{
																		"hexValue": "496e636f7272656374204d696e696d616c5374616b696e67436f696e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15640:30:1",
																		"type": "",
																		"value": "Incorrect MinimalStakingCoin"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15613:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15613:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15613:58:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15680:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15692:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15703:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15688:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15688:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15680:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1c1c4317381ec0c760e7211168a74acf7dbced02cc52aa86e92af470f9e24fe3__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15511:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15525:4:1",
														"type": ""
													}
												],
												"src": "15360:352:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15891:182:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15908:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15919:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15901:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15901:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15901:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15942:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15953:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15938:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15938:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15958:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15931:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15931:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15931:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15981:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15992:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15977:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15977:18:1"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15997:34:1",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15970:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15970:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15970:62:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16041:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16053:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16064:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16049:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16049:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16041:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15868:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15882:4:1",
														"type": ""
													}
												],
												"src": "15717:356:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16110:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16127:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16134:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16139:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "16130:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16130:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16120:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16120:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16120:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16167:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16170:4:1",
																		"type": "",
																		"value": "0x31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16160:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16160:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16160:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16191:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16194:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "16184:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16184:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16184:15:1"
														}
													]
												},
												"name": "panic_error_0x31",
												"nodeType": "YulFunctionDefinition",
												"src": "16078:127:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_uint64(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, 0xffffffffffffffff))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let srcPtr := add(value0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, and(mload(srcPtr), sub(shl(160, 1), 1)))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffff))\n    }\n    function abi_decode_tuple_t_uint16(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, 0xffff))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffff))\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_contract$_InterfaceValidator_$190__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_72c7b026e567bb46366a5bd22cdcf2cff2158a77f2b7f6ce1289658b87e6ce64__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Penalty cannot be 100%\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_42f46607fb15b7b6277e560cb4c47a556656af70297e39e5ca0f1a20e37a69fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"You don't have any stake\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_stringliteral_d2ba0f653fcbe1afc9b84e320657368b893b7ad54da2f700d876aa380dcc7782__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"Staking coins not enough\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ba804126d815ed68ee4da90636d7a5e80cb0f9d156959f15a3e42c332e0abffb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"Can't stake slot is full\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_900e2ba09f45ece17ffae1e191643d3c8705b0667ea87acdfa71696a7c7fd0f7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"invalid contract\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_decode_enum_Status_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(lt(value, 5)) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint256t_enum$_Status_$137t_uint256t_uint256t_uint256t_address_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5\n    {\n        if slt(sub(dataEnd, headStart), 192) { revert(0, 0) }\n        value0 := mload(headStart)\n        value1 := abi_decode_enum_Status_fromMemory(add(headStart, 32))\n        value2 := mload(add(headStart, 64))\n        value3 := mload(add(headStart, 96))\n        value4 := mload(add(headStart, 128))\n        let value := mload(add(headStart, 160))\n        validator_revert_address(value)\n        value5 := value\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function allocate_memory(size) -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function array_allocation_size_array_address_dyn(length) -> size\n    {\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        size := add(shl(5, length), 0x20)\n    }\n    function abi_decode_array_address_dyn_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := 0x20\n        let dst := allocate_memory(array_allocation_size_array_address_dyn(_1))\n        let dst_1 := dst\n        mstore(dst, _1)\n        dst := add(dst, _2)\n        let srcEnd := add(add(offset, shl(5, _1)), _2)\n        if gt(srcEnd, end) { revert(0, 0) }\n        let src := add(offset, _2)\n        for { } lt(src, srcEnd) { src := add(src, _2) }\n        {\n            let value := mload(src)\n            validator_revert_address(value)\n            mstore(dst, value)\n            dst := add(dst, _2)\n        }\n        array := dst_1\n    }\n    function abi_decode_array_enum_Status_dyn_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := 0x20\n        let dst := allocate_memory(array_allocation_size_array_address_dyn(_1))\n        let dst_1 := dst\n        mstore(dst, _1)\n        dst := add(dst, _2)\n        let srcEnd := add(add(offset, shl(5, _1)), _2)\n        if gt(srcEnd, end) { revert(0, 0) }\n        let src := add(offset, _2)\n        for { } lt(src, srcEnd) { src := add(src, _2) }\n        {\n            mstore(dst, abi_decode_enum_Status_fromMemory(src))\n            dst := add(dst, _2)\n        }\n        array := dst_1\n    }\n    function abi_decode_array_uint256_dyn_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := 0x20\n        let dst := allocate_memory(array_allocation_size_array_address_dyn(_1))\n        let dst_1 := dst\n        mstore(dst, _1)\n        dst := add(dst, _2)\n        let srcEnd := add(add(offset, shl(5, _1)), _2)\n        if gt(srcEnd, end) { revert(0, 0) }\n        let src := add(offset, _2)\n        for { } lt(src, srcEnd) { src := add(src, _2) }\n        {\n            mstore(dst, mload(src))\n            dst := add(dst, _2)\n        }\n        array := dst_1\n    }\n    function abi_decode_array_string_dyn_fromMemory(offset, end) -> array\n    {\n        let _1 := 0x1f\n        if iszero(slt(add(offset, _1), end)) { revert(0, 0) }\n        let _2 := mload(offset)\n        let _3 := 0x20\n        let dst := allocate_memory(array_allocation_size_array_address_dyn(_2))\n        let dst_1 := dst\n        mstore(dst, _2)\n        dst := add(dst, _3)\n        let srcEnd := add(add(offset, shl(5, _2)), _3)\n        if gt(srcEnd, end) { revert(0, 0) }\n        let src := add(offset, _3)\n        for { } lt(src, srcEnd) { src := add(src, _3) }\n        {\n            let innerOffset := mload(src)\n            let _4 := 0xffffffffffffffff\n            if gt(innerOffset, _4)\n            {\n                let _5 := 0\n                revert(_5, _5)\n            }\n            let _6 := add(offset, innerOffset)\n            if iszero(slt(add(_6, 63), end))\n            {\n                let _7 := 0\n                revert(_7, _7)\n            }\n            let _8 := mload(add(_6, _3))\n            if gt(_8, _4) { panic_error_0x41() }\n            let array_1 := allocate_memory(add(and(add(_8, _1), not(31)), _3))\n            mstore(array_1, _8)\n            let _9 := 64\n            if gt(add(add(_6, _8), _9), end)\n            {\n                let _10 := 0\n                revert(_10, _10)\n            }\n            let i := 0\n            for { } lt(i, _8) { i := add(i, _3) }\n            {\n                mstore(add(add(array_1, i), _3), mload(add(add(_6, i), _9)))\n            }\n            mstore(add(add(array_1, _8), _3), 0)\n            mstore(dst, array_1)\n            dst := add(dst, _3)\n        }\n        array := dst_1\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_array$_t_address_$dyn_memory_ptrt_array$_t_enum$_Status_$137_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_array$_t_string_memory_ptr_$dyn_memory_ptrt_array$_t_string_memory_ptr_$dyn_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6\n    {\n        if slt(sub(dataEnd, headStart), 224) { revert(0, 0) }\n        value0 := mload(headStart)\n        value1 := mload(add(headStart, 32))\n        let offset := mload(add(headStart, 64))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value2 := abi_decode_array_address_dyn_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 96))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value3 := abi_decode_array_enum_Status_dyn_fromMemory(add(headStart, offset_1), dataEnd)\n        let offset_2 := mload(add(headStart, 128))\n        if gt(offset_2, _1) { revert(0, 0) }\n        value4 := abi_decode_array_uint256_dyn_fromMemory(add(headStart, offset_2), dataEnd)\n        let offset_3 := mload(add(headStart, 160))\n        if gt(offset_3, _1) { revert(0, 0) }\n        value5 := abi_decode_array_string_dyn_fromMemory(add(headStart, offset_3), dataEnd)\n        let offset_4 := mload(add(headStart, 192))\n        if gt(offset_4, _1) { revert(0, 0) }\n        value6 := abi_decode_array_string_dyn_fromMemory(add(headStart, offset_4), dataEnd)\n    }\n    function increment_t_uint8(value) -> ret\n    {\n        let value_1 := and(value, 0xff)\n        if eq(value_1, 0xff) { panic_error_0x11() }\n        ret := add(value_1, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_54025137788e7e9d462111aca326bb911826fad4e8e597c5ee14218225070076__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 10)\n        mstore(add(headStart, 64), \"No stakers\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_5cb2cb851500aab97b488d2fab8c38eaf8be2ad6fb9cf8bbf8c57c01c610f95b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"onlyValDataContract only\")\n        tail := add(headStart, 96)\n    }\n    function checked_mul_t_uint64(x, y) -> product\n    {\n        let _1 := 0xffffffffffffffff\n        let product_raw := mul(and(x, _1), and(y, _1))\n        product := and(product_raw, _1)\n        if iszero(eq(product, product_raw)) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_1c1c4317381ec0c760e7211168a74acf7dbced02cc52aa86e92af470f9e24fe3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"Incorrect MinimalStakingCoin\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x31()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106101ee5760003560e01c80639fb82db91161010d578063e0639364116100a0578063f2fde38b1161006f578063f2fde38b146105a3578063f3883538146105c3578063f67c4dfd146105e3578063f6b663c314610603578063fe32f55e1461062357600080fd5b8063e06393641461050b578063e6af61c814610543578063e75bcb9614610559578063ee7cb2881461058357600080fd5b8063bddd6de4116100dc578063bddd6de41461047a578063be645692146104a8578063c7907f54146104be578063cc001f16146104de57600080fd5b80639fb82db9146103ed578063a9e30ccf1461040f578063aa4704f31461042f578063b08061081461046557600080fd5b806368015791116101855780638b0e9f3f116101545780638b0e9f3f146103875780638da5cb5b1461039d5780638f73c5ae146103cf5780639231cf74146103d757600080fd5b80636801579114610305578063715018a61461032557806372d30a701461033a57806382cb1c181461035a57600080fd5b80633a4b66f1116101c15780633a4b66f11461029057806341f349b5146102985780635fa34ebd146102b85780636285b5a2146102e557600080fd5b8063062b6139146101f357806315908d51146102155780632170e4721461023e5780632def66201461026b575b600080fd5b3480156101ff57600080fd5b5061021361020e3660046118af565b610643565b005b34801561022157600080fd5b5061022b60095481565b6040519081526020015b60405180910390f35b34801561024a57600080fd5b5061022b6102593660046118f4565b600b6020526000908152604090205481565b34801561027757600080fd5b506102806106b1565b6040519015158152602001610235565b6102806108d9565b3480156102a457600080fd5b506102806102b33660046118f4565b610ae5565b3480156102c457600080fd5b5061022b6102d3366004611911565b600e6020526000908152604090205481565b3480156102f157600080fd5b506102136103003660046118f4565b610b37565b34801561031157600080fd5b506102806103203660046118f4565b610baa565b34801561033157600080fd5b50610213610c13565b34801561034657600080fd5b506102806103553660046118f4565b610c27565b34801561036657600080fd5b5061022b6103753660046118f4565b600c6020526000908152604090205481565b34801561039357600080fd5b5061022b60065481565b3480156103a957600080fd5b506000546001600160a01b03165b6040516001600160a01b039091168152602001610235565b610213610f1c565b3480156103e357600080fd5b5061022b600d5481565b3480156103f957600080fd5b506104026111b6565b604051610235919061192a565b34801561041b57600080fd5b5061021361042a366004611977565b611218565b34801561043b57600080fd5b5061022b61044a3660046118f4565b6001600160a01b031660009081526002602052604090205490565b34801561047157600080fd5b506102136112b4565b34801561048657600080fd5b506004546104959061ffff1681565b60405161ffff9091168152602001610235565b3480156104b457600080fd5b5061022b60035481565b3480156104ca57600080fd5b506102136104d93660046119a3565b6112eb565b3480156104ea57600080fd5b5061022b6104f93660046118f4565b600a6020526000908152604090205481565b34801561051757600080fd5b5060085461052b906001600160401b031681565b6040516001600160401b039091168152602001610235565b34801561054f57600080fd5b5061022b60075481565b34801561056557600080fd5b5061056e61130b565b60408051928352602083019190915201610235565b34801561058f57600080fd5b5061021361059e3660046118af565b611320565b3480156105af57600080fd5b506102136105be3660046118f4565b611359565b3480156105cf57600080fd5b5061056e6105de3660046118f4565b6113cf565b3480156105ef57600080fd5b506102136105fe366004611911565b61156e565b34801561060f57600080fd5b506103b761061e366004611911565b6115cb565b34801561062f57600080fd5b506001546103b7906001600160a01b031681565b61064b6115f5565b612710816001600160401b0316106106a35760405162461bcd60e51b815260206004820152601660248201527550656e616c74792063616e6e6f74206265203130302560501b60448201526064015b60405180910390fd5b6001600160401b0316600955565b32600081815260026020526040812054909190806107115760405162461bcd60e51b815260206004820152601860248201527f596f7520646f6e2774206861766520616e79207374616b650000000000000000604482015260640161069a565b61071a82610c27565b506001600160a01b03821660009081526002602052604090205461073f9082906119dd565b6001600160a01b0383166000908152600260205260409020556006546107669082906119dd565b6006556107728261164f565b6008546001600160a01b0383166000908152600b6020526040812054909182916107a5916001600160401b0316906119f6565b42111580156107b657506000600954115b1561083157612710600954846107cc9190611a09565b6107d69190611a20565b90506107e281846119dd565b9150806007546107f291906119f6565b6007556040516001600160a01b0385169083156108fc029084906000818181858888f1935050505015801561082b573d6000803e3d6000fd5b50610869565b6040516001600160a01b0385169084156108fc029085906000818181858888f19350505050158015610867573d6000803e3d6000fd5b505b6001600160a01b0384166000818152600a60209081526040808320839055600b8252808320929092558151868152908101849052428183015290517f753014cc7945cb3c93016ecb5bc2a66e26d69971a934fcfe2a882794cb3448279181900360600190a2600194505050505090565b600354600090339034908110156109325760405162461bcd60e51b815260206004820152601860248201527f5374616b696e6720636f696e73206e6f7420656e6f7567680000000000000000604482015260640161069a565b60045460055461ffff9091161161098b5760405162461bcd60e51b815260206004820152601860248201527f43616e2774207374616b6520736c6f742069732066756c6c0000000000000000604482015260640161069a565b6001600160a01b03821660009081526002602052604081205490036109e757600d546000036109b95742600d555b600d546001600160a01b0383166000908152600a60209081526040808320849055600b9091529020556109f2565b6109f082610c27565b505b6001600160a01b038216600090815260026020526040902054610a169082906119f6565b6001600160a01b038316600090815260026020526040902055610a3882610baa565b610a8857600580546001810182556000919091527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db00180546001600160a01b0319166001600160a01b0384161790555b80600654610a9691906119f6565b600655604080518281524260208201526001600160a01b038416917fa0d1fa51224fb08c7c0b48d481448ad6a31c945d1a68cac8758cac3a92d5001c910160405180910390a260019250505090565b6008546001600160a01b0382166000908152600b60205260408120549091610b18916001600160401b03909116906119f6565b4211158015610b2957506000600954115b15610b32575060015b919050565b610b3f6115f5565b6001600160a01b038116610b885760405162461bcd60e51b815260206004820152601060248201526f1a5b9d985b1a590818dbdb9d1c9858dd60821b604482015260640161069a565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6000805b600554811015610c0a57826001600160a01b031660058281548110610bd557610bd5611a42565b6000918252602090912001546001600160a01b031603610bf85750600192915050565b80610c0281611a58565b915050610bae565b50600092915050565b610c1b6115f5565b610c2560006117b0565b565b6001600160a01b0381166000908152600a60205260408120548190819015610c85576001600160a01b0384166000908152600a60209081526040808320548352600e90915280822054600d548352912054610c8291906119dd565b91505b6001600160a01b0384166000908152600c60209081526040808320548352600e90915280822054600d548352912054610cbe91906119dd565b600154604051636487798160e01b81526001600160a01b038781166004830181905260248301529293506000929091169063648779819060440160c060405180830381865afa158015610d15573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d399190611a80565b5050505050905060008284610d4e91906119f6565b1115610f11576001600160a01b0385166000908152600a602052604090205415610d8f57600d546001600160a01b0386166000908152600a60205260409020555b60015460405163d0744e3d60e01b81526001600160a01b03878116600483018190526024830152600092169063d0744e3d90604401602060405180830381865afa158015610de1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e059190611adc565b1115610e2857600d546001600160a01b0386166000908152600c60205260409020555b6001600160a01b038516600090815260026020526040812054670de0b6b3a764000090610e56908690611a09565b610e609190611a20565b90506000670de0b6b3a7640000610e778585611a09565b610e819190611a20565b90506001600160a01b0387166108fc610e9a83856119f6565b6040518115909202916000818181858888f19350505050158015610ec2573d6000803e3d6000fd5b506001600160a01b0387167ff03271da9252f83cabf8baf9c18589849bdadb0ad1f6268432d871380624b9e6610ef883856119f6565b604080519182524260208301520160405180910390a250505b506001949350505050565b600060075434610f2c91906119f6565b90506000610f3a6000611800565b5090506000600160009054906101000a90046001600160a01b03166001600160a01b0316633f8dc65a6040518163ffffffff1660e01b8152600401600060405180830381865afa158015610f92573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610fba9190810190611d89565b5050825192955091935060009250829150505b828160ff1610156110c65760015484516000916001600160a01b031690636487798190879060ff861690811061100557611005611a42565b6020026020010151878560ff168151811061102257611022611a42565b60200260200101516040518363ffffffff1660e01b815260040161105c9291906001600160a01b0392831681529116602082015260400190565b60c060405180830381865afa158015611079573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061109d9190611a80565b5050505050905080836110b091906119f6565b92505080806110be90611e6d565b915050610fcd565b5060006110d382866119f6565b1161110d5760405162461bcd60e51b815260206004820152600a6024820152694e6f207374616b65727360b01b604482015260640161069a565b600d80546000908152600e60205260409020544290915561112e82866119f6565b61114087670de0b6b3a7640000611a09565b61114a9190611a20565b61115490826119f6565b600d546000908152600e602052604080822092909255600755517fddd247369eddde588b8afa794145311a9ac4ff297c32d895359c5befc1a4e1f3906111a69088904290918252602082015260400190565b60405180910390a1505050505050565b6060600580548060200260200160405190810160405280929190818152602001828054801561120e57602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116111f0575b5050505050905090565b6001546001600160a01b031633146112725760405162461bcd60e51b815260206004820152601860248201527f6f6e6c7956616c44617461436f6e7472616374206f6e6c790000000000000000604482015260640161069a565b801561129357506001600160a01b03166000908152600c6020526040812055565b50600d546001600160a01b03919091166000908152600c6020526040902055565b6112bc6115f5565b60405133904780156108fc02916000818181858888f193505050501580156112e8573d6000803e3d6000fd5b50565b6112f36115f5565b6004805461ffff191661ffff92909216919091179055565b6000806113186000611800565b915091509091565b6113286115f5565b6113358162015180611e8c565b6008805467ffffffffffffffff19166001600160401b039290921691909117905550565b6113616115f5565b6001600160a01b0381166113c65760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161069a565b6112e8816117b0565b6001600160a01b0381166000908152600a60205260408120548190819081901561142f576001600160a01b0385166000908152600a60209081526040808320548352600e90915280822054600d54835291205461142c91906119dd565b91505b6001600160a01b0385166000908152600c60209081526040808320548352600e90915280822054600d54835291205461146891906119dd565b600154604051636487798160e01b81526001600160a01b038881166004830181905260248301529293506000929091169063648779819060440160c060405180830381865afa1580156114bf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114e39190611a80565b50505050509050600082846114f891906119f6565b111561156057670de0b6b3a76400006115118383611a09565b61151b9190611a20565b6001600160a01b038716600090815260026020526040902054909550670de0b6b3a76400009061154c908590611a09565b6115569190611a20565b9350505050915091565b506000958695509350505050565b6115766115f5565b600081116115c65760405162461bcd60e51b815260206004820152601c60248201527f496e636f7272656374204d696e696d616c5374616b696e67436f696e00000000604482015260640161069a565b600355565b600581815481106115db57600080fd5b6000918252602090912001546001600160a01b0316905081565b6000546001600160a01b03163314610c255760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161069a565b60005b6005548110156117ac576005818154811061166f5761166f611a42565b6000918252602090912001546001600160a01b039081169083160361179a5760055461169d906001906119dd565b811461171e57600580546116b3906001906119dd565b815481106116c3576116c3611a42565b600091825260209091200154600580546001600160a01b0390921691839081106116ef576116ef611a42565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b031602179055505b600580548061172f5761172f611eb7565b600082815260209020810160001990810180546001600160a01b03191690550190556040516001600160a01b038316907f77f1de51ae9c845b4fff5f1512c8736ea703337fe77421649a51f6188d3470b29061178e9042815260200190565b60405180910390a25050565b806117a481611a58565b915050611652565b5050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60008060005b6005548110156118a9576005818154811061182357611823611a42565b6000918252602090912001546001600160a01b0385811691161461189757600260006005838154811061185857611858611a42565b60009182526020808320909101546001600160a01b0316835282019290925260400190205461188790846119f6565b92508161189381611a58565b9250505b806118a181611a58565b915050611806565b50915091565b6000602082840312156118c157600080fd5b81356001600160401b03811681146118d857600080fd5b9392505050565b6001600160a01b03811681146112e857600080fd5b60006020828403121561190657600080fd5b81356118d8816118df565b60006020828403121561192357600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b8181101561196b5783516001600160a01b031683529284019291840191600101611946565b50909695505050505050565b6000806040838503121561198a57600080fd5b8235611995816118df565b946020939093013593505050565b6000602082840312156119b557600080fd5b813561ffff811681146118d857600080fd5b634e487b7160e01b600052601160045260246000fd5b818103818111156119f0576119f06119c7565b92915050565b808201808211156119f0576119f06119c7565b80820281158282048414176119f0576119f06119c7565b600082611a3d57634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052603260045260246000fd5b600060018201611a6a57611a6a6119c7565b5060010190565b805160058110610b3257600080fd5b60008060008060008060c08789031215611a9957600080fd5b86519550611aa960208801611a71565b945060408701519350606087015192506080870151915060a0870151611ace816118df565b809150509295509295509295565b600060208284031215611aee57600080fd5b5051919050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715611b3357611b33611af5565b604052919050565b60006001600160401b03821115611b5457611b54611af5565b5060051b60200190565b600082601f830112611b6f57600080fd5b81516020611b84611b7f83611b3b565b611b0b565b82815260059290921b84018101918181019086841115611ba357600080fd5b8286015b84811015611bc7578051611bba816118df565b8352918301918301611ba7565b509695505050505050565b600082601f830112611be357600080fd5b81516020611bf3611b7f83611b3b565b82815260059290921b84018101918181019086841115611c1257600080fd5b8286015b84811015611bc757611c2781611a71565b8352918301918301611c16565b600082601f830112611c4557600080fd5b81516020611c55611b7f83611b3b565b82815260059290921b84018101918181019086841115611c7457600080fd5b8286015b84811015611bc75780518352918301918301611c78565b6000601f8381840112611ca157600080fd5b82516020611cb1611b7f83611b3b565b82815260059290921b85018101918181019087841115611cd057600080fd5b8287015b84811015611d7d5780516001600160401b0380821115611cf45760008081fd5b818a0191508a603f830112611d095760008081fd5b8582015181811115611d1d57611d1d611af5565b611d2e818a01601f19168801611b0b565b915080825260408c81838601011115611d475760008081fd5b60005b82811015611d65578481018201518482018a01528801611d4a565b50506000908201870152845250918301918301611cd4565b50979650505050505050565b600080600080600080600060e0888a031215611da457600080fd5b875196506020880151955060408801516001600160401b0380821115611dc957600080fd5b611dd58b838c01611b5e565b965060608a0151915080821115611deb57600080fd5b611df78b838c01611bd2565b955060808a0151915080821115611e0d57600080fd5b611e198b838c01611c34565b945060a08a0151915080821115611e2f57600080fd5b611e3b8b838c01611c8f565b935060c08a0151915080821115611e5157600080fd5b50611e5e8a828b01611c8f565b91505092959891949750929550565b600060ff821660ff8103611e8357611e836119c7565b60010192915050565b6001600160401b03818116838216028082169190828114611eaf57611eaf6119c7565b505092915050565b634e487b7160e01b600052603160045260246000fdfea2646970667358221220836b0bef05db4712911c246e3cb2b498a21165a92e8744392b45fcb09a25bb4864736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1EE JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9FB82DB9 GT PUSH2 0x10D JUMPI DUP1 PUSH4 0xE0639364 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xF2FDE38B GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x5A3 JUMPI DUP1 PUSH4 0xF3883538 EQ PUSH2 0x5C3 JUMPI DUP1 PUSH4 0xF67C4DFD EQ PUSH2 0x5E3 JUMPI DUP1 PUSH4 0xF6B663C3 EQ PUSH2 0x603 JUMPI DUP1 PUSH4 0xFE32F55E EQ PUSH2 0x623 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xE0639364 EQ PUSH2 0x50B JUMPI DUP1 PUSH4 0xE6AF61C8 EQ PUSH2 0x543 JUMPI DUP1 PUSH4 0xE75BCB96 EQ PUSH2 0x559 JUMPI DUP1 PUSH4 0xEE7CB288 EQ PUSH2 0x583 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xBDDD6DE4 GT PUSH2 0xDC JUMPI DUP1 PUSH4 0xBDDD6DE4 EQ PUSH2 0x47A JUMPI DUP1 PUSH4 0xBE645692 EQ PUSH2 0x4A8 JUMPI DUP1 PUSH4 0xC7907F54 EQ PUSH2 0x4BE JUMPI DUP1 PUSH4 0xCC001F16 EQ PUSH2 0x4DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9FB82DB9 EQ PUSH2 0x3ED JUMPI DUP1 PUSH4 0xA9E30CCF EQ PUSH2 0x40F JUMPI DUP1 PUSH4 0xAA4704F3 EQ PUSH2 0x42F JUMPI DUP1 PUSH4 0xB0806108 EQ PUSH2 0x465 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x68015791 GT PUSH2 0x185 JUMPI DUP1 PUSH4 0x8B0E9F3F GT PUSH2 0x154 JUMPI DUP1 PUSH4 0x8B0E9F3F EQ PUSH2 0x387 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x39D JUMPI DUP1 PUSH4 0x8F73C5AE EQ PUSH2 0x3CF JUMPI DUP1 PUSH4 0x9231CF74 EQ PUSH2 0x3D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x68015791 EQ PUSH2 0x305 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x325 JUMPI DUP1 PUSH4 0x72D30A70 EQ PUSH2 0x33A JUMPI DUP1 PUSH4 0x82CB1C18 EQ PUSH2 0x35A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3A4B66F1 GT PUSH2 0x1C1 JUMPI DUP1 PUSH4 0x3A4B66F1 EQ PUSH2 0x290 JUMPI DUP1 PUSH4 0x41F349B5 EQ PUSH2 0x298 JUMPI DUP1 PUSH4 0x5FA34EBD EQ PUSH2 0x2B8 JUMPI DUP1 PUSH4 0x6285B5A2 EQ PUSH2 0x2E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x62B6139 EQ PUSH2 0x1F3 JUMPI DUP1 PUSH4 0x15908D51 EQ PUSH2 0x215 JUMPI DUP1 PUSH4 0x2170E472 EQ PUSH2 0x23E JUMPI DUP1 PUSH4 0x2DEF6620 EQ PUSH2 0x26B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x213 PUSH2 0x20E CALLDATASIZE PUSH1 0x4 PUSH2 0x18AF JUMP JUMPDEST PUSH2 0x643 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x221 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x22B PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x24A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x22B PUSH2 0x259 CALLDATASIZE PUSH1 0x4 PUSH2 0x18F4 JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x277 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x280 PUSH2 0x6B1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x235 JUMP JUMPDEST PUSH2 0x280 PUSH2 0x8D9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x280 PUSH2 0x2B3 CALLDATASIZE PUSH1 0x4 PUSH2 0x18F4 JUMP JUMPDEST PUSH2 0xAE5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x22B PUSH2 0x2D3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1911 JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x213 PUSH2 0x300 CALLDATASIZE PUSH1 0x4 PUSH2 0x18F4 JUMP JUMPDEST PUSH2 0xB37 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x311 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x280 PUSH2 0x320 CALLDATASIZE PUSH1 0x4 PUSH2 0x18F4 JUMP JUMPDEST PUSH2 0xBAA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x331 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x213 PUSH2 0xC13 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x346 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x280 PUSH2 0x355 CALLDATASIZE PUSH1 0x4 PUSH2 0x18F4 JUMP JUMPDEST PUSH2 0xC27 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x366 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x22B PUSH2 0x375 CALLDATASIZE PUSH1 0x4 PUSH2 0x18F4 JUMP JUMPDEST PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x393 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x22B PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x235 JUMP JUMPDEST PUSH2 0x213 PUSH2 0xF1C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x22B PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x402 PUSH2 0x11B6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x235 SWAP2 SWAP1 PUSH2 0x192A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x41B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x213 PUSH2 0x42A CALLDATASIZE PUSH1 0x4 PUSH2 0x1977 JUMP JUMPDEST PUSH2 0x1218 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x43B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x22B PUSH2 0x44A CALLDATASIZE PUSH1 0x4 PUSH2 0x18F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x471 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x213 PUSH2 0x12B4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x486 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 SLOAD PUSH2 0x495 SWAP1 PUSH2 0xFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x235 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x22B PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x213 PUSH2 0x4D9 CALLDATASIZE PUSH1 0x4 PUSH2 0x19A3 JUMP JUMPDEST PUSH2 0x12EB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x22B PUSH2 0x4F9 CALLDATASIZE PUSH1 0x4 PUSH2 0x18F4 JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x517 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x8 SLOAD PUSH2 0x52B SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x235 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x54F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x22B PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x565 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x56E PUSH2 0x130B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x235 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x58F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x213 PUSH2 0x59E CALLDATASIZE PUSH1 0x4 PUSH2 0x18AF JUMP JUMPDEST PUSH2 0x1320 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x213 PUSH2 0x5BE CALLDATASIZE PUSH1 0x4 PUSH2 0x18F4 JUMP JUMPDEST PUSH2 0x1359 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x56E PUSH2 0x5DE CALLDATASIZE PUSH1 0x4 PUSH2 0x18F4 JUMP JUMPDEST PUSH2 0x13CF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x213 PUSH2 0x5FE CALLDATASIZE PUSH1 0x4 PUSH2 0x1911 JUMP JUMPDEST PUSH2 0x156E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x60F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B7 PUSH2 0x61E CALLDATASIZE PUSH1 0x4 PUSH2 0x1911 JUMP JUMPDEST PUSH2 0x15CB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x62F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH2 0x3B7 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x64B PUSH2 0x15F5 JUMP JUMPDEST PUSH2 0x2710 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND LT PUSH2 0x6A3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x50656E616C74792063616E6E6F742062652031303025 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x9 SSTORE JUMP JUMPDEST ORIGIN PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 DUP1 PUSH2 0x711 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520646F6E2774206861766520616E79207374616B650000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x69A JUMP JUMPDEST PUSH2 0x71A DUP3 PUSH2 0xC27 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x73F SWAP1 DUP3 SWAP1 PUSH2 0x19DD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x6 SLOAD PUSH2 0x766 SWAP1 DUP3 SWAP1 PUSH2 0x19DD JUMP JUMPDEST PUSH1 0x6 SSTORE PUSH2 0x772 DUP3 PUSH2 0x164F JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 DUP3 SWAP2 PUSH2 0x7A5 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND SWAP1 PUSH2 0x19F6 JUMP JUMPDEST TIMESTAMP GT ISZERO DUP1 ISZERO PUSH2 0x7B6 JUMPI POP PUSH1 0x0 PUSH1 0x9 SLOAD GT JUMPDEST ISZERO PUSH2 0x831 JUMPI PUSH2 0x2710 PUSH1 0x9 SLOAD DUP5 PUSH2 0x7CC SWAP2 SWAP1 PUSH2 0x1A09 JUMP JUMPDEST PUSH2 0x7D6 SWAP2 SWAP1 PUSH2 0x1A20 JUMP JUMPDEST SWAP1 POP PUSH2 0x7E2 DUP2 DUP5 PUSH2 0x19DD JUMP JUMPDEST SWAP2 POP DUP1 PUSH1 0x7 SLOAD PUSH2 0x7F2 SWAP2 SWAP1 PUSH2 0x19F6 JUMP JUMPDEST PUSH1 0x7 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 DUP4 ISZERO PUSH2 0x8FC MUL SWAP1 DUP5 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x82B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0x869 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 DUP5 ISZERO PUSH2 0x8FC MUL SWAP1 DUP6 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x867 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP4 SWAP1 SSTORE PUSH1 0xB DUP3 MSTORE DUP1 DUP4 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE DUP2 MLOAD DUP7 DUP2 MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE TIMESTAMP DUP2 DUP4 ADD MSTORE SWAP1 MLOAD PUSH32 0x753014CC7945CB3C93016ECB5BC2A66E26D69971A934FCFE2A882794CB344827 SWAP2 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 LOG2 PUSH1 0x1 SWAP5 POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x0 SWAP1 CALLER SWAP1 CALLVALUE SWAP1 DUP2 LT ISZERO PUSH2 0x932 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5374616B696E6720636F696E73206E6F7420656E6F7567680000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x69A JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x5 SLOAD PUSH2 0xFFFF SWAP1 SWAP2 AND GT PUSH2 0x98B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E2774207374616B6520736C6F742069732066756C6C0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x69A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SUB PUSH2 0x9E7 JUMPI PUSH1 0xD SLOAD PUSH1 0x0 SUB PUSH2 0x9B9 JUMPI TIMESTAMP PUSH1 0xD SSTORE JUMPDEST PUSH1 0xD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP5 SWAP1 SSTORE PUSH1 0xB SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SSTORE PUSH2 0x9F2 JUMP JUMPDEST PUSH2 0x9F0 DUP3 PUSH2 0xC27 JUMP JUMPDEST POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xA16 SWAP1 DUP3 SWAP1 PUSH2 0x19F6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH2 0xA38 DUP3 PUSH2 0xBAA JUMP JUMPDEST PUSH2 0xA88 JUMPI PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB0 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND OR SWAP1 SSTORE JUMPDEST DUP1 PUSH1 0x6 SLOAD PUSH2 0xA96 SWAP2 SWAP1 PUSH2 0x19F6 JUMP JUMPDEST PUSH1 0x6 SSTORE PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE TIMESTAMP PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP2 PUSH32 0xA0D1FA51224FB08C7C0B48D481448AD6A31C945D1A68CAC8758CAC3A92D5001C SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x1 SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0xB18 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH2 0x19F6 JUMP JUMPDEST TIMESTAMP GT ISZERO DUP1 ISZERO PUSH2 0xB29 JUMPI POP PUSH1 0x0 PUSH1 0x9 SLOAD GT JUMPDEST ISZERO PUSH2 0xB32 JUMPI POP PUSH1 0x1 JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB3F PUSH2 0x15F5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xB88 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x1A5B9D985B1A590818DBDB9D1C9858DD PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x69A JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x5 SLOAD DUP2 LT ISZERO PUSH2 0xC0A JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xBD5 JUMPI PUSH2 0xBD5 PUSH2 0x1A42 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xBF8 JUMPI POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 PUSH2 0xC02 DUP2 PUSH2 0x1A58 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xBAE JUMP JUMPDEST POP PUSH1 0x0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC1B PUSH2 0x15F5 JUMP JUMPDEST PUSH2 0xC25 PUSH1 0x0 PUSH2 0x17B0 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP2 SWAP1 DUP2 SWAP1 ISZERO PUSH2 0xC85 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD DUP4 MSTORE PUSH1 0xE SWAP1 SWAP2 MSTORE DUP1 DUP3 KECCAK256 SLOAD PUSH1 0xD SLOAD DUP4 MSTORE SWAP2 KECCAK256 SLOAD PUSH2 0xC82 SWAP2 SWAP1 PUSH2 0x19DD JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD DUP4 MSTORE PUSH1 0xE SWAP1 SWAP2 MSTORE DUP1 DUP3 KECCAK256 SLOAD PUSH1 0xD SLOAD DUP4 MSTORE SWAP2 KECCAK256 SLOAD PUSH2 0xCBE SWAP2 SWAP1 PUSH2 0x19DD JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x64877981 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND PUSH1 0x4 DUP4 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP4 ADD MSTORE SWAP3 SWAP4 POP PUSH1 0x0 SWAP3 SWAP1 SWAP2 AND SWAP1 PUSH4 0x64877981 SWAP1 PUSH1 0x44 ADD PUSH1 0xC0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD15 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD39 SWAP2 SWAP1 PUSH2 0x1A80 JUMP JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 DUP3 DUP5 PUSH2 0xD4E SWAP2 SWAP1 PUSH2 0x19F6 JUMP JUMPDEST GT ISZERO PUSH2 0xF11 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0xD8F JUMPI PUSH1 0xD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xD0744E3D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND PUSH1 0x4 DUP4 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x0 SWAP3 AND SWAP1 PUSH4 0xD0744E3D SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xDE1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE05 SWAP2 SWAP1 PUSH2 0x1ADC JUMP JUMPDEST GT ISZERO PUSH2 0xE28 JUMPI PUSH1 0xD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH8 0xDE0B6B3A7640000 SWAP1 PUSH2 0xE56 SWAP1 DUP7 SWAP1 PUSH2 0x1A09 JUMP JUMPDEST PUSH2 0xE60 SWAP2 SWAP1 PUSH2 0x1A20 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 PUSH2 0xE77 DUP6 DUP6 PUSH2 0x1A09 JUMP JUMPDEST PUSH2 0xE81 SWAP2 SWAP1 PUSH2 0x1A20 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH2 0x8FC PUSH2 0xE9A DUP4 DUP6 PUSH2 0x19F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 ISZERO SWAP1 SWAP3 MUL SWAP2 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xEC2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH32 0xF03271DA9252F83CABF8BAF9C18589849BDADB0AD1F6268432D871380624B9E6 PUSH2 0xEF8 DUP4 DUP6 PUSH2 0x19F6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE TIMESTAMP PUSH1 0x20 DUP4 ADD MSTORE ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 SLOAD CALLVALUE PUSH2 0xF2C SWAP2 SWAP1 PUSH2 0x19F6 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xF3A PUSH1 0x0 PUSH2 0x1800 JUMP JUMPDEST POP SWAP1 POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x3F8DC65A PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF92 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0xFBA SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1D89 JUMP JUMPDEST POP POP DUP3 MLOAD SWAP3 SWAP6 POP SWAP2 SWAP4 POP PUSH1 0x0 SWAP3 POP DUP3 SWAP2 POP POP JUMPDEST DUP3 DUP2 PUSH1 0xFF AND LT ISZERO PUSH2 0x10C6 JUMPI PUSH1 0x1 SLOAD DUP5 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x64877981 SWAP1 DUP8 SWAP1 PUSH1 0xFF DUP7 AND SWAP1 DUP2 LT PUSH2 0x1005 JUMPI PUSH2 0x1005 PUSH2 0x1A42 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP8 DUP6 PUSH1 0xFF AND DUP2 MLOAD DUP2 LT PUSH2 0x1022 JUMPI PUSH2 0x1022 PUSH2 0x1A42 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x105C SWAP3 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND DUP2 MSTORE SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0xC0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1079 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x109D SWAP2 SWAP1 PUSH2 0x1A80 JUMP JUMPDEST POP POP POP POP POP SWAP1 POP DUP1 DUP4 PUSH2 0x10B0 SWAP2 SWAP1 PUSH2 0x19F6 JUMP JUMPDEST SWAP3 POP POP DUP1 DUP1 PUSH2 0x10BE SWAP1 PUSH2 0x1E6D JUMP JUMPDEST SWAP2 POP POP PUSH2 0xFCD JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x10D3 DUP3 DUP7 PUSH2 0x19F6 JUMP JUMPDEST GT PUSH2 0x110D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x4E6F207374616B657273 PUSH1 0xB0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x69A JUMP JUMPDEST PUSH1 0xD DUP1 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD TIMESTAMP SWAP1 SWAP2 SSTORE PUSH2 0x112E DUP3 DUP7 PUSH2 0x19F6 JUMP JUMPDEST PUSH2 0x1140 DUP8 PUSH8 0xDE0B6B3A7640000 PUSH2 0x1A09 JUMP JUMPDEST PUSH2 0x114A SWAP2 SWAP1 PUSH2 0x1A20 JUMP JUMPDEST PUSH2 0x1154 SWAP1 DUP3 PUSH2 0x19F6 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE PUSH1 0x7 SSTORE MLOAD PUSH32 0xDDD247369EDDDE588B8AFA794145311A9AC4FF297C32D895359C5BEFC1A4E1F3 SWAP1 PUSH2 0x11A6 SWAP1 DUP9 SWAP1 TIMESTAMP SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x120E JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x11F0 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1272 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6F6E6C7956616C44617461436F6E7472616374206F6E6C790000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x69A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1293 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE JUMP JUMPDEST POP PUSH1 0xD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE JUMP JUMPDEST PUSH2 0x12BC PUSH2 0x15F5 JUMP JUMPDEST PUSH1 0x40 MLOAD CALLER SWAP1 SELFBALANCE DUP1 ISZERO PUSH2 0x8FC MUL SWAP2 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x12E8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x12F3 PUSH2 0x15F5 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH2 0xFFFF NOT AND PUSH2 0xFFFF SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1318 PUSH1 0x0 PUSH2 0x1800 JUMP JUMPDEST SWAP2 POP SWAP2 POP SWAP1 SWAP2 JUMP JUMPDEST PUSH2 0x1328 PUSH2 0x15F5 JUMP JUMPDEST PUSH2 0x1335 DUP2 PUSH3 0x15180 PUSH2 0x1E8C JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x1361 PUSH2 0x15F5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x13C6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x69A JUMP JUMPDEST PUSH2 0x12E8 DUP2 PUSH2 0x17B0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP2 SWAP1 DUP2 SWAP1 DUP2 SWAP1 ISZERO PUSH2 0x142F JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD DUP4 MSTORE PUSH1 0xE SWAP1 SWAP2 MSTORE DUP1 DUP3 KECCAK256 SLOAD PUSH1 0xD SLOAD DUP4 MSTORE SWAP2 KECCAK256 SLOAD PUSH2 0x142C SWAP2 SWAP1 PUSH2 0x19DD JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD DUP4 MSTORE PUSH1 0xE SWAP1 SWAP2 MSTORE DUP1 DUP3 KECCAK256 SLOAD PUSH1 0xD SLOAD DUP4 MSTORE SWAP2 KECCAK256 SLOAD PUSH2 0x1468 SWAP2 SWAP1 PUSH2 0x19DD JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x64877981 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND PUSH1 0x4 DUP4 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP4 ADD MSTORE SWAP3 SWAP4 POP PUSH1 0x0 SWAP3 SWAP1 SWAP2 AND SWAP1 PUSH4 0x64877981 SWAP1 PUSH1 0x44 ADD PUSH1 0xC0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x14BF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x14E3 SWAP2 SWAP1 PUSH2 0x1A80 JUMP JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 DUP3 DUP5 PUSH2 0x14F8 SWAP2 SWAP1 PUSH2 0x19F6 JUMP JUMPDEST GT ISZERO PUSH2 0x1560 JUMPI PUSH8 0xDE0B6B3A7640000 PUSH2 0x1511 DUP4 DUP4 PUSH2 0x1A09 JUMP JUMPDEST PUSH2 0x151B SWAP2 SWAP1 PUSH2 0x1A20 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP6 POP PUSH8 0xDE0B6B3A7640000 SWAP1 PUSH2 0x154C SWAP1 DUP6 SWAP1 PUSH2 0x1A09 JUMP JUMPDEST PUSH2 0x1556 SWAP2 SWAP1 PUSH2 0x1A20 JUMP JUMPDEST SWAP4 POP POP POP POP SWAP2 POP SWAP2 JUMP JUMPDEST POP PUSH1 0x0 SWAP6 DUP7 SWAP6 POP SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x1576 PUSH2 0x15F5 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x15C6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E636F7272656374204D696E696D616C5374616B696E67436F696E00000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x69A JUMP JUMPDEST PUSH1 0x3 SSTORE JUMP JUMPDEST PUSH1 0x5 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x15DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xC25 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x69A JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x5 SLOAD DUP2 LT ISZERO PUSH2 0x17AC JUMPI PUSH1 0x5 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x166F JUMPI PUSH2 0x166F PUSH2 0x1A42 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP4 AND SUB PUSH2 0x179A JUMPI PUSH1 0x5 SLOAD PUSH2 0x169D SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x19DD JUMP JUMPDEST DUP2 EQ PUSH2 0x171E JUMPI PUSH1 0x5 DUP1 SLOAD PUSH2 0x16B3 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x19DD JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x16C3 JUMPI PUSH2 0x16C3 PUSH2 0x1A42 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP4 SWAP1 DUP2 LT PUSH2 0x16EF JUMPI PUSH2 0x16EF PUSH2 0x1A42 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP JUMPDEST PUSH1 0x5 DUP1 SLOAD DUP1 PUSH2 0x172F JUMPI PUSH2 0x172F PUSH2 0x1EB7 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 DUP2 ADD PUSH1 0x0 NOT SWAP1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE ADD SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0x77F1DE51AE9C845B4FFF5F1512C8736EA703337FE77421649A51F6188D3470B2 SWAP1 PUSH2 0x178E SWAP1 TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST DUP1 PUSH2 0x17A4 DUP2 PUSH2 0x1A58 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1652 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 JUMPDEST PUSH1 0x5 SLOAD DUP2 LT ISZERO PUSH2 0x18A9 JUMPI PUSH1 0x5 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1823 JUMPI PUSH2 0x1823 PUSH2 0x1A42 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND SWAP2 AND EQ PUSH2 0x1897 JUMPI PUSH1 0x2 PUSH1 0x0 PUSH1 0x5 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x1858 JUMPI PUSH2 0x1858 PUSH2 0x1A42 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 SLOAD PUSH2 0x1887 SWAP1 DUP5 PUSH2 0x19F6 JUMP JUMPDEST SWAP3 POP DUP2 PUSH2 0x1893 DUP2 PUSH2 0x1A58 JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 PUSH2 0x18A1 DUP2 PUSH2 0x1A58 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1806 JUMP JUMPDEST POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x18D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x12E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1906 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x18D8 DUP2 PUSH2 0x18DF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1923 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x196B JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x1946 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x198A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1995 DUP2 PUSH2 0x18DF JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xFFFF DUP2 AND DUP2 EQ PUSH2 0x18D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x19F0 JUMPI PUSH2 0x19F0 PUSH2 0x19C7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x19F0 JUMPI PUSH2 0x19F0 PUSH2 0x19C7 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x19F0 JUMPI PUSH2 0x19F0 PUSH2 0x19C7 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1A3D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x1A6A JUMPI PUSH2 0x1A6A PUSH2 0x19C7 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x5 DUP2 LT PUSH2 0xB32 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x1A99 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 MLOAD SWAP6 POP PUSH2 0x1AA9 PUSH1 0x20 DUP9 ADD PUSH2 0x1A71 JUMP JUMPDEST SWAP5 POP PUSH1 0x40 DUP8 ADD MLOAD SWAP4 POP PUSH1 0x60 DUP8 ADD MLOAD SWAP3 POP PUSH1 0x80 DUP8 ADD MLOAD SWAP2 POP PUSH1 0xA0 DUP8 ADD MLOAD PUSH2 0x1ACE DUP2 PUSH2 0x18DF JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1AEE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1B33 JUMPI PUSH2 0x1B33 PUSH2 0x1AF5 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT ISZERO PUSH2 0x1B54 JUMPI PUSH2 0x1B54 PUSH2 0x1AF5 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1B6F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x20 PUSH2 0x1B84 PUSH2 0x1B7F DUP4 PUSH2 0x1B3B JUMP JUMPDEST PUSH2 0x1B0B JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP7 DUP5 GT ISZERO PUSH2 0x1BA3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x1BC7 JUMPI DUP1 MLOAD PUSH2 0x1BBA DUP2 PUSH2 0x18DF JUMP JUMPDEST DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x1BA7 JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1BE3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x20 PUSH2 0x1BF3 PUSH2 0x1B7F DUP4 PUSH2 0x1B3B JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP7 DUP5 GT ISZERO PUSH2 0x1C12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x1BC7 JUMPI PUSH2 0x1C27 DUP2 PUSH2 0x1A71 JUMP JUMPDEST DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x1C16 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1C45 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x20 PUSH2 0x1C55 PUSH2 0x1B7F DUP4 PUSH2 0x1B3B JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP7 DUP5 GT ISZERO PUSH2 0x1C74 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x1BC7 JUMPI DUP1 MLOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x1C78 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F DUP4 DUP2 DUP5 ADD SLT PUSH2 0x1CA1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x20 PUSH2 0x1CB1 PUSH2 0x1B7F DUP4 PUSH2 0x1B3B JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP6 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP8 DUP5 GT ISZERO PUSH2 0x1CD0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP8 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x1D7D JUMPI DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x1CF4 JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST DUP2 DUP11 ADD SWAP2 POP DUP11 PUSH1 0x3F DUP4 ADD SLT PUSH2 0x1D09 JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST DUP6 DUP3 ADD MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x1D1D JUMPI PUSH2 0x1D1D PUSH2 0x1AF5 JUMP JUMPDEST PUSH2 0x1D2E DUP2 DUP11 ADD PUSH1 0x1F NOT AND DUP9 ADD PUSH2 0x1B0B JUMP JUMPDEST SWAP2 POP DUP1 DUP3 MSTORE PUSH1 0x40 DUP13 DUP2 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x1D47 JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1D65 JUMPI DUP5 DUP2 ADD DUP3 ADD MLOAD DUP5 DUP3 ADD DUP11 ADD MSTORE DUP9 ADD PUSH2 0x1D4A JUMP JUMPDEST POP POP PUSH1 0x0 SWAP1 DUP3 ADD DUP8 ADD MSTORE DUP5 MSTORE POP SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x1CD4 JUMP JUMPDEST POP SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x1DA4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 MLOAD SWAP7 POP PUSH1 0x20 DUP9 ADD MLOAD SWAP6 POP PUSH1 0x40 DUP9 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x1DC9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1DD5 DUP12 DUP4 DUP13 ADD PUSH2 0x1B5E JUMP JUMPDEST SWAP7 POP PUSH1 0x60 DUP11 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1DEB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1DF7 DUP12 DUP4 DUP13 ADD PUSH2 0x1BD2 JUMP JUMPDEST SWAP6 POP PUSH1 0x80 DUP11 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1E0D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1E19 DUP12 DUP4 DUP13 ADD PUSH2 0x1C34 JUMP JUMPDEST SWAP5 POP PUSH1 0xA0 DUP11 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1E2F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1E3B DUP12 DUP4 DUP13 ADD PUSH2 0x1C8F JUMP JUMPDEST SWAP4 POP PUSH1 0xC0 DUP11 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1E51 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E5E DUP11 DUP3 DUP12 ADD PUSH2 0x1C8F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0xFF DUP2 SUB PUSH2 0x1E83 JUMPI PUSH2 0x1E83 PUSH2 0x19C7 JUMP JUMPDEST PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 DUP2 AND DUP4 DUP3 AND MUL DUP1 DUP3 AND SWAP2 SWAP1 DUP3 DUP2 EQ PUSH2 0x1EAF JUMPI PUSH2 0x1EAF PUSH2 0x19C7 JUMP JUMPDEST POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP4 PUSH12 0xBEF05DB4712911C246E3CB2 0xB4 SWAP9 LOG2 GT PUSH6 0xA92E8744392B GASLIMIT 0xFC 0xB0 SWAP11 0x25 0xBB BASEFEE PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "4252:10415:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13725:209;;;;;;;;;;-1:-1:-1;13725:209:0;;;;;:::i;:::-;;:::i;:::-;;4771:39;;;;;;;;;;;;;;;;;;;449:25:1;;;437:2;422:18;4771:39:0;;;;;;;;4884:41;;;;;;;;;;-1:-1:-1;4884:41:0;;;;;:::i;:::-;;;;;;;;;;;;;;6694:1171;;;;;;;;;;;;;:::i;:::-;;;1038:14:1;;1031:22;1013:41;;1001:2;986:18;6694:1171:0;873:187:1;5619:1069:0;;;:::i;10861:230::-;;;;;;;;;;-1:-1:-1;10861:230:0;;;;;:::i;:::-;;:::i;5076:49::-;;;;;;;;;;-1:-1:-1;5076:49:0;;;;;:::i;:::-;;;;;;;;;;;;;;14304:221;;;;;;;;;;-1:-1:-1;14304:221:0;;;;;:::i;:::-;;:::i;12027:257::-;;;;;;;;;;-1:-1:-1;12027:257:0;;;;;:::i;:::-;;:::i;2485:101::-;;;;;;;;;;;;;:::i;7871:1174::-;;;;;;;;;;-1:-1:-1;7871:1174:0;;;;;:::i;:::-;;:::i;4932:44::-;;;;;;;;;;-1:-1:-1;4932:44:0;;;;;:::i;:::-;;;;;;;;;;;;;;4657:25;;;;;;;;;;;;;;;;1855:85;;;;;;;;;;-1:-1:-1;1901:7:0;1927:6;-1:-1:-1;;;;;1927:6:0;1855:85;;;-1:-1:-1;;;;;1414:32:1;;;1396:51;;1384:2;1369:18;1855:85:0;1250:203:1;9132:1110:0;;;:::i;5003:26::-;;;;;;;;;;;;;;;;11289:107;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;14103:194::-;;;;;;;;;;-1:-1:-1;14103:194:0;;;;;:::i;:::-;;:::i;11097:186::-;;;;;;;;;;-1:-1:-1;11097:186:0;;;;;:::i;:::-;-1:-1:-1;;;;;11248:18:0;11195:7;11248:18;;;:10;:18;;;;;;;11097:186;13980:117;;;;;;;;;;;;;:::i;4547:28::-;;;;;;;;;;-1:-1:-1;4547:28:0;;;;;;;;;;;2615:6:1;2603:19;;;2585:38;;2573:2;2558:18;4547:28:0;2441:188:1;4496:44:0;;;;;;;;;;;;;;;;13225:118;;;;;;;;;;-1:-1:-1;13225:118:0;;;;;:::i;:::-;;:::i;4825:52::-;;;;;;;;;;-1:-1:-1;4825:52:0;;;;;:::i;:::-;;;;;;;;;;;;;;4723:41;;;;;;;;;;-1:-1:-1;4723:41:0;;;;-1:-1:-1;;;;;4723:41:0;;;;;;-1:-1:-1;;;;;3073:31:1;;;3055:50;;3043:2;3028:18;4723:41:0;2911:200:1;4689:27:0;;;;;;;;;;;;;;;;11402:187;;;;;;;;;;;;;:::i;:::-;;;;3290:25:1;;;3346:2;3331:18;;3324:34;;;;3263:18;11402:187:0;3116:248:1;13575:144:0;;;;;;;;;;-1:-1:-1;13575:144:0;;;;;:::i;:::-;;:::i;2735:232::-;;;;;;;;;;-1:-1:-1;2735:232:0;;;;;:::i;:::-;;:::i;12290:929::-;;;;;;;;;;-1:-1:-1;12290:929:0;;;;;:::i;:::-;;:::i;13348:222::-;;;;;;;;;;-1:-1:-1;13348:222:0;;;;;:::i;:::-;;:::i;4583:33::-;;;;;;;;;;-1:-1:-1;4583:33:0;;;;;:::i;:::-;;:::i;4287:106::-;;;;;;;;;;-1:-1:-1;4287:106:0;;;;-1:-1:-1;;;;;4287:106:0;;;13725:209;1748:13;:11;:13::i;:::-;13847:5:::1;13826:18;-1:-1:-1::0;;;;;13826:26:0::1;;13818:61;;;::::0;-1:-1:-1;;;13818:61:0;;3805:2:1;13818:61:0::1;::::0;::::1;3787:21:1::0;3844:2;3824:18;;;3817:30;-1:-1:-1;;;3863:18:1;;;3856:52;3925:18;;13818:61:0::1;;;;;;;;;-1:-1:-1::0;;;;;13889:38:0::1;:17;:38:::0;13725:209::o;6694:1171::-;6781:9;6731:4;6826:18;;;:10;:18;;;;;;6731:4;;6781:9;6863:17;6855:54;;;;-1:-1:-1;;;6855:54:0;;4156:2:1;6855:54:0;;;4138:21:1;4195:2;4175:18;;;4168:30;4234:26;4214:18;;;4207:54;4278:18;;6855:54:0;3954:348:1;6855:54:0;6920:29;6942:6;6920:21;:29::i;:::-;-1:-1:-1;;;;;;6989:18:0;;;;;;:10;:18;;;;;;:36;;7011:13;;6989:36;:::i;:::-;-1:-1:-1;;;;;6968:18:0;;;;;;:10;:18;;;;;:57;7056:10;;:28;;7070:13;;7056:28;:::i;:::-;7043:10;:41;7095:35;7123:6;7095:27;:35::i;:::-;7237:17;;-1:-1:-1;;;;;7217:17:0;;7141;7217;;;:9;:17;;;;;;7141;;;;7217:37;;-1:-1:-1;;;;;7237:17:0;;7217:37;:::i;:::-;7197:15;:58;;:83;;;;;7279:1;7259:17;;:21;7197:83;7194:493;;;7345:5;7324:17;;7308:13;:33;;;;:::i;:::-;7307:43;;;;:::i;:::-;7296:55;-1:-1:-1;7442:23:0;7296:55;7442:13;:23;:::i;:::-;7430:35;;7509:7;7494:12;;:22;;;;:::i;:::-;7479:12;:37;7530:35;;-1:-1:-1;;;;;7530:24:0;;;:35;;;;;7555:9;;7530:35;;;;7555:9;7530:24;:35;;;;;;;;;;;;;;;;;;;;;7194:493;;;7637:39;;-1:-1:-1;;;;;7637:24:0;;;:39;;;;;7662:13;;7637:39;;;;7662:13;7637:24;:39;;;;;;;;;;;;;;;;;;;;;7194:493;-1:-1:-1;;;;;7697:28:0;;7728:1;7697:28;;;:20;:28;;;;;;;;:32;;;7740:9;:17;;;;;:21;;;;7778:59;;5299:25:1;;;5340:18;;;5333:34;;;7821:15:0;5383:18:1;;;5376:34;7778:59:0;;;;;;;5287:2:1;7778:59:0;;;7854:4;7847:11;;;;;;6694:1171;:::o;5619:1069::-;5815:18;;5684:4;;5737:10;;5776:9;;5804:29;;;5796:78;;;;-1:-1:-1;;;5796:78:0;;5623:2:1;5796:78:0;;;5605:21:1;5662:2;5642:18;;;5635:30;5701:26;5681:18;;;5674:54;5745:18;;5796:78:0;5421:348:1;5796:78:0;5934:10;;5907:16;:23;5934:10;;;;-1:-1:-1;5885:109:0;;;;-1:-1:-1;;;5885:109:0;;5976:2:1;5885:109:0;;;5958:21:1;6015:2;5995:18;;;5988:30;6054:26;6034:18;;;6027:54;6098:18;;5885:109:0;5774:348:1;5885:109:0;-1:-1:-1;;;;;6065:18:0;;;;;;:10;:18;;;;;;:23;;6061:337;;6107:14;;6125:1;6107:19;6104:101;;6175:15;6158:14;:32;6104:101;6249:14;;-1:-1:-1;;;;;6218:28:0;;;;;;:20;:28;;;;;;;;:45;;;6277:9;:17;;;;;:34;6061:337;;;6358:29;6380:6;6358:21;:29::i;:::-;;6061:337;-1:-1:-1;;;;;6429:18:0;;;;;;:10;:18;;;;;;:30;;6451:7;;6429:30;:::i;:::-;-1:-1:-1;;;;;6408:18:0;;;;;;:10;:18;;;;;:51;6475:22;6419:6;6475:14;:22::i;:::-;6470:87;;6517:16;:29;;;;;;;-1:-1:-1;6517:29:0;;;;;;;;-1:-1:-1;;;;;;6517:29:0;-1:-1:-1;;;;;6517:29:0;;;;;6470:87;6594:7;6580:10;;:22;;;;:::i;:::-;6567:10;:35;6618:42;;;3290:25:1;;;6644:15:0;3346:2:1;3331:18;;3324:34;-1:-1:-1;;;;;6618:42:0;;;;;3263:18:1;6618:42:0;;;;;;;6677:4;6670:11;;;;5619:1069;:::o;10861:230::-;10998:17;;-1:-1:-1;;;;;10978:17:0;;10924:14;10978:17;;;:9;:17;;;;;;10924:14;;10978:37;;-1:-1:-1;;;;;10998:17:0;;;;10978:37;:::i;:::-;10958:15;:58;;:83;;;;;11040:1;11020:17;;:21;10958:83;10955:130;;;-1:-1:-1;11069:4:0;10955:130;10861:230;;;:::o;14304:221::-;1748:13;:11;:13::i;:::-;-1:-1:-1;;;;;14406:28:0;::::1;14398:57;;;::::0;-1:-1:-1;;;14398:57:0;;6329:2:1;14398:57:0::1;::::0;::::1;6311:21:1::0;6368:2;6348:18;;;6341:30;-1:-1:-1;;;6387:18:1;;;6380:46;6443:18;;14398:57:0::1;6127:340:1::0;14398:57:0::1;14466:15;:52:::0;;-1:-1:-1;;;;;;14466:52:0::1;-1:-1:-1::0;;;;;14466:52:0;;;::::1;::::0;;;::::1;::::0;;14304:221::o;12027:257::-;12085:4;;12101:154;12125:16;:23;12121:27;;12101:154;;;12196:3;-1:-1:-1;;;;;12173:26:0;:16;12190:1;12173:19;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;12173:19:0;:26;12169:76;;-1:-1:-1;12226:4:0;;12027:257;-1:-1:-1;;12027:257:0:o;12169:76::-;12150:3;;;;:::i;:::-;;;;12101:154;;;-1:-1:-1;12272:5:0;;12027:257;-1:-1:-1;;12027:257:0:o;2485:101::-;1748:13;:11;:13::i;:::-;2549:30:::1;2576:1;2549:18;:30::i;:::-;2485:101::o:0;7871:1174::-;-1:-1:-1;;;;;8019:28:0;;7933:4;8019:28;;;:20;:28;;;;;;7933:4;;;;8019:32;8016:149;;-1:-1:-1;;;;;8136:28:0;;8115:50;8136:28;;;:20;:28;;;;;;;;;8115:50;;:20;:50;;;;;;;8097:14;;8076:36;;;;;:89;;8115:50;8076:89;:::i;:::-;8061:104;;8016:149;-1:-1:-1;;;;;8259:20:0;;8238:42;8259:20;;;:12;:20;;;;;;;;;8238:42;;:20;:42;;;;;;;8220:14;;8199:36;;;;;:81;;8238:42;8199:81;:::i;:::-;8335:15;;:53;;-1:-1:-1;;;8335:53:0;;-1:-1:-1;;;;;6974:15:1;;;8335:53:0;;;6956:34:1;;;7006:18;;;6999:43;8175:105:0;;-1:-1:-1;8292:29:0;;8335:15;;;;:38;;6891:18:1;;8335:53:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8291:97;;;;;;;8443:1;8418:21;8403:12;:36;;;;:::i;:::-;8402:42;8399:619;;;-1:-1:-1;;;;;8471:28:0;;8502:1;8471:28;;;:20;:28;;;;;;:32;8468:94;;8548:14;;-1:-1:-1;;;;;8517:28:0;;;;;;:20;:28;;;;;:45;8468:94;8579:15;;:45;;-1:-1:-1;;;8579:45:0;;-1:-1:-1;;;;;6974:15:1;;;8579:45:0;;;6956:34:1;;;7006:18;;;6999:43;8627:1:0;;8579:15;;:30;;6891:18:1;;8579:45:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:49;8576:103;;;8665:14;;-1:-1:-1;;;;;8642:20:0;;;;;;:12;:20;;;;;:37;8576:103;-1:-1:-1;;;;;8707:18:0;;8693:11;8707:18;;;:10;:18;;;;;;8743:19;;8707:33;;8728:12;;8707:33;:::i;:::-;:55;;;;:::i;:::-;8693:69;-1:-1:-1;8776:14:0;8841:19;8793:45;8817:21;8793;:45;:::i;:::-;:67;;;;:::i;:::-;8776:84;-1:-1:-1;;;;;;8874:24:0;;:44;8899:18;8776:84;8899:6;:18;:::i;:::-;8874:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;8937:70:0;;;8970:18;8979:9;8970:6;:18;:::i;:::-;8937:70;;;3290:25:1;;;8991:15:0;3346:2:1;3331:18;;3324:34;3263:18;8937:70:0;;;;;;;8454:564;;8399:619;-1:-1:-1;9034:4:0;;7871:1174;-1:-1:-1;;;;7871:1174:0:o;9132:1110::-;9207:14;9236:12;;9224:9;:24;;;;:::i;:::-;9207:41;;9260:19;9284:46;9327:1;9284:34;:46::i;:::-;9259:71;;;9345:37;9393:15;;;;;;;;;-1:-1:-1;;;;;9393:15:0;-1:-1:-1;;;;;9393:35:0;;:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;9393:37:0;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;9466:27:0;;9341:89;;-1:-1:-1;9466:27:0;;-1:-1:-1;9440:23:0;;-1:-1:-1;9440:23:0;;-1:-1:-1;;9548:254:0;9567:15;9563:1;:19;;;9548:254;;;9643:15;;9682:23;;9600:29;;-1:-1:-1;;;;;9643:15:0;;:38;;9682:20;;:23;;;;;;;;;;:::i;:::-;;;;;;;9706:20;9727:1;9706:23;;;;;;;;;;:::i;:::-;;;;;;;9643:87;;;;;;;;;;;;;;;-1:-1:-1;;;;;6974:15:1;;;6956:34;;7026:15;;7021:2;7006:18;;6999:43;6906:2;6891:18;;6744:304;9643:87:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9599:131;;;;;;;9770:21;9740:51;;;;;:::i;:::-;;;9588:214;9584:3;;;;;:::i;:::-;;;;9548:254;;;-1:-1:-1;9863:1:0;9820:40;9834:26;9820:11;:40;:::i;:::-;:44;9812:67;;;;-1:-1:-1;;;9812:67:0;;14201:2:1;9812:67:0;;;14183:21:1;14240:2;14220:18;;;14213:30;-1:-1:-1;;;14259:18:1;;;14252:40;14309:18;;9812:67:0;13999:334:1;9812:67:0;9933:14;;;9890:19;9912:36;;;:20;:36;;;;;;9975:15;9958:32;;;10098:40;10112:26;10098:11;:40;:::i;:::-;10066:28;:6;10075:19;10066:28;:::i;:::-;:73;;;;:::i;:::-;10048:92;;:14;:92;:::i;:::-;10030:14;;10009:36;;;;:20;:36;;;;;;:131;;;;10150:12;:16;10191:44;;;;;10211:6;;10219:15;;3290:25:1;;;3346:2;3331:18;;3324:34;3278:2;3263:18;;3116:248;10191:44:0;;;;;;;;9197:1045;;;;;;9132:1110::o;11289:107::-;11338:16;11373;11366:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;11366:23:0;;;;;;;;;;;;;;;;;;;;;;;11289:107;:::o;14103:194::-;14602:15;;-1:-1:-1;;;;;14602:15:0;14580:10;:38;14572:75;;;;-1:-1:-1;;;14572:75:0;;14540:2:1;14572:75:0;;;14522:21:1;14579:2;14559:18;;;14552:30;14618:26;14598:18;;;14591:54;14662:18;;14572:75:0;14338:348:1;14572:75:0;14207:10;;:83:::1;;-1:-1:-1::0;;;;;;14263:23:0::1;14289:1;14263:23:::0;;;:12:::1;:23;::::0;;;;:27;14103:194::o;14207:83::-:1;-1:-1:-1::0;14246:14:0::1;::::0;-1:-1:-1;;;;;14220:23:0;;;::::1;;::::0;;;:12:::1;:23;::::0;;;;:40;14103:194::o;13980:117::-;1748:13;:11;:13::i;:::-;14039:51:::1;::::0;14047:10:::1;::::0;14068:21:::1;14039:51:::0;::::1;;;::::0;::::1;::::0;;;14068:21;14047:10;14039:51;::::1;;;;;;;;;;;;;::::0;::::1;;;;;;13980:117::o:0;13225:118::-;1748:13;:11;:13::i;:::-;13312:10:::1;:24:::0;;-1:-1:-1;;13312:24:0::1;;::::0;;;::::1;::::0;;;::::1;::::0;;13225:118::o;11402:187::-;11487:13;11502:11;11536:46;11579:1;11536:34;:46::i;:::-;11529:53;;;;11402:187;;:::o;13575:144::-;1748:13;:11;:13::i;:::-;13686:26:::1;:18:::0;13707:5:::1;13686:26;:::i;:::-;13666:17;:46:::0;;-1:-1:-1;;13666:46:0::1;-1:-1:-1::0;;;;;13666:46:0;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;13575:144:0:o;2735:232::-;1748:13;:11;:13::i;:::-;-1:-1:-1;;;;;2836:22:0;::::1;2815:107;;;::::0;-1:-1:-1;;;2815:107:0;;15155:2:1;2815:107:0::1;::::0;::::1;15137:21:1::0;15194:2;15174:18;;;15167:30;15233:34;15213:18;;;15206:62;-1:-1:-1;;;15284:18:1;;;15277:36;15330:19;;2815:107:0::1;14953:402:1::0;2815:107:0::1;2932:28;2951:8;2932:18;:28::i;12290:929::-:0;-1:-1:-1;;;;;12480:29:0;;12352:17;12480:29;;;:20;:29;;;;;;12352:17;;;;;;12480:33;12477:155;;-1:-1:-1;;;;;12602:29:0;;12581:51;12602:29;;;:20;:29;;;;;;;;;12581:51;;:20;:51;;;;;;;12563:14;;12542:36;;;;;:90;;12581:51;12542:90;:::i;:::-;12527:105;;12477:155;-1:-1:-1;;;;;12730:21:0;;12709:43;12730:21;;;:12;:21;;;;;;;;;12709:43;;:20;:43;;;;;;;12691:14;;12670:36;;;;;:82;;12709:43;12670:82;:::i;:::-;12811:15;;:55;;-1:-1:-1;;;12811:55:0;;-1:-1:-1;;;;;6974:15:1;;;12811:55:0;;;6956:34:1;;;7006:18;;;6999:43;12646:106:0;;-1:-1:-1;12768:29:0;;12811:15;;;;:38;;6891:18:1;;12811:55:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12767:99;;;;;;;12923:1;12899:21;12884:12;:36;;;;:::i;:::-;:40;12881:309;;;13016:19;12968:45;12992:21;12968;:45;:::i;:::-;:67;;;;:::i;:::-;-1:-1:-1;;;;;13068:19:0;;;;;;:10;:19;;;;;;12956:79;;-1:-1:-1;13105:19:0;;13068:34;;13090:12;;13068:34;:::i;:::-;:56;;;;:::i;:::-;13053:71;;13142:32;;;12290:929;;;:::o;12881:309::-;-1:-1:-1;13207:1:0;;;;-1:-1:-1;12290:929:0;-1:-1:-1;;;;12290:929:0:o;13348:222::-;1748:13;:11;:13::i;:::-;13481:1:::1;13459:19;:23;13451:64;;;::::0;-1:-1:-1;;;13451:64:0;;15562:2:1;13451:64:0::1;::::0;::::1;15544:21:1::0;15601:2;15581:18;;;15574:30;15640;15620:18;;;15613:58;15688:18;;13451:64:0::1;15360:352:1::0;13451:64:0::1;13523:18;:40:::0;13348:222::o;4583:33::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4583:33:0;;-1:-1:-1;4583:33:0;:::o;2013:130::-;1901:7;1927:6;-1:-1:-1;;;;;1927:6:0;665:10;2076:23;2068:68;;;;-1:-1:-1;;;2068:68:0;;15919:2:1;2068:68:0;;;15901:21:1;;;15938:18;;;15931:30;15997:34;15977:18;;;15970:62;16049:18;;2068:68:0;15717:356:1;10248:607:0;10337:9;10319:530;10368:16;:23;10364:27;;10319:530;;;10447:16;10464:1;10447:19;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;10447:19:0;;;10437:29;;;;10433:406;;10524:16;:23;:27;;10550:1;;10524:27;:::i;:::-;10519:1;:32;10515:171;;10597:16;10614:48;;:52;;10665:1;;10614:52;:::i;:::-;10597:70;;;;;;;;:::i;:::-;;;;;;;;;;;10575:16;:19;;-1:-1:-1;;;;;10597:70:0;;;;10592:1;;10575:19;;;;;;:::i;:::-;;;;;;;;;:92;;;;;-1:-1:-1;;;;;10575:92:0;;;;;-1:-1:-1;;;;;10575:92:0;;;;;;10515:171;10704:16;:22;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;10704:22:0;;;;;-1:-1:-1;;;;;;10704:22:0;;;;;;10749:51;;-1:-1:-1;;;;;10749:51:0;;;;;;;10784:15;449:25:1;;437:2;422:18;;303:177;10749:51:0;;;;;;;;10319:530;10248:607;:::o;10433:406::-;10405:3;;;;:::i;:::-;;;;10319:530;;;;10248:607;:::o;3121:187::-;3194:16;3213:6;;-1:-1:-1;;;;;3229:17:0;;;-1:-1:-1;;;;;;3229:17:0;;;;;;3261:40;;3213:6;;;;;;;3261:40;;3194:16;3261:40;3184:124;3121:187;:::o;11595:426::-;11698:13;11713:11;11745:9;11740:245;11764:16;:23;11760:27;;11740:245;;;11836:16;11853:1;11836:19;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;11829:26:0;;;11836:19;;11829:26;11808:167;;11905:10;:31;11916:16;11933:1;11916:19;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;11916:19:0;11905:31;;;;;;;;;;;;;11896:41;;:5;:41;:::i;:::-;11888:49;-1:-1:-1;11955:5:0;;;;:::i;:::-;;;;11808:167;11789:3;;;;:::i;:::-;;;;11740:245;;;;11595:426;;;:::o;14:284:1:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;180:9;167:23;-1:-1:-1;;;;;223:5:1;219:30;212:5;209:41;199:69;;264:1;261;254:12;199:69;287:5;14:284;-1:-1:-1;;;14:284:1:o;485:131::-;-1:-1:-1;;;;;560:31:1;;550:42;;540:70;;606:1;603;596:12;621:247;680:6;733:2;721:9;712:7;708:23;704:32;701:52;;;749:1;746;739:12;701:52;788:9;775:23;807:31;832:5;807:31;:::i;1065:180::-;1124:6;1177:2;1165:9;1156:7;1152:23;1148:32;1145:52;;;1193:1;1190;1183:12;1145:52;-1:-1:-1;1216:23:1;;1065:180;-1:-1:-1;1065:180:1:o;1458:658::-;1629:2;1681:21;;;1751:13;;1654:18;;;1773:22;;;1600:4;;1629:2;1852:15;;;;1826:2;1811:18;;;1600:4;1895:195;1909:6;1906:1;1903:13;1895:195;;;1974:13;;-1:-1:-1;;;;;1970:39:1;1958:52;;2065:15;;;;2030:12;;;;2006:1;1924:9;1895:195;;;-1:-1:-1;2107:3:1;;1458:658;-1:-1:-1;;;;;;1458:658:1:o;2121:315::-;2189:6;2197;2250:2;2238:9;2229:7;2225:23;2221:32;2218:52;;;2266:1;2263;2256:12;2218:52;2305:9;2292:23;2324:31;2349:5;2324:31;:::i;:::-;2374:5;2426:2;2411:18;;;;2398:32;;-1:-1:-1;;;2121:315:1:o;2634:272::-;2692:6;2745:2;2733:9;2724:7;2720:23;2716:32;2713:52;;;2761:1;2758;2751:12;2713:52;2800:9;2787:23;2850:6;2843:5;2839:18;2832:5;2829:29;2819:57;;2872:1;2869;2862:12;4307:127;4368:10;4363:3;4359:20;4356:1;4349:31;4399:4;4396:1;4389:15;4423:4;4420:1;4413:15;4439:128;4506:9;;;4527:11;;;4524:37;;;4541:18;;:::i;:::-;4439:128;;;;:::o;4572:125::-;4637:9;;;4658:10;;;4655:36;;;4671:18;;:::i;4702:168::-;4775:9;;;4806;;4823:15;;;4817:22;;4803:37;4793:71;;4844:18;;:::i;4875:217::-;4915:1;4941;4931:132;;4985:10;4980:3;4976:20;4973:1;4966:31;5020:4;5017:1;5010:15;5048:4;5045:1;5038:15;4931:132;-1:-1:-1;5077:9:1;;4875:217::o;6472:127::-;6533:10;6528:3;6524:20;6521:1;6514:31;6564:4;6561:1;6554:15;6588:4;6585:1;6578:15;6604:135;6643:3;6664:17;;;6661:43;;6684:18;;:::i;:::-;-1:-1:-1;6731:1:1;6720:13;;6604:135::o;7053:151::-;7136:13;;7178:1;7168:12;;7158:40;;7194:1;7191;7184:12;7209:597;7334:6;7342;7350;7358;7366;7374;7427:3;7415:9;7406:7;7402:23;7398:33;7395:53;;;7444:1;7441;7434:12;7395:53;7473:9;7467:16;7457:26;;7502:53;7551:2;7540:9;7536:18;7502:53;:::i;:::-;7492:63;;7595:2;7584:9;7580:18;7574:25;7564:35;;7639:2;7628:9;7624:18;7618:25;7608:35;;7683:3;7672:9;7668:19;7662:26;7652:36;;7731:3;7720:9;7716:19;7710:26;7745:31;7770:5;7745:31;:::i;:::-;7795:5;7785:15;;;7209:597;;;;;;;;:::o;7811:184::-;7881:6;7934:2;7922:9;7913:7;7909:23;7905:32;7902:52;;;7950:1;7947;7940:12;7902:52;-1:-1:-1;7973:16:1;;7811:184;-1:-1:-1;7811:184:1:o;8000:127::-;8061:10;8056:3;8052:20;8049:1;8042:31;8092:4;8089:1;8082:15;8116:4;8113:1;8106:15;8132:275;8203:2;8197:9;8268:2;8249:13;;-1:-1:-1;;8245:27:1;8233:40;;-1:-1:-1;;;;;8288:34:1;;8324:22;;;8285:62;8282:88;;;8350:18;;:::i;:::-;8386:2;8379:22;8132:275;;-1:-1:-1;8132:275:1:o;8412:183::-;8472:4;-1:-1:-1;;;;;8497:6:1;8494:30;8491:56;;;8527:18;;:::i;:::-;-1:-1:-1;8572:1:1;8568:14;8584:4;8564:25;;8412:183::o;8600:734::-;8665:5;8718:3;8711:4;8703:6;8699:17;8695:27;8685:55;;8736:1;8733;8726:12;8685:55;8765:6;8759:13;8791:4;8815:60;8831:43;8871:2;8831:43;:::i;:::-;8815:60;:::i;:::-;8909:15;;;8995:1;8991:10;;;;8979:23;;8975:32;;;8940:12;;;;9019:15;;;9016:35;;;9047:1;9044;9037:12;9016:35;9083:2;9075:6;9071:15;9095:210;9111:6;9106:3;9103:15;9095:210;;;9184:3;9178:10;9201:31;9226:5;9201:31;:::i;:::-;9245:18;;9283:12;;;;9128;;9095:210;;;-1:-1:-1;9323:5:1;8600:734;-1:-1:-1;;;;;;8600:734:1:o;9339:691::-;9408:5;9461:3;9454:4;9446:6;9442:17;9438:27;9428:55;;9479:1;9476;9469:12;9428:55;9508:6;9502:13;9534:4;9558:60;9574:43;9614:2;9574:43;:::i;9558:60::-;9652:15;;;9738:1;9734:10;;;;9722:23;;9718:32;;;9683:12;;;;9762:15;;;9759:35;;;9790:1;9787;9780:12;9759:35;9826:2;9818:6;9814:15;9838:163;9854:6;9849:3;9846:15;9838:163;;;9920:38;9954:3;9920:38;:::i;:::-;9908:51;;9979:12;;;;9871;;9838:163;;10035:659;10100:5;10153:3;10146:4;10138:6;10134:17;10130:27;10120:55;;10171:1;10168;10161:12;10120:55;10200:6;10194:13;10226:4;10250:60;10266:43;10306:2;10266:43;:::i;10250:60::-;10344:15;;;10430:1;10426:10;;;;10414:23;;10410:32;;;10375:12;;;;10454:15;;;10451:35;;;10482:1;10479;10472:12;10451:35;10518:2;10510:6;10506:15;10530:135;10546:6;10541:3;10538:15;10530:135;;;10612:10;;10600:23;;10643:12;;;;10563;;10530:135;;10699:1648;10763:5;10793:4;10837:3;10832:2;10824:6;10820:15;10816:25;10806:53;;10855:1;10852;10845:12;10806:53;10884:6;10878:13;10910:4;10934:60;10950:43;10990:2;10950:43;:::i;10934:60::-;11028:15;;;11114:1;11110:10;;;;11098:23;;11094:32;;;11059:12;;;;11138:15;;;11135:35;;;11166:1;11163;11156:12;11135:35;11202:2;11194:6;11190:15;11214:1104;11230:6;11225:3;11222:15;11214:1104;;;11309:3;11303:10;-1:-1:-1;;;;;11386:2:1;11373:11;11370:19;11367:109;;;11430:1;11459:2;11455;11448:14;11367:109;11511:11;11503:6;11499:24;11489:34;;11563:3;11558:2;11554;11550:11;11546:21;11536:119;;11609:1;11638:2;11634;11627:14;11536:119;11692:2;11688;11684:11;11678:18;11719:2;11715;11712:10;11709:36;;;11725:18;;:::i;:::-;11773:51;11797:11;;;-1:-1:-1;;11793:25:1;11789:34;;11773:51;:::i;:::-;11758:66;;11853:2;11844:7;11837:19;11879:2;11922:3;11917:2;11912;11908;11904:11;11900:20;11897:29;11894:122;;;11968:1;11998:3;11993;11986:16;11894:122;12038:1;12052:142;12066:2;12063:1;12060:9;12052:142;;;12163:10;;;12159:19;;12153:26;12131:15;;;12127:24;;12120:60;12077:10;;12052:142;;;-1:-1:-1;;12241:1:1;12218:16;;;12214:25;;12207:36;12256:20;;-1:-1:-1;12296:12:1;;;;11247;;11214:1104;;;-1:-1:-1;12336:5:1;10699:1648;-1:-1:-1;;;;;;;10699:1648:1:o;12352:1462::-;12631:6;12639;12647;12655;12663;12671;12679;12732:3;12720:9;12711:7;12707:23;12703:33;12700:53;;;12749:1;12746;12739:12;12700:53;12778:9;12772:16;12762:26;;12828:2;12817:9;12813:18;12807:25;12797:35;;12876:2;12865:9;12861:18;12855:25;-1:-1:-1;;;;;12940:2:1;12932:6;12929:14;12926:34;;;12956:1;12953;12946:12;12926:34;12979:72;13043:7;13034:6;13023:9;13019:22;12979:72;:::i;:::-;12969:82;;13097:2;13086:9;13082:18;13076:25;13060:41;;13126:2;13116:8;13113:16;13110:36;;;13142:1;13139;13132:12;13110:36;13165:78;13235:7;13224:8;13213:9;13209:24;13165:78;:::i;:::-;13155:88;;13289:3;13278:9;13274:19;13268:26;13252:42;;13319:2;13309:8;13306:16;13303:36;;;13335:1;13332;13325:12;13303:36;13358:74;13424:7;13413:8;13402:9;13398:24;13358:74;:::i;:::-;13348:84;;13478:3;13467:9;13463:19;13457:26;13441:42;;13508:2;13498:8;13495:16;13492:36;;;13524:1;13521;13514:12;13492:36;13547:73;13612:7;13601:8;13590:9;13586:24;13547:73;:::i;:::-;13537:83;;13666:3;13655:9;13651:19;13645:26;13629:42;;13696:2;13686:8;13683:16;13680:36;;;13712:1;13709;13702:12;13680:36;;13735:73;13800:7;13789:8;13778:9;13774:24;13735:73;:::i;:::-;13725:83;;;12352:1462;;;;;;;;;;:::o;13819:175::-;13856:3;13900:4;13893:5;13889:16;13929:4;13920:7;13917:17;13914:43;;13937:18;;:::i;:::-;13986:1;13973:15;;13819:175;-1:-1:-1;;13819:175:1:o;14691:257::-;-1:-1:-1;;;;;14812:10:1;;;14824;;;14808:27;14855:20;;;;14762:18;14894:24;;;14884:58;;14922:18;;:::i;:::-;14884:58;;14691:257;;;;:::o;16078:127::-;16139:10;16134:3;16130:20;16127:1;16120:31;16170:4;16167:1;16160:15;16194:4;16191:1;16184:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1587800",
								"executionCost": "144424",
								"totalCost": "1732224"
							},
							"external": {
								"MaxStakers()": "2358",
								"MinimalStakingCoin()": "2351",
								"checkforpenalty(address)": "6994",
								"currentStakerSet(uint256)": "4724",
								"distributeReward()": "infinite",
								"getActiveStakers()": "infinite",
								"getStakingInfo(address)": "2610",
								"getTotalStakeOfActiveStakers()": "infinite",
								"isActiveStaker(address)": "infinite",
								"lastRewardTime()": "2395",
								"mutateValStakeTimeMapping(address,uint256)": "26846",
								"owner()": "2387",
								"penaltyPercentage()": "2353",
								"reflectionPercentSum(uint256)": "2517",
								"renounceOwnership()": "infinite",
								"rescueCoins()": "infinite",
								"rewardWithdrawalTime(address)": "2613",
								"stake()": "infinite",
								"stakeTime(address)": "2593",
								"stakingLockPeriod()": "2382",
								"totalPenalty()": "2351",
								"totalStake()": "2329",
								"transferOwnership(address)": "infinite",
								"unstake()": "infinite",
								"updateMaxStakers(uint16)": "26753",
								"updateMinimalStakingCoin(uint256)": "24599",
								"updatePenaltyPercentage(uint64)": "24640",
								"updateStakingLockPeriod(uint64)": "26921",
								"updateValidatorDataContract(address)": "26876",
								"valDataContract()": "2469",
								"valStakeTime(address)": "2614",
								"viewStakeReward(address)": "infinite",
								"withdrawStakingReward(address)": "infinite"
							},
							"internal": {
								"getTotalStakeOfActiveStakersExcept(address)": "infinite",
								"removeStakerFromCurrrentSet(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 4252,
									"end": 14667,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 4252,
									"end": 14667,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 4252,
									"end": 14667,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 4287,
									"end": 4393,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 4287,
									"end": 4393,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 4287,
									"end": 4393,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 4287,
									"end": 4393,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 4350,
									"end": 4392,
									"name": "PUSH",
									"source": 0,
									"value": "C4F6F3E5458AC81005EEF84521373904F18E36E"
								},
								{
									"begin": 4287,
									"end": 4393,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 4287,
									"end": 4393,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 4287,
									"end": 4393,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 4533,
									"end": 4540,
									"name": "PUSH",
									"source": 0,
									"value": "DE0B6B3A7640000"
								},
								{
									"begin": 4496,
									"end": 4540,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 4496,
									"end": 4540,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 4496,
									"end": 4540,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 4496,
									"end": 4540,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 4547,
									"end": 4575,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 4547,
									"end": 4575,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 4547,
									"end": 4575,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FFFF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 4547,
									"end": 4575,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 4547,
									"end": 4575,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 4547,
									"end": 4575,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 4547,
									"end": 4575,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 4547,
									"end": 4575,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 4547,
									"end": 4575,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 4723,
									"end": 4764,
									"name": "PUSH",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 4723,
									"end": 4764,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 4723,
									"end": 4764,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 4723,
									"end": 4764,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 4757,
									"end": 4764,
									"name": "PUSH",
									"source": 0,
									"value": "76A700"
								},
								{
									"begin": 4723,
									"end": 4764,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 4723,
									"end": 4764,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 4723,
									"end": 4764,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 4806,
									"end": 4810,
									"name": "PUSH",
									"source": 0,
									"value": "3E8"
								},
								{
									"begin": 4771,
									"end": 4810,
									"name": "PUSH",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 4771,
									"end": 4810,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 4252,
									"end": 14667,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 4252,
									"end": 14667,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 4252,
									"end": 14667,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 4252,
									"end": 14667,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 4252,
									"end": 14667,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 4252,
									"end": 14667,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 4252,
									"end": 14667,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 4252,
									"end": 14667,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 4252,
									"end": 14667,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 4252,
									"end": 14667,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1590,
									"end": 1622,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 665,
									"end": 675,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 1590,
									"end": 1608,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1590,
									"end": 1622,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1590,
									"end": 1622,
									"name": "tag",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1590,
									"end": 1622,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 4252,
									"end": 14667,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 4252,
									"end": 14667,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 3121,
									"end": 3308,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 3121,
									"end": 3308,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3194,
									"end": 3210,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3213,
									"end": 3219,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3213,
									"end": 3219,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3229,
									"end": 3246,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3229,
									"end": 3246,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3229,
									"end": 3246,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3229,
									"end": 3246,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3229,
									"end": 3246,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3229,
									"end": 3246,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3229,
									"end": 3246,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3229,
									"end": 3246,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 3229,
									"end": 3246,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3261,
									"end": 3301,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3261,
									"end": 3301,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3213,
									"end": 3219,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3213,
									"end": 3219,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3213,
									"end": 3219,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 3213,
									"end": 3219,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3213,
									"end": 3219,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 3213,
									"end": 3219,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3213,
									"end": 3219,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3261,
									"end": 3301,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3261,
									"end": 3301,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3194,
									"end": 3210,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3261,
									"end": 3301,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 3184,
									"end": 3308,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3121,
									"end": 3308,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3121,
									"end": 3308,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 4252,
									"end": 14667,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 4252,
									"end": 14667,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 4252,
									"end": 14667,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4252,
									"end": 14667,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 4252,
									"end": 14667,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4252,
									"end": 14667,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 4252,
									"end": 14667,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 4252,
									"end": 14667,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 4252,
									"end": 14667,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220836b0bef05db4712911c246e3cb2b498a21165a92e8744392b45fcb09a25bb4864736f6c63430008110033",
									".code": [
										{
											"begin": 4252,
											"end": 14667,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "PUSH",
											"source": 0,
											"value": "9FB82DB9"
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "PUSH",
											"source": 0,
											"value": "E0639364"
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "PUSH",
											"source": 0,
											"value": "F3883538"
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "PUSH",
											"source": 0,
											"value": "F67C4DFD"
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "PUSH",
											"source": 0,
											"value": "F6B663C3"
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "PUSH",
											"source": 0,
											"value": "FE32F55E"
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "PUSH",
											"source": 0,
											"value": "E0639364"
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "PUSH",
											"source": 0,
											"value": "E6AF61C8"
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "PUSH",
											"source": 0,
											"value": "E75BCB96"
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "PUSH",
											"source": 0,
											"value": "EE7CB288"
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "PUSH",
											"source": 0,
											"value": "BDDD6DE4"
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "PUSH",
											"source": 0,
											"value": "BDDD6DE4"
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "PUSH",
											"source": 0,
											"value": "BE645692"
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "PUSH",
											"source": 0,
											"value": "C7907F54"
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "PUSH",
											"source": 0,
											"value": "CC001F16"
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "PUSH",
											"source": 0,
											"value": "9FB82DB9"
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "PUSH",
											"source": 0,
											"value": "A9E30CCF"
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "PUSH",
											"source": 0,
											"value": "AA4704F3"
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "PUSH",
											"source": 0,
											"value": "B0806108"
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "PUSH",
											"source": 0,
											"value": "68015791"
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "PUSH",
											"source": 0,
											"value": "8B0E9F3F"
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "PUSH",
											"source": 0,
											"value": "8B0E9F3F"
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "PUSH",
											"source": 0,
											"value": "8F73C5AE"
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "PUSH",
											"source": 0,
											"value": "9231CF74"
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "PUSH",
											"source": 0,
											"value": "68015791"
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "PUSH",
											"source": 0,
											"value": "72D30A70"
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "PUSH",
											"source": 0,
											"value": "82CB1C18"
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "PUSH",
											"source": 0,
											"value": "3A4B66F1"
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "PUSH",
											"source": 0,
											"value": "3A4B66F1"
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "PUSH",
											"source": 0,
											"value": "41F349B5"
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "PUSH",
											"source": 0,
											"value": "5FA34EBD"
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "PUSH",
											"source": 0,
											"value": "6285B5A2"
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "PUSH",
											"source": 0,
											"value": "62B6139"
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "PUSH",
											"source": 0,
											"value": "15908D51"
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "PUSH",
											"source": 0,
											"value": "2170E472"
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "PUSH",
											"source": 0,
											"value": "2DEF6620"
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 14667,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 13725,
											"end": 13934,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 13725,
											"end": 13934,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13725,
											"end": 13934,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 13725,
											"end": 13934,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13725,
											"end": 13934,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13725,
											"end": 13934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 13725,
											"end": 13934,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13725,
											"end": 13934,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13725,
											"end": 13934,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13725,
											"end": 13934,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 13725,
											"end": 13934,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 13725,
											"end": 13934,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13725,
											"end": 13934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 13725,
											"end": 13934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 13725,
											"end": 13934,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 13725,
											"end": 13934,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13725,
											"end": 13934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 13725,
											"end": 13934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13725,
											"end": 13934,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 13725,
											"end": 13934,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13725,
											"end": 13934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 13725,
											"end": 13934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13725,
											"end": 13934,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 13725,
											"end": 13934,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13725,
											"end": 13934,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 4771,
											"end": 4810,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 4771,
											"end": 4810,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4771,
											"end": 4810,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 4771,
											"end": 4810,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4771,
											"end": 4810,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4771,
											"end": 4810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 4771,
											"end": 4810,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4771,
											"end": 4810,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4771,
											"end": 4810,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4771,
											"end": 4810,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4771,
											"end": 4810,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 4771,
											"end": 4810,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4771,
											"end": 4810,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4771,
											"end": 4810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 4771,
											"end": 4810,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 4771,
											"end": 4810,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4771,
											"end": 4810,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4771,
											"end": 4810,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4771,
											"end": 4810,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 4771,
											"end": 4810,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4771,
											"end": 4810,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4771,
											"end": 4810,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 449,
											"end": 474,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 449,
											"end": 474,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 449,
											"end": 474,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 437,
											"end": 439,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 422,
											"end": 440,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4771,
											"end": 4810,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 4771,
											"end": 4810,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4771,
											"end": 4810,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4771,
											"end": 4810,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4771,
											"end": 4810,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4771,
											"end": 4810,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4771,
											"end": 4810,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4771,
											"end": 4810,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4771,
											"end": 4810,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4884,
											"end": 4925,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4884,
											"end": 4925,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4884,
											"end": 4925,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 4884,
											"end": 4925,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4884,
											"end": 4925,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4884,
											"end": 4925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 4884,
											"end": 4925,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4884,
											"end": 4925,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4884,
											"end": 4925,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4884,
											"end": 4925,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4884,
											"end": 4925,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 4884,
											"end": 4925,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4884,
											"end": 4925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 4884,
											"end": 4925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 4884,
											"end": 4925,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4884,
											"end": 4925,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4884,
											"end": 4925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 4884,
											"end": 4925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4884,
											"end": 4925,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 4884,
											"end": 4925,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4884,
											"end": 4925,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 4884,
											"end": 4925,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4884,
											"end": 4925,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4884,
											"end": 4925,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4884,
											"end": 4925,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4884,
											"end": 4925,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4884,
											"end": 4925,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4884,
											"end": 4925,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4884,
											"end": 4925,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4884,
											"end": 4925,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4884,
											"end": 4925,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4884,
											"end": 4925,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4884,
											"end": 4925,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6694,
											"end": 7865,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 6694,
											"end": 7865,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6694,
											"end": 7865,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 6694,
											"end": 7865,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6694,
											"end": 7865,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6694,
											"end": 7865,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 6694,
											"end": 7865,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6694,
											"end": 7865,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6694,
											"end": 7865,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6694,
											"end": 7865,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6694,
											"end": 7865,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 6694,
											"end": 7865,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6694,
											"end": 7865,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6694,
											"end": 7865,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 6694,
											"end": 7865,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 6694,
											"end": 7865,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6694,
											"end": 7865,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 6694,
											"end": 7865,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6694,
											"end": 7865,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6694,
											"end": 7865,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1038,
											"end": 1052,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1038,
											"end": 1052,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1031,
											"end": 1053,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1013,
											"end": 1054,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1013,
											"end": 1054,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1001,
											"end": 1003,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 986,
											"end": 1004,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6694,
											"end": 7865,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 873,
											"end": 1060,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5619,
											"end": 6688,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 5619,
											"end": 6688,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5619,
											"end": 6688,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 5619,
											"end": 6688,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 5619,
											"end": 6688,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10861,
											"end": 11091,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 10861,
											"end": 11091,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10861,
											"end": 11091,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 10861,
											"end": 11091,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10861,
											"end": 11091,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10861,
											"end": 11091,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 10861,
											"end": 11091,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10861,
											"end": 11091,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10861,
											"end": 11091,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10861,
											"end": 11091,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10861,
											"end": 11091,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 10861,
											"end": 11091,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10861,
											"end": 11091,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 10861,
											"end": 11091,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 10861,
											"end": 11091,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 10861,
											"end": 11091,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10861,
											"end": 11091,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 10861,
											"end": 11091,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10861,
											"end": 11091,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 10861,
											"end": 11091,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10861,
											"end": 11091,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 10861,
											"end": 11091,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5076,
											"end": 5125,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 5076,
											"end": 5125,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5076,
											"end": 5125,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 5076,
											"end": 5125,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5076,
											"end": 5125,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5076,
											"end": 5125,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 5076,
											"end": 5125,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5076,
											"end": 5125,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5076,
											"end": 5125,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5076,
											"end": 5125,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5076,
											"end": 5125,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 5076,
											"end": 5125,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5076,
											"end": 5125,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 5076,
											"end": 5125,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 5076,
											"end": 5125,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5076,
											"end": 5125,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5076,
											"end": 5125,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 5076,
											"end": 5125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5076,
											"end": 5125,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 5076,
											"end": 5125,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5076,
											"end": 5125,
											"name": "PUSH",
											"source": 0,
											"value": "E"
										},
										{
											"begin": 5076,
											"end": 5125,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5076,
											"end": 5125,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5076,
											"end": 5125,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5076,
											"end": 5125,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5076,
											"end": 5125,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5076,
											"end": 5125,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5076,
											"end": 5125,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5076,
											"end": 5125,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5076,
											"end": 5125,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5076,
											"end": 5125,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5076,
											"end": 5125,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5076,
											"end": 5125,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14304,
											"end": 14525,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 14304,
											"end": 14525,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14304,
											"end": 14525,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 14304,
											"end": 14525,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14304,
											"end": 14525,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14304,
											"end": 14525,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 14304,
											"end": 14525,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14304,
											"end": 14525,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14304,
											"end": 14525,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14304,
											"end": 14525,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14304,
											"end": 14525,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 14304,
											"end": 14525,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14304,
											"end": 14525,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 14304,
											"end": 14525,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 14304,
											"end": 14525,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 14304,
											"end": 14525,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14304,
											"end": 14525,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 14304,
											"end": 14525,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14304,
											"end": 14525,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 14304,
											"end": 14525,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14304,
											"end": 14525,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 14304,
											"end": 14525,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12027,
											"end": 12284,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 12027,
											"end": 12284,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12027,
											"end": 12284,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 12027,
											"end": 12284,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12027,
											"end": 12284,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12027,
											"end": 12284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 12027,
											"end": 12284,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12027,
											"end": 12284,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12027,
											"end": 12284,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12027,
											"end": 12284,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12027,
											"end": 12284,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 12027,
											"end": 12284,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12027,
											"end": 12284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 12027,
											"end": 12284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 12027,
											"end": 12284,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 12027,
											"end": 12284,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12027,
											"end": 12284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 12027,
											"end": 12284,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12027,
											"end": 12284,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 12027,
											"end": 12284,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12027,
											"end": 12284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 12027,
											"end": 12284,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2485,
											"end": 2586,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 2485,
											"end": 2586,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2485,
											"end": 2586,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2485,
											"end": 2586,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2485,
											"end": 2586,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2485,
											"end": 2586,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 2485,
											"end": 2586,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2485,
											"end": 2586,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2485,
											"end": 2586,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2485,
											"end": 2586,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2485,
											"end": 2586,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 2485,
											"end": 2586,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2485,
											"end": 2586,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2485,
											"end": 2586,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 2485,
											"end": 2586,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 2485,
											"end": 2586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7871,
											"end": 9045,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 7871,
											"end": 9045,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7871,
											"end": 9045,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 7871,
											"end": 9045,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7871,
											"end": 9045,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7871,
											"end": 9045,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 7871,
											"end": 9045,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7871,
											"end": 9045,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7871,
											"end": 9045,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7871,
											"end": 9045,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7871,
											"end": 9045,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 7871,
											"end": 9045,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7871,
											"end": 9045,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 7871,
											"end": 9045,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 7871,
											"end": 9045,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 7871,
											"end": 9045,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7871,
											"end": 9045,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 7871,
											"end": 9045,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7871,
											"end": 9045,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 7871,
											"end": 9045,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7871,
											"end": 9045,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 7871,
											"end": 9045,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4932,
											"end": 4976,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 4932,
											"end": 4976,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4932,
											"end": 4976,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 4932,
											"end": 4976,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4932,
											"end": 4976,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4932,
											"end": 4976,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 4932,
											"end": 4976,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4932,
											"end": 4976,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4932,
											"end": 4976,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4932,
											"end": 4976,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4932,
											"end": 4976,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 4932,
											"end": 4976,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4932,
											"end": 4976,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 4932,
											"end": 4976,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 4932,
											"end": 4976,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4932,
											"end": 4976,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4932,
											"end": 4976,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 4932,
											"end": 4976,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4932,
											"end": 4976,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 4932,
											"end": 4976,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4932,
											"end": 4976,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 4932,
											"end": 4976,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4932,
											"end": 4976,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4932,
											"end": 4976,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4932,
											"end": 4976,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4932,
											"end": 4976,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4932,
											"end": 4976,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4932,
											"end": 4976,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4932,
											"end": 4976,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4932,
											"end": 4976,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4932,
											"end": 4976,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4932,
											"end": 4976,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4932,
											"end": 4976,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4657,
											"end": 4682,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 4657,
											"end": 4682,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4657,
											"end": 4682,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 4657,
											"end": 4682,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4657,
											"end": 4682,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4657,
											"end": 4682,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 4657,
											"end": 4682,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4657,
											"end": 4682,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4657,
											"end": 4682,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4657,
											"end": 4682,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4657,
											"end": 4682,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 4657,
											"end": 4682,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4657,
											"end": 4682,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4657,
											"end": 4682,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 4657,
											"end": 4682,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 4657,
											"end": 4682,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4657,
											"end": 4682,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4657,
											"end": 4682,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1855,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1940,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1940,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1940,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 1855,
											"end": 1940,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1940,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1855,
											"end": 1940,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1940,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 1855,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1901,
											"end": 1908,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1927,
											"end": 1933,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1927,
											"end": 1933,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 1855,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1940,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1855,
											"end": 1940,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1414,
											"end": 1446,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1414,
											"end": 1446,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1414,
											"end": 1446,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1396,
											"end": 1447,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1396,
											"end": 1447,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1384,
											"end": 1386,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1369,
											"end": 1387,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1855,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1250,
											"end": 1453,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9132,
											"end": 10242,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 9132,
											"end": 10242,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9132,
											"end": 10242,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 9132,
											"end": 10242,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 9132,
											"end": 10242,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5003,
											"end": 5029,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 5003,
											"end": 5029,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5003,
											"end": 5029,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 5003,
											"end": 5029,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5003,
											"end": 5029,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5003,
											"end": 5029,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 5003,
											"end": 5029,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5003,
											"end": 5029,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5003,
											"end": 5029,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5003,
											"end": 5029,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5003,
											"end": 5029,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 5003,
											"end": 5029,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5003,
											"end": 5029,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5003,
											"end": 5029,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 5003,
											"end": 5029,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 5003,
											"end": 5029,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5003,
											"end": 5029,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5003,
											"end": 5029,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11289,
											"end": 11396,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 11289,
											"end": 11396,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11289,
											"end": 11396,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 11289,
											"end": 11396,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11289,
											"end": 11396,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11289,
											"end": 11396,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 11289,
											"end": 11396,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11289,
											"end": 11396,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11289,
											"end": 11396,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11289,
											"end": 11396,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11289,
											"end": 11396,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 11289,
											"end": 11396,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11289,
											"end": 11396,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11289,
											"end": 11396,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 11289,
											"end": 11396,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 11289,
											"end": 11396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11289,
											"end": 11396,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 11289,
											"end": 11396,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11289,
											"end": 11396,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11289,
											"end": 11396,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11289,
											"end": 11396,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 11289,
											"end": 11396,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11289,
											"end": 11396,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11289,
											"end": 11396,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 11289,
											"end": 11396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14103,
											"end": 14297,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 14103,
											"end": 14297,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14103,
											"end": 14297,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 14103,
											"end": 14297,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14103,
											"end": 14297,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14103,
											"end": 14297,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 14103,
											"end": 14297,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14103,
											"end": 14297,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14103,
											"end": 14297,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14103,
											"end": 14297,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14103,
											"end": 14297,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 14103,
											"end": 14297,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14103,
											"end": 14297,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 14103,
											"end": 14297,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 14103,
											"end": 14297,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 14103,
											"end": 14297,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14103,
											"end": 14297,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 14103,
											"end": 14297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14103,
											"end": 14297,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 14103,
											"end": 14297,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14103,
											"end": 14297,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 14103,
											"end": 14297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11097,
											"end": 11283,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11097,
											"end": 11283,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11097,
											"end": 11283,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 11097,
											"end": 11283,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11097,
											"end": 11283,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11097,
											"end": 11283,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 11097,
											"end": 11283,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11097,
											"end": 11283,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11097,
											"end": 11283,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11097,
											"end": 11283,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11097,
											"end": 11283,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 11097,
											"end": 11283,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11097,
											"end": 11283,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 11097,
											"end": 11283,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 11097,
											"end": 11283,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 11097,
											"end": 11283,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11097,
											"end": 11283,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 11097,
											"end": 11283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11097,
											"end": 11283,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 11097,
											"end": 11283,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11248,
											"end": 11266,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11195,
											"end": 11202,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11248,
											"end": 11266,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11248,
											"end": 11266,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11248,
											"end": 11266,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11248,
											"end": 11258,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 11248,
											"end": 11266,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11248,
											"end": 11266,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11248,
											"end": 11266,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11248,
											"end": 11266,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11248,
											"end": 11266,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11248,
											"end": 11266,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11248,
											"end": 11266,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11097,
											"end": 11283,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13980,
											"end": 14097,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 13980,
											"end": 14097,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13980,
											"end": 14097,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 13980,
											"end": 14097,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13980,
											"end": 14097,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13980,
											"end": 14097,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 13980,
											"end": 14097,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13980,
											"end": 14097,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13980,
											"end": 14097,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13980,
											"end": 14097,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 13980,
											"end": 14097,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 13980,
											"end": 14097,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13980,
											"end": 14097,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13980,
											"end": 14097,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 13980,
											"end": 14097,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 13980,
											"end": 14097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4547,
											"end": 4575,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 4547,
											"end": 4575,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4547,
											"end": 4575,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 4547,
											"end": 4575,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4547,
											"end": 4575,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4547,
											"end": 4575,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 4547,
											"end": 4575,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4547,
											"end": 4575,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4547,
											"end": 4575,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4547,
											"end": 4575,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4547,
											"end": 4575,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 4547,
											"end": 4575,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4547,
											"end": 4575,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4547,
											"end": 4575,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4547,
											"end": 4575,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 4547,
											"end": 4575,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4547,
											"end": 4575,
											"name": "PUSH",
											"source": 0,
											"value": "FFFF"
										},
										{
											"begin": 4547,
											"end": 4575,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4547,
											"end": 4575,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4547,
											"end": 4575,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4547,
											"end": 4575,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 4547,
											"end": 4575,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4547,
											"end": 4575,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4547,
											"end": 4575,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2615,
											"end": 2621,
											"name": "PUSH",
											"source": 1,
											"value": "FFFF"
										},
										{
											"begin": 2603,
											"end": 2622,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2603,
											"end": 2622,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2603,
											"end": 2622,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2585,
											"end": 2623,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2585,
											"end": 2623,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2573,
											"end": 2575,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2558,
											"end": 2576,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4547,
											"end": 4575,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2441,
											"end": 2629,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4496,
											"end": 4540,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 4496,
											"end": 4540,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4496,
											"end": 4540,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 4496,
											"end": 4540,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4496,
											"end": 4540,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4496,
											"end": 4540,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 4496,
											"end": 4540,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4496,
											"end": 4540,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4496,
											"end": 4540,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4496,
											"end": 4540,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4496,
											"end": 4540,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 4496,
											"end": 4540,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4496,
											"end": 4540,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4496,
											"end": 4540,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 4496,
											"end": 4540,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 4496,
											"end": 4540,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4496,
											"end": 4540,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4496,
											"end": 4540,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13225,
											"end": 13343,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 13225,
											"end": 13343,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13225,
											"end": 13343,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 13225,
											"end": 13343,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13225,
											"end": 13343,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13225,
											"end": 13343,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 13225,
											"end": 13343,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13225,
											"end": 13343,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13225,
											"end": 13343,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13225,
											"end": 13343,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 13225,
											"end": 13343,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 13225,
											"end": 13343,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13225,
											"end": 13343,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 13225,
											"end": 13343,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 13225,
											"end": 13343,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 13225,
											"end": 13343,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13225,
											"end": 13343,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 13225,
											"end": 13343,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13225,
											"end": 13343,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 13225,
											"end": 13343,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13225,
											"end": 13343,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 13225,
											"end": 13343,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4825,
											"end": 4877,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 4825,
											"end": 4877,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4825,
											"end": 4877,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 4825,
											"end": 4877,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4825,
											"end": 4877,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4825,
											"end": 4877,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 4825,
											"end": 4877,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4825,
											"end": 4877,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4825,
											"end": 4877,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4825,
											"end": 4877,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4825,
											"end": 4877,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 4825,
											"end": 4877,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4825,
											"end": 4877,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 4825,
											"end": 4877,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 4825,
											"end": 4877,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4825,
											"end": 4877,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4825,
											"end": 4877,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 4825,
											"end": 4877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4825,
											"end": 4877,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 4825,
											"end": 4877,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4825,
											"end": 4877,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 4825,
											"end": 4877,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4825,
											"end": 4877,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4825,
											"end": 4877,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4825,
											"end": 4877,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4825,
											"end": 4877,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4825,
											"end": 4877,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4825,
											"end": 4877,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4825,
											"end": 4877,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4825,
											"end": 4877,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4825,
											"end": 4877,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4825,
											"end": 4877,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4825,
											"end": 4877,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4723,
											"end": 4764,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 4723,
											"end": 4764,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4723,
											"end": 4764,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 4723,
											"end": 4764,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4723,
											"end": 4764,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4723,
											"end": 4764,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 4723,
											"end": 4764,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4723,
											"end": 4764,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4723,
											"end": 4764,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4723,
											"end": 4764,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4723,
											"end": 4764,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 4723,
											"end": 4764,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4723,
											"end": 4764,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 4723,
											"end": 4764,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4723,
											"end": 4764,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 4723,
											"end": 4764,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4723,
											"end": 4764,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4723,
											"end": 4764,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4723,
											"end": 4764,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4723,
											"end": 4764,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 4723,
											"end": 4764,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4723,
											"end": 4764,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4723,
											"end": 4764,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3073,
											"end": 3104,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3073,
											"end": 3104,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3073,
											"end": 3104,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3055,
											"end": 3105,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3055,
											"end": 3105,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3043,
											"end": 3045,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3028,
											"end": 3046,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4723,
											"end": 4764,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2911,
											"end": 3111,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4689,
											"end": 4716,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 4689,
											"end": 4716,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4689,
											"end": 4716,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 4689,
											"end": 4716,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4689,
											"end": 4716,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4689,
											"end": 4716,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 4689,
											"end": 4716,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4689,
											"end": 4716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4689,
											"end": 4716,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4689,
											"end": 4716,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4689,
											"end": 4716,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 4689,
											"end": 4716,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4689,
											"end": 4716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4689,
											"end": 4716,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 4689,
											"end": 4716,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 4689,
											"end": 4716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4689,
											"end": 4716,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4689,
											"end": 4716,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11402,
											"end": 11589,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 11402,
											"end": 11589,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11402,
											"end": 11589,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 11402,
											"end": 11589,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11402,
											"end": 11589,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11402,
											"end": 11589,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 11402,
											"end": 11589,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11402,
											"end": 11589,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11402,
											"end": 11589,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11402,
											"end": 11589,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11402,
											"end": 11589,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 11402,
											"end": 11589,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11402,
											"end": 11589,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11402,
											"end": 11589,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 11402,
											"end": 11589,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 11402,
											"end": 11589,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11402,
											"end": 11589,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 11402,
											"end": 11589,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11402,
											"end": 11589,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11402,
											"end": 11589,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11402,
											"end": 11589,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3290,
											"end": 3315,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3290,
											"end": 3315,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3290,
											"end": 3315,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3346,
											"end": 3348,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3331,
											"end": 3349,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3331,
											"end": 3349,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3324,
											"end": 3358,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3324,
											"end": 3358,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3324,
											"end": 3358,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3324,
											"end": 3358,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3263,
											"end": 3281,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11402,
											"end": 11589,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 3116,
											"end": 3364,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13575,
											"end": 13719,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 13575,
											"end": 13719,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13575,
											"end": 13719,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 13575,
											"end": 13719,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13575,
											"end": 13719,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13575,
											"end": 13719,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 13575,
											"end": 13719,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13575,
											"end": 13719,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13575,
											"end": 13719,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13575,
											"end": 13719,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 13575,
											"end": 13719,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 13575,
											"end": 13719,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13575,
											"end": 13719,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 13575,
											"end": 13719,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 13575,
											"end": 13719,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 13575,
											"end": 13719,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13575,
											"end": 13719,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 13575,
											"end": 13719,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13575,
											"end": 13719,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 13575,
											"end": 13719,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13575,
											"end": 13719,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 13575,
											"end": 13719,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2735,
											"end": 2967,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2735,
											"end": 2967,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2735,
											"end": 2967,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2735,
											"end": 2967,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2735,
											"end": 2967,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2735,
											"end": 2967,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 2735,
											"end": 2967,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2735,
											"end": 2967,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2735,
											"end": 2967,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2735,
											"end": 2967,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2735,
											"end": 2967,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 2735,
											"end": 2967,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2735,
											"end": 2967,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 2735,
											"end": 2967,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 2735,
											"end": 2967,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2735,
											"end": 2967,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2735,
											"end": 2967,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 2735,
											"end": 2967,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2735,
											"end": 2967,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 2735,
											"end": 2967,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2735,
											"end": 2967,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 2735,
											"end": 2967,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12290,
											"end": 13219,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 12290,
											"end": 13219,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12290,
											"end": 13219,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 12290,
											"end": 13219,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12290,
											"end": 13219,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12290,
											"end": 13219,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 12290,
											"end": 13219,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12290,
											"end": 13219,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12290,
											"end": 13219,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12290,
											"end": 13219,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12290,
											"end": 13219,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 12290,
											"end": 13219,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12290,
											"end": 13219,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 12290,
											"end": 13219,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 12290,
											"end": 13219,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 12290,
											"end": 13219,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12290,
											"end": 13219,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 12290,
											"end": 13219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12290,
											"end": 13219,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 12290,
											"end": 13219,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12290,
											"end": 13219,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 12290,
											"end": 13219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13348,
											"end": 13570,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 13348,
											"end": 13570,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13348,
											"end": 13570,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 13348,
											"end": 13570,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13348,
											"end": 13570,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13348,
											"end": 13570,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 13348,
											"end": 13570,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13348,
											"end": 13570,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13348,
											"end": 13570,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13348,
											"end": 13570,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 13348,
											"end": 13570,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 13348,
											"end": 13570,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13348,
											"end": 13570,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 13348,
											"end": 13570,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 13348,
											"end": 13570,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 13348,
											"end": 13570,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13348,
											"end": 13570,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 13348,
											"end": 13570,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13348,
											"end": 13570,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 13348,
											"end": 13570,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13348,
											"end": 13570,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 13348,
											"end": 13570,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4583,
											"end": 4616,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 4583,
											"end": 4616,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4583,
											"end": 4616,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 4583,
											"end": 4616,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4583,
											"end": 4616,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4583,
											"end": 4616,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 4583,
											"end": 4616,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4583,
											"end": 4616,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4583,
											"end": 4616,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4583,
											"end": 4616,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4583,
											"end": 4616,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 4583,
											"end": 4616,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4583,
											"end": 4616,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 4583,
											"end": 4616,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 4583,
											"end": 4616,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4583,
											"end": 4616,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4583,
											"end": 4616,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 4583,
											"end": 4616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4583,
											"end": 4616,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 4583,
											"end": 4616,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4583,
											"end": 4616,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 4583,
											"end": 4616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4287,
											"end": 4393,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 4287,
											"end": 4393,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4287,
											"end": 4393,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 4287,
											"end": 4393,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4287,
											"end": 4393,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4287,
											"end": 4393,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 4287,
											"end": 4393,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4287,
											"end": 4393,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4287,
											"end": 4393,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4287,
											"end": 4393,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4287,
											"end": 4393,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 4287,
											"end": 4393,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4287,
											"end": 4393,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4287,
											"end": 4393,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4287,
											"end": 4393,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 4287,
											"end": 4393,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4287,
											"end": 4393,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4287,
											"end": 4393,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4287,
											"end": 4393,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13725,
											"end": 13934,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 13725,
											"end": 13934,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1748,
											"end": 1761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 1748,
											"end": 1759,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 1748,
											"end": 1761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1748,
											"end": 1761,
											"name": "tag",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 1748,
											"end": 1761,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13847,
											"end": 13852,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "2710"
										},
										{
											"begin": 13826,
											"end": 13844,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13826,
											"end": 13852,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13826,
											"end": 13852,
											"modifierDepth": 1,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 13818,
											"end": 13879,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 13818,
											"end": 13879,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13818,
											"end": 13879,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13818,
											"end": 13879,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13818,
											"end": 13879,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13818,
											"end": 13879,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3805,
											"end": 3807,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13818,
											"end": 13879,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13818,
											"end": 13879,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13818,
											"end": 13879,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3787,
											"end": 3808,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3844,
											"end": 3846,
											"name": "PUSH",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 3824,
											"end": 3842,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3824,
											"end": 3842,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3824,
											"end": 3842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3817,
											"end": 3847,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "50656E616C74792063616E6E6F742062652031303025"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "50"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3863,
											"end": 3881,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3863,
											"end": 3881,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3863,
											"end": 3881,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3856,
											"end": 3908,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3925,
											"end": 3943,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3925,
											"end": 3943,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13818,
											"end": 13879,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 13818,
											"end": 13879,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13818,
											"end": 13879,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13818,
											"end": 13879,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13818,
											"end": 13879,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13818,
											"end": 13879,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13818,
											"end": 13879,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13818,
											"end": 13879,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13818,
											"end": 13879,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 13818,
											"end": 13879,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 13818,
											"end": 13879,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13889,
											"end": 13927,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13889,
											"end": 13906,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 13889,
											"end": 13927,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 13725,
											"end": 13934,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6694,
											"end": 7865,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 6694,
											"end": 7865,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6781,
											"end": 6790,
											"name": "ORIGIN",
											"source": 0
										},
										{
											"begin": 6731,
											"end": 6735,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6826,
											"end": 6844,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6826,
											"end": 6844,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6826,
											"end": 6844,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6826,
											"end": 6836,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 6826,
											"end": 6844,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6826,
											"end": 6844,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6826,
											"end": 6844,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6826,
											"end": 6844,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6826,
											"end": 6844,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6826,
											"end": 6844,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6731,
											"end": 6735,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6731,
											"end": 6735,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6781,
											"end": 6790,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6863,
											"end": 6880,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6855,
											"end": 6909,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 6855,
											"end": 6909,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6855,
											"end": 6909,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6855,
											"end": 6909,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6855,
											"end": 6909,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6855,
											"end": 6909,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4156,
											"end": 4158,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6855,
											"end": 6909,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6855,
											"end": 6909,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6855,
											"end": 6909,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4138,
											"end": 4159,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4195,
											"end": 4197,
											"name": "PUSH",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 4175,
											"end": 4193,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4175,
											"end": 4193,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4175,
											"end": 4193,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4168,
											"end": 4198,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4234,
											"end": 4260,
											"name": "PUSH",
											"source": 1,
											"value": "596F7520646F6E2774206861766520616E79207374616B650000000000000000"
										},
										{
											"begin": 4214,
											"end": 4232,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4214,
											"end": 4232,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4214,
											"end": 4232,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4207,
											"end": 4261,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4278,
											"end": 4296,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4278,
											"end": 4296,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6855,
											"end": 6909,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 3954,
											"end": 4302,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6855,
											"end": 6909,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 6855,
											"end": 6909,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6920,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 6942,
											"end": 6948,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6920,
											"end": 6941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 6920,
											"end": 6949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6920,
											"end": 6949,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 6920,
											"end": 6949,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6989,
											"end": 7007,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6989,
											"end": 7007,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6989,
											"end": 7007,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6989,
											"end": 7007,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6989,
											"end": 7007,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6989,
											"end": 7007,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6989,
											"end": 6999,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 6989,
											"end": 7007,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6989,
											"end": 7007,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6989,
											"end": 7007,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6989,
											"end": 7007,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6989,
											"end": 7007,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6989,
											"end": 7007,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6989,
											"end": 7025,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 6989,
											"end": 7025,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7011,
											"end": 7024,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7011,
											"end": 7024,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6989,
											"end": 7025,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 6989,
											"end": 7025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6989,
											"end": 7025,
											"name": "tag",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 6989,
											"end": 7025,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6968,
											"end": 6986,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6968,
											"end": 6986,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6968,
											"end": 6986,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6968,
											"end": 6986,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6968,
											"end": 6986,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6968,
											"end": 6986,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6968,
											"end": 6978,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 6968,
											"end": 6986,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6968,
											"end": 6986,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6968,
											"end": 6986,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6968,
											"end": 6986,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6968,
											"end": 6986,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6968,
											"end": 7025,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 7056,
											"end": 7066,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 7056,
											"end": 7066,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7056,
											"end": 7084,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 7056,
											"end": 7084,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7070,
											"end": 7083,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7070,
											"end": 7083,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7056,
											"end": 7084,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 7056,
											"end": 7084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7056,
											"end": 7084,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 7056,
											"end": 7084,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7043,
											"end": 7053,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 7043,
											"end": 7084,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 7095,
											"end": 7130,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 7123,
											"end": 7129,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7095,
											"end": 7122,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 7095,
											"end": 7130,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7095,
											"end": 7130,
											"name": "tag",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 7095,
											"end": 7130,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7237,
											"end": 7254,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 7237,
											"end": 7254,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7217,
											"end": 7234,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7217,
											"end": 7234,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7141,
											"end": 7158,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7217,
											"end": 7234,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7217,
											"end": 7234,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7217,
											"end": 7234,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7217,
											"end": 7226,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 7217,
											"end": 7234,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7217,
											"end": 7234,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7217,
											"end": 7234,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7217,
											"end": 7234,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7217,
											"end": 7234,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7217,
											"end": 7234,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7141,
											"end": 7158,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7141,
											"end": 7158,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7141,
											"end": 7158,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7141,
											"end": 7158,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7217,
											"end": 7254,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 7217,
											"end": 7254,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7237,
											"end": 7254,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7237,
											"end": 7254,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7217,
											"end": 7254,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 7217,
											"end": 7254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7217,
											"end": 7254,
											"name": "tag",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 7217,
											"end": 7254,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7197,
											"end": 7212,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 7197,
											"end": 7255,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 7197,
											"end": 7255,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7197,
											"end": 7280,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7197,
											"end": 7280,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7197,
											"end": 7280,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 7197,
											"end": 7280,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7197,
											"end": 7280,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7279,
											"end": 7280,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7259,
											"end": 7276,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 7259,
											"end": 7276,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7259,
											"end": 7280,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 7197,
											"end": 7280,
											"name": "tag",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 7197,
											"end": 7280,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7194,
											"end": 7687,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7194,
											"end": 7687,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 7194,
											"end": 7687,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7345,
											"end": 7350,
											"name": "PUSH",
											"source": 0,
											"value": "2710"
										},
										{
											"begin": 7324,
											"end": 7341,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 7324,
											"end": 7341,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7308,
											"end": 7321,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7308,
											"end": 7341,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 7308,
											"end": 7341,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7308,
											"end": 7341,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7308,
											"end": 7341,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 7308,
											"end": 7341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7308,
											"end": 7341,
											"name": "tag",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 7308,
											"end": 7341,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7307,
											"end": 7350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 7307,
											"end": 7350,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7307,
											"end": 7350,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7307,
											"end": 7350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 7307,
											"end": 7350,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7307,
											"end": 7350,
											"name": "tag",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 7307,
											"end": 7350,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7296,
											"end": 7351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7442,
											"end": 7465,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 7296,
											"end": 7351,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7442,
											"end": 7455,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7442,
											"end": 7465,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 7442,
											"end": 7465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7442,
											"end": 7465,
											"name": "tag",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 7442,
											"end": 7465,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7430,
											"end": 7465,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7430,
											"end": 7465,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7509,
											"end": 7516,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7494,
											"end": 7506,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 7494,
											"end": 7506,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7494,
											"end": 7516,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 7494,
											"end": 7516,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7494,
											"end": 7516,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7494,
											"end": 7516,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 7494,
											"end": 7516,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7494,
											"end": 7516,
											"name": "tag",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 7494,
											"end": 7516,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7479,
											"end": 7491,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 7479,
											"end": 7516,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 7530,
											"end": 7565,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7530,
											"end": 7565,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7530,
											"end": 7554,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7530,
											"end": 7554,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7530,
											"end": 7554,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7530,
											"end": 7565,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7530,
											"end": 7565,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7530,
											"end": 7565,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 7530,
											"end": 7565,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 7530,
											"end": 7565,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7555,
											"end": 7564,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7555,
											"end": 7564,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7530,
											"end": 7565,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7530,
											"end": 7565,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7530,
											"end": 7565,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7530,
											"end": 7565,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7555,
											"end": 7564,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7530,
											"end": 7554,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 7530,
											"end": 7565,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 7530,
											"end": 7565,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 7530,
											"end": 7565,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 7530,
											"end": 7565,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7530,
											"end": 7565,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7530,
											"end": 7565,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7530,
											"end": 7565,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7530,
											"end": 7565,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7530,
											"end": 7565,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7530,
											"end": 7565,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7530,
											"end": 7565,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 7530,
											"end": 7565,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7530,
											"end": 7565,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 7530,
											"end": 7565,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7530,
											"end": 7565,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7530,
											"end": 7565,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 7530,
											"end": 7565,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 7530,
											"end": 7565,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7530,
											"end": 7565,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7530,
											"end": 7565,
											"name": "tag",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 7530,
											"end": 7565,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7530,
											"end": 7565,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7194,
											"end": 7687,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 7194,
											"end": 7687,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7194,
											"end": 7687,
											"name": "tag",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 7194,
											"end": 7687,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7637,
											"end": 7676,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7637,
											"end": 7676,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7637,
											"end": 7661,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7637,
											"end": 7661,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7637,
											"end": 7661,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7637,
											"end": 7676,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7637,
											"end": 7676,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7637,
											"end": 7676,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 7637,
											"end": 7676,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 7637,
											"end": 7676,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7662,
											"end": 7675,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7662,
											"end": 7675,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7637,
											"end": 7676,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7637,
											"end": 7676,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7637,
											"end": 7676,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7637,
											"end": 7676,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7662,
											"end": 7675,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7637,
											"end": 7661,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 7637,
											"end": 7676,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 7637,
											"end": 7676,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 7637,
											"end": 7676,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 7637,
											"end": 7676,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7637,
											"end": 7676,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7637,
											"end": 7676,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7637,
											"end": 7676,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7637,
											"end": 7676,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7637,
											"end": 7676,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7637,
											"end": 7676,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7637,
											"end": 7676,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 7637,
											"end": 7676,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7637,
											"end": 7676,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 7637,
											"end": 7676,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7637,
											"end": 7676,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7637,
											"end": 7676,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 7637,
											"end": 7676,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 7637,
											"end": 7676,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7637,
											"end": 7676,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7637,
											"end": 7676,
											"name": "tag",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 7637,
											"end": 7676,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7637,
											"end": 7676,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7194,
											"end": 7687,
											"name": "tag",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 7194,
											"end": 7687,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7697,
											"end": 7725,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7697,
											"end": 7725,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7728,
											"end": 7729,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7697,
											"end": 7725,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7697,
											"end": 7725,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7697,
											"end": 7725,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7697,
											"end": 7717,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 7697,
											"end": 7725,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7697,
											"end": 7725,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7697,
											"end": 7725,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7697,
											"end": 7725,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7697,
											"end": 7725,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7697,
											"end": 7725,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7697,
											"end": 7725,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7697,
											"end": 7725,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7697,
											"end": 7729,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7697,
											"end": 7729,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7697,
											"end": 7729,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 7740,
											"end": 7749,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 7740,
											"end": 7757,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7740,
											"end": 7757,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7740,
											"end": 7757,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7740,
											"end": 7757,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7740,
											"end": 7757,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7740,
											"end": 7761,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7740,
											"end": 7761,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7740,
											"end": 7761,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7740,
											"end": 7761,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 7778,
											"end": 7837,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7778,
											"end": 7837,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5299,
											"end": 5324,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5299,
											"end": 5324,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5299,
											"end": 5324,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5340,
											"end": 5358,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5340,
											"end": 5358,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5340,
											"end": 5358,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5333,
											"end": 5367,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5333,
											"end": 5367,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5333,
											"end": 5367,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7821,
											"end": 7836,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 5383,
											"end": 5401,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5383,
											"end": 5401,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5383,
											"end": 5401,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5376,
											"end": 5410,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7778,
											"end": 7837,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7778,
											"end": 7837,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7778,
											"end": 7837,
											"name": "PUSH",
											"source": 0,
											"value": "753014CC7945CB3C93016ECB5BC2A66E26D69971A934FCFE2A882794CB344827"
										},
										{
											"begin": 7778,
											"end": 7837,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7778,
											"end": 7837,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7778,
											"end": 7837,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7778,
											"end": 7837,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5287,
											"end": 5289,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 7778,
											"end": 7837,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7778,
											"end": 7837,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7778,
											"end": 7837,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 7854,
											"end": 7858,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7847,
											"end": 7858,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 7847,
											"end": 7858,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7847,
											"end": 7858,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7847,
											"end": 7858,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7847,
											"end": 7858,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7847,
											"end": 7858,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6694,
											"end": 7865,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6694,
											"end": 7865,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5619,
											"end": 6688,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 5619,
											"end": 6688,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5815,
											"end": 5833,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 5815,
											"end": 5833,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5684,
											"end": 5688,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5684,
											"end": 5688,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5737,
											"end": 5747,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 5737,
											"end": 5747,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5776,
											"end": 5785,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 5776,
											"end": 5785,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5804,
											"end": 5833,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5804,
											"end": 5833,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 5804,
											"end": 5833,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5796,
											"end": 5874,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 5796,
											"end": 5874,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5796,
											"end": 5874,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5796,
											"end": 5874,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5796,
											"end": 5874,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5796,
											"end": 5874,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5623,
											"end": 5625,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5796,
											"end": 5874,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5796,
											"end": 5874,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5796,
											"end": 5874,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5605,
											"end": 5626,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5662,
											"end": 5664,
											"name": "PUSH",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 5642,
											"end": 5660,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5642,
											"end": 5660,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5642,
											"end": 5660,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5635,
											"end": 5665,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5701,
											"end": 5727,
											"name": "PUSH",
											"source": 1,
											"value": "5374616B696E6720636F696E73206E6F7420656E6F7567680000000000000000"
										},
										{
											"begin": 5681,
											"end": 5699,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5681,
											"end": 5699,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5681,
											"end": 5699,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5674,
											"end": 5728,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5745,
											"end": 5763,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 5745,
											"end": 5763,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5796,
											"end": 5874,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 5421,
											"end": 5769,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5796,
											"end": 5874,
											"name": "tag",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 5796,
											"end": 5874,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5934,
											"end": 5944,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5934,
											"end": 5944,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5907,
											"end": 5923,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 5907,
											"end": 5930,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5934,
											"end": 5944,
											"name": "PUSH",
											"source": 0,
											"value": "FFFF"
										},
										{
											"begin": 5934,
											"end": 5944,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5934,
											"end": 5944,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5934,
											"end": 5944,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 5885,
											"end": 5994,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 5885,
											"end": 5994,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5885,
											"end": 5994,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5885,
											"end": 5994,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5885,
											"end": 5994,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5885,
											"end": 5994,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5976,
											"end": 5978,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5885,
											"end": 5994,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5885,
											"end": 5994,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5885,
											"end": 5994,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5958,
											"end": 5979,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6015,
											"end": 6017,
											"name": "PUSH",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 5995,
											"end": 6013,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5995,
											"end": 6013,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5995,
											"end": 6013,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5988,
											"end": 6018,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6054,
											"end": 6080,
											"name": "PUSH",
											"source": 1,
											"value": "43616E2774207374616B6520736C6F742069732066756C6C0000000000000000"
										},
										{
											"begin": 6034,
											"end": 6052,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 6034,
											"end": 6052,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6034,
											"end": 6052,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6027,
											"end": 6081,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6098,
											"end": 6116,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 6098,
											"end": 6116,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5885,
											"end": 5994,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 5774,
											"end": 6122,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5885,
											"end": 5994,
											"name": "tag",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 5885,
											"end": 5994,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6065,
											"end": 6083,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6065,
											"end": 6083,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6065,
											"end": 6083,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6065,
											"end": 6083,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6065,
											"end": 6083,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6065,
											"end": 6083,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6065,
											"end": 6075,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 6065,
											"end": 6083,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6065,
											"end": 6083,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6065,
											"end": 6083,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6065,
											"end": 6083,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6065,
											"end": 6083,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6065,
											"end": 6083,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6065,
											"end": 6088,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6065,
											"end": 6088,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6061,
											"end": 6398,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 6061,
											"end": 6398,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6107,
											"end": 6121,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 6107,
											"end": 6121,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6125,
											"end": 6126,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6107,
											"end": 6126,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6104,
											"end": 6205,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 6104,
											"end": 6205,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6175,
											"end": 6190,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 6158,
											"end": 6172,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 6158,
											"end": 6190,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6104,
											"end": 6205,
											"name": "tag",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 6104,
											"end": 6205,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6249,
											"end": 6263,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 6249,
											"end": 6263,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6218,
											"end": 6246,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6218,
											"end": 6246,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6218,
											"end": 6246,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6218,
											"end": 6246,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6218,
											"end": 6246,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6218,
											"end": 6246,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6218,
											"end": 6238,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 6218,
											"end": 6246,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6218,
											"end": 6246,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6218,
											"end": 6246,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6218,
											"end": 6246,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6218,
											"end": 6246,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6218,
											"end": 6246,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6218,
											"end": 6246,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6218,
											"end": 6246,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6218,
											"end": 6263,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6218,
											"end": 6263,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6218,
											"end": 6263,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6277,
											"end": 6286,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 6277,
											"end": 6294,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6277,
											"end": 6294,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6277,
											"end": 6294,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6277,
											"end": 6294,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6277,
											"end": 6294,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6277,
											"end": 6311,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6061,
											"end": 6398,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 6061,
											"end": 6398,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6061,
											"end": 6398,
											"name": "tag",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 6061,
											"end": 6398,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6358,
											"end": 6387,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 6380,
											"end": 6386,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6358,
											"end": 6379,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 6358,
											"end": 6387,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6358,
											"end": 6387,
											"name": "tag",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 6358,
											"end": 6387,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6358,
											"end": 6387,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6061,
											"end": 6398,
											"name": "tag",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 6061,
											"end": 6398,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6429,
											"end": 6447,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6429,
											"end": 6447,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6429,
											"end": 6447,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6429,
											"end": 6447,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6429,
											"end": 6447,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6429,
											"end": 6447,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6429,
											"end": 6439,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 6429,
											"end": 6447,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6429,
											"end": 6447,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6429,
											"end": 6447,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6429,
											"end": 6447,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6429,
											"end": 6447,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6429,
											"end": 6447,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6429,
											"end": 6459,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 6429,
											"end": 6459,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6451,
											"end": 6458,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6451,
											"end": 6458,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6429,
											"end": 6459,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 6429,
											"end": 6459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6429,
											"end": 6459,
											"name": "tag",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 6429,
											"end": 6459,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6408,
											"end": 6426,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6408,
											"end": 6426,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6408,
											"end": 6426,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6408,
											"end": 6426,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6408,
											"end": 6426,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6408,
											"end": 6426,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6408,
											"end": 6418,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 6408,
											"end": 6426,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6408,
											"end": 6426,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6408,
											"end": 6426,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6408,
											"end": 6426,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6408,
											"end": 6426,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6408,
											"end": 6459,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6475,
											"end": 6497,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 6419,
											"end": 6425,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6475,
											"end": 6489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 6475,
											"end": 6497,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6475,
											"end": 6497,
											"name": "tag",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 6475,
											"end": 6497,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6470,
											"end": 6557,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 6470,
											"end": 6557,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6517,
											"end": 6533,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 6517,
											"end": 6546,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6517,
											"end": 6546,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6517,
											"end": 6546,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6517,
											"end": 6546,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6517,
											"end": 6546,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6517,
											"end": 6546,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6517,
											"end": 6546,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 6517,
											"end": 6546,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6517,
											"end": 6546,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6517,
											"end": 6546,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6517,
											"end": 6546,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6517,
											"end": 6546,
											"name": "PUSH",
											"source": 0,
											"value": "36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB0"
										},
										{
											"begin": 6517,
											"end": 6546,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6517,
											"end": 6546,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6517,
											"end": 6546,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6517,
											"end": 6546,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6517,
											"end": 6546,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6517,
											"end": 6546,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6517,
											"end": 6546,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 6517,
											"end": 6546,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6517,
											"end": 6546,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6470,
											"end": 6557,
											"name": "tag",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 6470,
											"end": 6557,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6594,
											"end": 6601,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6580,
											"end": 6590,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 6580,
											"end": 6590,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6580,
											"end": 6602,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 6580,
											"end": 6602,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6580,
											"end": 6602,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6580,
											"end": 6602,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 6580,
											"end": 6602,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6580,
											"end": 6602,
											"name": "tag",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 6580,
											"end": 6602,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6567,
											"end": 6577,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 6567,
											"end": 6602,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6660,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6618,
											"end": 6660,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6660,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3290,
											"end": 3315,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3290,
											"end": 3315,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3290,
											"end": 3315,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6644,
											"end": 6659,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 3346,
											"end": 3348,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3331,
											"end": 3349,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3331,
											"end": 3349,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3324,
											"end": 3358,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6618,
											"end": 6660,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6660,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6660,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6660,
											"name": "PUSH",
											"source": 0,
											"value": "A0D1FA51224FB08C7C0B48D481448AD6A31C945D1A68CAC8758CAC3A92D5001C"
										},
										{
											"begin": 6618,
											"end": 6660,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3263,
											"end": 3281,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6618,
											"end": 6660,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6618,
											"end": 6660,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6660,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6660,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6660,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6660,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6660,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 6677,
											"end": 6681,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6670,
											"end": 6681,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6670,
											"end": 6681,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6670,
											"end": 6681,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6670,
											"end": 6681,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5619,
											"end": 6688,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5619,
											"end": 6688,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10861,
											"end": 11091,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 10861,
											"end": 11091,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10998,
											"end": 11015,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 10998,
											"end": 11015,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10978,
											"end": 10995,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10978,
											"end": 10995,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10924,
											"end": 10938,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10978,
											"end": 10995,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10978,
											"end": 10995,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10978,
											"end": 10995,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10978,
											"end": 10987,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 10978,
											"end": 10995,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10978,
											"end": 10995,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10978,
											"end": 10995,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10978,
											"end": 10995,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10978,
											"end": 10995,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10978,
											"end": 10995,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10924,
											"end": 10938,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10924,
											"end": 10938,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10978,
											"end": 11015,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 10978,
											"end": 11015,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10998,
											"end": 11015,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10998,
											"end": 11015,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10998,
											"end": 11015,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10998,
											"end": 11015,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10978,
											"end": 11015,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 10978,
											"end": 11015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10978,
											"end": 11015,
											"name": "tag",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 10978,
											"end": 11015,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10958,
											"end": 10973,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 10958,
											"end": 11016,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 10958,
											"end": 11016,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10958,
											"end": 11041,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10958,
											"end": 11041,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10958,
											"end": 11041,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 10958,
											"end": 11041,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10958,
											"end": 11041,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11040,
											"end": 11041,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11020,
											"end": 11037,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 11020,
											"end": 11037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11020,
											"end": 11041,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 10958,
											"end": 11041,
											"name": "tag",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 10958,
											"end": 11041,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10955,
											"end": 11085,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10955,
											"end": 11085,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 10955,
											"end": 11085,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11069,
											"end": 11073,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 10955,
											"end": 11085,
											"name": "tag",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 10955,
											"end": 11085,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10861,
											"end": 11091,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10861,
											"end": 11091,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10861,
											"end": 11091,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10861,
											"end": 11091,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14304,
											"end": 14525,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 14304,
											"end": 14525,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1748,
											"end": 1761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 1748,
											"end": 1759,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 1748,
											"end": 1761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1748,
											"end": 1761,
											"name": "tag",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 1748,
											"end": 1761,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14406,
											"end": 14434,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14406,
											"end": 14434,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14398,
											"end": 14455,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 14398,
											"end": 14455,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14398,
											"end": 14455,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14398,
											"end": 14455,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14398,
											"end": 14455,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14398,
											"end": 14455,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6329,
											"end": 6331,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14398,
											"end": 14455,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14398,
											"end": 14455,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14398,
											"end": 14455,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6311,
											"end": 6332,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6368,
											"end": 6370,
											"name": "PUSH",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 6348,
											"end": 6366,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6348,
											"end": 6366,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6348,
											"end": 6366,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6341,
											"end": 6371,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1A5B9D985B1A590818DBDB9D1C9858DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "82"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6387,
											"end": 6405,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 6387,
											"end": 6405,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6387,
											"end": 6405,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6380,
											"end": 6426,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6443,
											"end": 6461,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 6443,
											"end": 6461,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14398,
											"end": 14455,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 6127,
											"end": 6467,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14398,
											"end": 14455,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 14398,
											"end": 14455,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14466,
											"end": 14481,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14466,
											"end": 14518,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14466,
											"end": 14518,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 14466,
											"end": 14518,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14466,
											"end": 14518,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14466,
											"end": 14518,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14466,
											"end": 14518,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14466,
											"end": 14518,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14466,
											"end": 14518,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14466,
											"end": 14518,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14466,
											"end": 14518,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14466,
											"end": 14518,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 14466,
											"end": 14518,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14466,
											"end": 14518,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 14304,
											"end": 14525,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12027,
											"end": 12284,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 12027,
											"end": 12284,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12085,
											"end": 12089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12085,
											"end": 12089,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12101,
											"end": 12255,
											"name": "tag",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 12101,
											"end": 12255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12125,
											"end": 12141,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 12125,
											"end": 12148,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12121,
											"end": 12148,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12121,
											"end": 12148,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 12101,
											"end": 12255,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12101,
											"end": 12255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 12101,
											"end": 12255,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12196,
											"end": 12199,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12173,
											"end": 12199,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12173,
											"end": 12189,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 12190,
											"end": 12191,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12173,
											"end": 12192,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12173,
											"end": 12192,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12173,
											"end": 12192,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12173,
											"end": 12192,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 12173,
											"end": 12192,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 12173,
											"end": 12192,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12173,
											"end": 12192,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 12173,
											"end": 12192,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 12173,
											"end": 12192,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12173,
											"end": 12192,
											"name": "tag",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 12173,
											"end": 12192,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12173,
											"end": 12192,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12173,
											"end": 12192,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12173,
											"end": 12192,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12173,
											"end": 12192,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12173,
											"end": 12192,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12173,
											"end": 12192,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12173,
											"end": 12192,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12173,
											"end": 12192,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12173,
											"end": 12192,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12173,
											"end": 12192,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12173,
											"end": 12192,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12173,
											"end": 12199,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12169,
											"end": 12245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 12169,
											"end": 12245,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12226,
											"end": 12230,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 12226,
											"end": 12230,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12027,
											"end": 12284,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12027,
											"end": 12284,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12169,
											"end": 12245,
											"name": "tag",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 12169,
											"end": 12245,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12150,
											"end": 12153,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12150,
											"end": 12153,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 12150,
											"end": 12153,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12150,
											"end": 12153,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 12150,
											"end": 12153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12150,
											"end": 12153,
											"name": "tag",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 12150,
											"end": 12153,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12150,
											"end": 12153,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12150,
											"end": 12153,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12150,
											"end": 12153,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12101,
											"end": 12255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 12101,
											"end": 12255,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12101,
											"end": 12255,
											"name": "tag",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 12101,
											"end": 12255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12272,
											"end": 12277,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12272,
											"end": 12277,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12027,
											"end": 12284,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12027,
											"end": 12284,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2485,
											"end": 2586,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 2485,
											"end": 2586,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1748,
											"end": 1761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 1748,
											"end": 1759,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 1748,
											"end": 1761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1748,
											"end": 1761,
											"name": "tag",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 1748,
											"end": 1761,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2549,
											"end": 2579,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 2576,
											"end": 2577,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2549,
											"end": 2567,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 2549,
											"end": 2579,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2549,
											"end": 2579,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 2549,
											"end": 2579,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2485,
											"end": 2586,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7871,
											"end": 9045,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 7871,
											"end": 9045,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8019,
											"end": 8047,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8019,
											"end": 8047,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7933,
											"end": 7937,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8019,
											"end": 8047,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8019,
											"end": 8047,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8019,
											"end": 8047,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8019,
											"end": 8039,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 8019,
											"end": 8047,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8019,
											"end": 8047,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8019,
											"end": 8047,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8019,
											"end": 8047,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8019,
											"end": 8047,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8019,
											"end": 8047,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7933,
											"end": 7937,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7933,
											"end": 7937,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7933,
											"end": 7937,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7933,
											"end": 7937,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8019,
											"end": 8051,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8016,
											"end": 8165,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 8016,
											"end": 8165,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8136,
											"end": 8164,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8136,
											"end": 8164,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8115,
											"end": 8165,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8136,
											"end": 8164,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8136,
											"end": 8164,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8136,
											"end": 8164,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8136,
											"end": 8156,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 8136,
											"end": 8164,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8136,
											"end": 8164,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8136,
											"end": 8164,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8136,
											"end": 8164,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8136,
											"end": 8164,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8136,
											"end": 8164,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8136,
											"end": 8164,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8136,
											"end": 8164,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8136,
											"end": 8164,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8115,
											"end": 8165,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8115,
											"end": 8165,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8115,
											"end": 8135,
											"name": "PUSH",
											"source": 0,
											"value": "E"
										},
										{
											"begin": 8115,
											"end": 8165,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8115,
											"end": 8165,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8115,
											"end": 8165,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8115,
											"end": 8165,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8115,
											"end": 8165,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8115,
											"end": 8165,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8115,
											"end": 8165,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8111,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 8097,
											"end": 8111,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8076,
											"end": 8112,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8076,
											"end": 8112,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8076,
											"end": 8112,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8076,
											"end": 8112,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8076,
											"end": 8112,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8076,
											"end": 8165,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 8076,
											"end": 8165,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8115,
											"end": 8165,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8076,
											"end": 8165,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 8076,
											"end": 8165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8076,
											"end": 8165,
											"name": "tag",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 8076,
											"end": 8165,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8061,
											"end": 8165,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8061,
											"end": 8165,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8016,
											"end": 8165,
											"name": "tag",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 8016,
											"end": 8165,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8259,
											"end": 8279,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8259,
											"end": 8279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8238,
											"end": 8280,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8259,
											"end": 8279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8259,
											"end": 8279,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8259,
											"end": 8279,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8259,
											"end": 8271,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 8259,
											"end": 8279,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8259,
											"end": 8279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8259,
											"end": 8279,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8259,
											"end": 8279,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8259,
											"end": 8279,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8259,
											"end": 8279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8259,
											"end": 8279,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8259,
											"end": 8279,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8259,
											"end": 8279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8238,
											"end": 8280,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8238,
											"end": 8280,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8238,
											"end": 8258,
											"name": "PUSH",
											"source": 0,
											"value": "E"
										},
										{
											"begin": 8238,
											"end": 8280,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8238,
											"end": 8280,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8238,
											"end": 8280,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8238,
											"end": 8280,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8238,
											"end": 8280,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8238,
											"end": 8280,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8238,
											"end": 8280,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8220,
											"end": 8234,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 8220,
											"end": 8234,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8199,
											"end": 8235,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8199,
											"end": 8235,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8199,
											"end": 8235,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8199,
											"end": 8235,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8199,
											"end": 8235,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8199,
											"end": 8280,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 8199,
											"end": 8280,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8238,
											"end": 8280,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8199,
											"end": 8280,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 8199,
											"end": 8280,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8199,
											"end": 8280,
											"name": "tag",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 8199,
											"end": 8280,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8335,
											"end": 8350,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8335,
											"end": 8350,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8335,
											"end": 8388,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8335,
											"end": 8388,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "64877981"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8335,
											"end": 8388,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8335,
											"end": 8388,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6974,
											"end": 6989,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 6974,
											"end": 6989,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6974,
											"end": 6989,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8335,
											"end": 8388,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8335,
											"end": 8388,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8335,
											"end": 8388,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6956,
											"end": 6990,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6956,
											"end": 6990,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6956,
											"end": 6990,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7006,
											"end": 7024,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7006,
											"end": 7024,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7006,
											"end": 7024,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6999,
											"end": 7042,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8175,
											"end": 8280,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8175,
											"end": 8280,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8292,
											"end": 8321,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8292,
											"end": 8321,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8335,
											"end": 8350,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8335,
											"end": 8350,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8335,
											"end": 8350,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8335,
											"end": 8350,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8335,
											"end": 8373,
											"name": "PUSH",
											"source": 0,
											"value": "64877981"
										},
										{
											"begin": 8335,
											"end": 8373,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6891,
											"end": 6909,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 6891,
											"end": 6909,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8335,
											"end": 8388,
											"name": "PUSH",
											"source": 0,
											"value": "C0"
										},
										{
											"begin": 8335,
											"end": 8388,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8335,
											"end": 8388,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8335,
											"end": 8388,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8335,
											"end": 8388,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8335,
											"end": 8388,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8335,
											"end": 8388,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8335,
											"end": 8388,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 8335,
											"end": 8388,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 8335,
											"end": 8388,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 8335,
											"end": 8388,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8335,
											"end": 8388,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8335,
											"end": 8388,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8335,
											"end": 8388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 8335,
											"end": 8388,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8335,
											"end": 8388,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 8335,
											"end": 8388,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8335,
											"end": 8388,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8335,
											"end": 8388,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 8335,
											"end": 8388,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 8335,
											"end": 8388,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8335,
											"end": 8388,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8335,
											"end": 8388,
											"name": "tag",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 8335,
											"end": 8388,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8335,
											"end": 8388,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8335,
											"end": 8388,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8335,
											"end": 8388,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8335,
											"end": 8388,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8335,
											"end": 8388,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8335,
											"end": 8388,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8335,
											"end": 8388,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 8335,
											"end": 8388,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 8335,
											"end": 8388,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 8335,
											"end": 8388,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 8335,
											"end": 8388,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8335,
											"end": 8388,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8335,
											"end": 8388,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8335,
											"end": 8388,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8335,
											"end": 8388,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8335,
											"end": 8388,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8335,
											"end": 8388,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8335,
											"end": 8388,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8335,
											"end": 8388,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8335,
											"end": 8388,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8335,
											"end": 8388,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8335,
											"end": 8388,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8335,
											"end": 8388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 8335,
											"end": 8388,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8335,
											"end": 8388,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8335,
											"end": 8388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 8335,
											"end": 8388,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8335,
											"end": 8388,
											"name": "tag",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 8335,
											"end": 8388,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8291,
											"end": 8388,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8291,
											"end": 8388,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8291,
											"end": 8388,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8291,
											"end": 8388,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8291,
											"end": 8388,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8291,
											"end": 8388,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8291,
											"end": 8388,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8443,
											"end": 8444,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8418,
											"end": 8439,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8403,
											"end": 8415,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8403,
											"end": 8439,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 8403,
											"end": 8439,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8403,
											"end": 8439,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8403,
											"end": 8439,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 8403,
											"end": 8439,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8403,
											"end": 8439,
											"name": "tag",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 8403,
											"end": 8439,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8402,
											"end": 8444,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 8399,
											"end": 9018,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8399,
											"end": 9018,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 8399,
											"end": 9018,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8471,
											"end": 8499,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8471,
											"end": 8499,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8502,
											"end": 8503,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8471,
											"end": 8499,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8471,
											"end": 8499,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8471,
											"end": 8499,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8471,
											"end": 8491,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 8471,
											"end": 8499,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8471,
											"end": 8499,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8471,
											"end": 8499,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8471,
											"end": 8499,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8471,
											"end": 8499,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8471,
											"end": 8499,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8471,
											"end": 8503,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8468,
											"end": 8562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 8468,
											"end": 8562,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8548,
											"end": 8562,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 8548,
											"end": 8562,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8517,
											"end": 8545,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 8517,
											"end": 8545,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8517,
											"end": 8545,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8517,
											"end": 8545,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8517,
											"end": 8545,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8517,
											"end": 8545,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8517,
											"end": 8537,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 8517,
											"end": 8545,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8517,
											"end": 8545,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8517,
											"end": 8545,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8517,
											"end": 8545,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8517,
											"end": 8545,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8517,
											"end": 8562,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8468,
											"end": 8562,
											"name": "tag",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 8468,
											"end": 8562,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8579,
											"end": 8594,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8579,
											"end": 8594,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8579,
											"end": 8624,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8579,
											"end": 8624,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0744E3D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8579,
											"end": 8624,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8579,
											"end": 8624,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6974,
											"end": 6989,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 6974,
											"end": 6989,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6974,
											"end": 6989,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8579,
											"end": 8624,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8579,
											"end": 8624,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8579,
											"end": 8624,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6956,
											"end": 6990,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6956,
											"end": 6990,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6956,
											"end": 6990,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7006,
											"end": 7024,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7006,
											"end": 7024,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7006,
											"end": 7024,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6999,
											"end": 7042,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8627,
											"end": 8628,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8627,
											"end": 8628,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8579,
											"end": 8594,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8579,
											"end": 8594,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8579,
											"end": 8609,
											"name": "PUSH",
											"source": 0,
											"value": "D0744E3D"
										},
										{
											"begin": 8579,
											"end": 8609,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6891,
											"end": 6909,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 6891,
											"end": 6909,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8579,
											"end": 8624,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8579,
											"end": 8624,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8579,
											"end": 8624,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8579,
											"end": 8624,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8579,
											"end": 8624,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8579,
											"end": 8624,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8579,
											"end": 8624,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8579,
											"end": 8624,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 8579,
											"end": 8624,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 8579,
											"end": 8624,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 8579,
											"end": 8624,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8579,
											"end": 8624,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8579,
											"end": 8624,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8579,
											"end": 8624,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 8579,
											"end": 8624,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8579,
											"end": 8624,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 8579,
											"end": 8624,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8579,
											"end": 8624,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8579,
											"end": 8624,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 8579,
											"end": 8624,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 8579,
											"end": 8624,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8579,
											"end": 8624,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8579,
											"end": 8624,
											"name": "tag",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 8579,
											"end": 8624,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8579,
											"end": 8624,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8579,
											"end": 8624,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8579,
											"end": 8624,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8579,
											"end": 8624,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8579,
											"end": 8624,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8579,
											"end": 8624,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8579,
											"end": 8624,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 8579,
											"end": 8624,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 8579,
											"end": 8624,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 8579,
											"end": 8624,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 8579,
											"end": 8624,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8579,
											"end": 8624,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8579,
											"end": 8624,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8579,
											"end": 8624,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8579,
											"end": 8624,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8579,
											"end": 8624,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8579,
											"end": 8624,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8579,
											"end": 8624,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8579,
											"end": 8624,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8579,
											"end": 8624,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8579,
											"end": 8624,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8579,
											"end": 8624,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8579,
											"end": 8624,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 8579,
											"end": 8624,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8579,
											"end": 8624,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8579,
											"end": 8624,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 8579,
											"end": 8624,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8579,
											"end": 8624,
											"name": "tag",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 8579,
											"end": 8624,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8579,
											"end": 8628,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 8576,
											"end": 8679,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8576,
											"end": 8679,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 8576,
											"end": 8679,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8665,
											"end": 8679,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 8665,
											"end": 8679,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8642,
											"end": 8662,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 8642,
											"end": 8662,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8642,
											"end": 8662,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8642,
											"end": 8662,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8642,
											"end": 8662,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8642,
											"end": 8662,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8642,
											"end": 8654,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 8642,
											"end": 8662,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8642,
											"end": 8662,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8642,
											"end": 8662,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8642,
											"end": 8662,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8642,
											"end": 8662,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8642,
											"end": 8679,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8576,
											"end": 8679,
											"name": "tag",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 8576,
											"end": 8679,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8707,
											"end": 8725,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8707,
											"end": 8725,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8693,
											"end": 8704,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8707,
											"end": 8725,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8707,
											"end": 8725,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8707,
											"end": 8725,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8707,
											"end": 8717,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 8707,
											"end": 8725,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8707,
											"end": 8725,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8707,
											"end": 8725,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8707,
											"end": 8725,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8707,
											"end": 8725,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8707,
											"end": 8725,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8743,
											"end": 8762,
											"name": "PUSH",
											"source": 0,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 8743,
											"end": 8762,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8707,
											"end": 8740,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 8707,
											"end": 8740,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8728,
											"end": 8740,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 8728,
											"end": 8740,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8707,
											"end": 8740,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 8707,
											"end": 8740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8707,
											"end": 8740,
											"name": "tag",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 8707,
											"end": 8740,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8707,
											"end": 8762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "289"
										},
										{
											"begin": 8707,
											"end": 8762,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8707,
											"end": 8762,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8707,
											"end": 8762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 8707,
											"end": 8762,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8707,
											"end": 8762,
											"name": "tag",
											"source": 0,
											"value": "289"
										},
										{
											"begin": 8707,
											"end": 8762,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8693,
											"end": 8762,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8776,
											"end": 8790,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8841,
											"end": 8860,
											"name": "PUSH",
											"source": 0,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 8793,
											"end": 8838,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 8817,
											"end": 8838,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8793,
											"end": 8814,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8793,
											"end": 8838,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 8793,
											"end": 8838,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8793,
											"end": 8838,
											"name": "tag",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 8793,
											"end": 8838,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8793,
											"end": 8860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 8793,
											"end": 8860,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8793,
											"end": 8860,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8793,
											"end": 8860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 8793,
											"end": 8860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8793,
											"end": 8860,
											"name": "tag",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 8793,
											"end": 8860,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8776,
											"end": 8860,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8874,
											"end": 8898,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 8874,
											"end": 8898,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8874,
											"end": 8918,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 8899,
											"end": 8917,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 8776,
											"end": 8860,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8899,
											"end": 8905,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8899,
											"end": 8917,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 8899,
											"end": 8917,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8899,
											"end": 8917,
											"name": "tag",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 8899,
											"end": 8917,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8874,
											"end": 8918,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8874,
											"end": 8918,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8874,
											"end": 8918,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8874,
											"end": 8918,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8874,
											"end": 8918,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8874,
											"end": 8918,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8874,
											"end": 8918,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 8874,
											"end": 8918,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8874,
											"end": 8918,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8874,
											"end": 8918,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8874,
											"end": 8918,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8874,
											"end": 8918,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8874,
											"end": 8918,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8874,
											"end": 8918,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 8874,
											"end": 8918,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 8874,
											"end": 8918,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 8874,
											"end": 8918,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 8874,
											"end": 8918,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8874,
											"end": 8918,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8874,
											"end": 8918,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8874,
											"end": 8918,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8874,
											"end": 8918,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8874,
											"end": 8918,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8874,
											"end": 8918,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8874,
											"end": 8918,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 8874,
											"end": 8918,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8874,
											"end": 8918,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 8874,
											"end": 8918,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8874,
											"end": 8918,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8874,
											"end": 8918,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 8874,
											"end": 8918,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 8874,
											"end": 8918,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8874,
											"end": 8918,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8874,
											"end": 8918,
											"name": "tag",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 8874,
											"end": 8918,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8937,
											"end": 9007,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 8937,
											"end": 9007,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8937,
											"end": 9007,
											"name": "PUSH",
											"source": 0,
											"value": "F03271DA9252F83CABF8BAF9C18589849BDADB0AD1F6268432D871380624B9E6"
										},
										{
											"begin": 8970,
											"end": 8988,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 8979,
											"end": 8988,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8970,
											"end": 8976,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8970,
											"end": 8988,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 8970,
											"end": 8988,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8970,
											"end": 8988,
											"name": "tag",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 8970,
											"end": 8988,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8937,
											"end": 9007,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8937,
											"end": 9007,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8937,
											"end": 9007,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3290,
											"end": 3315,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3290,
											"end": 3315,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3290,
											"end": 3315,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8991,
											"end": 9006,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 3346,
											"end": 3348,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3331,
											"end": 3349,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3331,
											"end": 3349,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3324,
											"end": 3358,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3263,
											"end": 3281,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8937,
											"end": 9007,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8937,
											"end": 9007,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8937,
											"end": 9007,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8937,
											"end": 9007,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8937,
											"end": 9007,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8937,
											"end": 9007,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8937,
											"end": 9007,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 8454,
											"end": 9018,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8454,
											"end": 9018,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8399,
											"end": 9018,
											"name": "tag",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 8399,
											"end": 9018,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9034,
											"end": 9038,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9034,
											"end": 9038,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 7871,
											"end": 9045,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7871,
											"end": 9045,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9132,
											"end": 10242,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 9132,
											"end": 10242,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9207,
											"end": 9221,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9236,
											"end": 9248,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 9236,
											"end": 9248,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9224,
											"end": 9233,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 9224,
											"end": 9248,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 9224,
											"end": 9248,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9224,
											"end": 9248,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9224,
											"end": 9248,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 9224,
											"end": 9248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9224,
											"end": 9248,
											"name": "tag",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 9224,
											"end": 9248,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9207,
											"end": 9248,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9207,
											"end": 9248,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9260,
											"end": 9279,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9284,
											"end": 9330,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "300"
										},
										{
											"begin": 9327,
											"end": 9328,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9284,
											"end": 9318,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "301"
										},
										{
											"begin": 9284,
											"end": 9330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9284,
											"end": 9330,
											"name": "tag",
											"source": 0,
											"value": "300"
										},
										{
											"begin": 9284,
											"end": 9330,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9259,
											"end": 9330,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9259,
											"end": 9330,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9259,
											"end": 9330,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9345,
											"end": 9382,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9393,
											"end": 9408,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9393,
											"end": 9408,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9393,
											"end": 9408,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9393,
											"end": 9408,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9393,
											"end": 9408,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9393,
											"end": 9408,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 9393,
											"end": 9408,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 9393,
											"end": 9408,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9393,
											"end": 9408,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9393,
											"end": 9408,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9393,
											"end": 9428,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9393,
											"end": 9428,
											"name": "PUSH",
											"source": 0,
											"value": "3F8DC65A"
										},
										{
											"begin": 9393,
											"end": 9430,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9393,
											"end": 9430,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9393,
											"end": 9430,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9393,
											"end": 9430,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9393,
											"end": 9430,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9393,
											"end": 9430,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 9393,
											"end": 9430,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 9393,
											"end": 9430,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9393,
											"end": 9430,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9393,
											"end": 9430,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9393,
											"end": 9430,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9393,
											"end": 9430,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9393,
											"end": 9430,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9393,
											"end": 9430,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9393,
											"end": 9430,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9393,
											"end": 9430,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9393,
											"end": 9430,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9393,
											"end": 9430,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9393,
											"end": 9430,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 9393,
											"end": 9430,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 9393,
											"end": 9430,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 9393,
											"end": 9430,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9393,
											"end": 9430,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9393,
											"end": 9430,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9393,
											"end": 9430,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "303"
										},
										{
											"begin": 9393,
											"end": 9430,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9393,
											"end": 9430,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9393,
											"end": 9430,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9393,
											"end": 9430,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9393,
											"end": 9430,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 9393,
											"end": 9430,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9393,
											"end": 9430,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9393,
											"end": 9430,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9393,
											"end": 9430,
											"name": "tag",
											"source": 0,
											"value": "303"
										},
										{
											"begin": 9393,
											"end": 9430,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9393,
											"end": 9430,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9393,
											"end": 9430,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9393,
											"end": 9430,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9393,
											"end": 9430,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9393,
											"end": 9430,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9393,
											"end": 9430,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9393,
											"end": 9430,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9393,
											"end": 9430,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9393,
											"end": 9430,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9393,
											"end": 9430,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 9393,
											"end": 9430,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 9393,
											"end": 9430,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9393,
											"end": 9430,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9393,
											"end": 9430,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9393,
											"end": 9430,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9393,
											"end": 9430,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9393,
											"end": 9430,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9393,
											"end": 9430,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9393,
											"end": 9430,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9393,
											"end": 9430,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9393,
											"end": 9430,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "304"
										},
										{
											"begin": 9393,
											"end": 9430,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9393,
											"end": 9430,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9393,
											"end": 9430,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9393,
											"end": 9430,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9393,
											"end": 9430,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9393,
											"end": 9430,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "305"
										},
										{
											"begin": 9393,
											"end": 9430,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9393,
											"end": 9430,
											"name": "tag",
											"source": 0,
											"value": "304"
										},
										{
											"begin": 9393,
											"end": 9430,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9466,
											"end": 9493,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9466,
											"end": 9493,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9341,
											"end": 9430,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 9341,
											"end": 9430,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9466,
											"end": 9493,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9466,
											"end": 9493,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9440,
											"end": 9463,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9440,
											"end": 9463,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9440,
											"end": 9463,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9440,
											"end": 9463,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9548,
											"end": 9802,
											"name": "tag",
											"source": 0,
											"value": "306"
										},
										{
											"begin": 9548,
											"end": 9802,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9567,
											"end": 9582,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9563,
											"end": 9564,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9563,
											"end": 9582,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 9563,
											"end": 9582,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9563,
											"end": 9582,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 9548,
											"end": 9802,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9548,
											"end": 9802,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "307"
										},
										{
											"begin": 9548,
											"end": 9802,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9643,
											"end": 9658,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9643,
											"end": 9658,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9682,
											"end": 9705,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9682,
											"end": 9705,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9600,
											"end": 9629,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9600,
											"end": 9629,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9643,
											"end": 9658,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9643,
											"end": 9658,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9643,
											"end": 9681,
											"name": "PUSH",
											"source": 0,
											"value": "64877981"
										},
										{
											"begin": 9643,
											"end": 9681,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9682,
											"end": 9702,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 9682,
											"end": 9702,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9682,
											"end": 9705,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 9682,
											"end": 9705,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 9682,
											"end": 9705,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9682,
											"end": 9705,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9682,
											"end": 9705,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9682,
											"end": 9705,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 9682,
											"end": 9705,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "310"
										},
										{
											"begin": 9682,
											"end": 9705,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9682,
											"end": 9705,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "310"
										},
										{
											"begin": 9682,
											"end": 9705,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 9682,
											"end": 9705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9682,
											"end": 9705,
											"name": "tag",
											"source": 0,
											"value": "310"
										},
										{
											"begin": 9682,
											"end": 9705,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9682,
											"end": 9705,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9682,
											"end": 9705,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 9682,
											"end": 9705,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9682,
											"end": 9705,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9682,
											"end": 9705,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9682,
											"end": 9705,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9706,
											"end": 9726,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 9727,
											"end": 9728,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 9706,
											"end": 9729,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 9706,
											"end": 9729,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9706,
											"end": 9729,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9706,
											"end": 9729,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9706,
											"end": 9729,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9706,
											"end": 9729,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 9706,
											"end": 9729,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "312"
										},
										{
											"begin": 9706,
											"end": 9729,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9706,
											"end": 9729,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "312"
										},
										{
											"begin": 9706,
											"end": 9729,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 9706,
											"end": 9729,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9706,
											"end": 9729,
											"name": "tag",
											"source": 0,
											"value": "312"
										},
										{
											"begin": 9706,
											"end": 9729,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9706,
											"end": 9729,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9706,
											"end": 9729,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 9706,
											"end": 9729,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9706,
											"end": 9729,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9706,
											"end": 9729,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9706,
											"end": 9729,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9643,
											"end": 9730,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9643,
											"end": 9730,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9643,
											"end": 9730,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9643,
											"end": 9730,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9643,
											"end": 9730,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9643,
											"end": 9730,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 9643,
											"end": 9730,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 9643,
											"end": 9730,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9643,
											"end": 9730,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9643,
											"end": 9730,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9643,
											"end": 9730,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9643,
											"end": 9730,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "313"
										},
										{
											"begin": 9643,
											"end": 9730,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 9643,
											"end": 9730,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9643,
											"end": 9730,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6974,
											"end": 6989,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6974,
											"end": 6989,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6974,
											"end": 6989,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6956,
											"end": 6990,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6956,
											"end": 6990,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7026,
											"end": 7041,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7026,
											"end": 7041,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7023,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7006,
											"end": 7024,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7006,
											"end": 7024,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6999,
											"end": 7042,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6906,
											"end": 6908,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6891,
											"end": 6909,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6891,
											"end": 6909,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6744,
											"end": 7048,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9643,
											"end": 9730,
											"name": "tag",
											"source": 0,
											"value": "313"
										},
										{
											"begin": 9643,
											"end": 9730,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9643,
											"end": 9730,
											"name": "PUSH",
											"source": 0,
											"value": "C0"
										},
										{
											"begin": 9643,
											"end": 9730,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9643,
											"end": 9730,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9643,
											"end": 9730,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9643,
											"end": 9730,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9643,
											"end": 9730,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9643,
											"end": 9730,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9643,
											"end": 9730,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 9643,
											"end": 9730,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 9643,
											"end": 9730,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 9643,
											"end": 9730,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9643,
											"end": 9730,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9643,
											"end": 9730,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9643,
											"end": 9730,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "315"
										},
										{
											"begin": 9643,
											"end": 9730,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9643,
											"end": 9730,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9643,
											"end": 9730,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9643,
											"end": 9730,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9643,
											"end": 9730,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 9643,
											"end": 9730,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9643,
											"end": 9730,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9643,
											"end": 9730,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9643,
											"end": 9730,
											"name": "tag",
											"source": 0,
											"value": "315"
										},
										{
											"begin": 9643,
											"end": 9730,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9643,
											"end": 9730,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9643,
											"end": 9730,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9643,
											"end": 9730,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9643,
											"end": 9730,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9643,
											"end": 9730,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9643,
											"end": 9730,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9643,
											"end": 9730,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9643,
											"end": 9730,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 9643,
											"end": 9730,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 9643,
											"end": 9730,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 9643,
											"end": 9730,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9643,
											"end": 9730,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9643,
											"end": 9730,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9643,
											"end": 9730,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9643,
											"end": 9730,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9643,
											"end": 9730,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9643,
											"end": 9730,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9643,
											"end": 9730,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9643,
											"end": 9730,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9643,
											"end": 9730,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9643,
											"end": 9730,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9643,
											"end": 9730,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9643,
											"end": 9730,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 9643,
											"end": 9730,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9643,
											"end": 9730,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9643,
											"end": 9730,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 9643,
											"end": 9730,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9643,
											"end": 9730,
											"name": "tag",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 9643,
											"end": 9730,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9599,
											"end": 9730,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9599,
											"end": 9730,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9599,
											"end": 9730,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9599,
											"end": 9730,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9599,
											"end": 9730,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9599,
											"end": 9730,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9599,
											"end": 9730,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9770,
											"end": 9791,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9740,
											"end": 9791,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9740,
											"end": 9791,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "317"
										},
										{
											"begin": 9740,
											"end": 9791,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9740,
											"end": 9791,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9740,
											"end": 9791,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 9740,
											"end": 9791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9740,
											"end": 9791,
											"name": "tag",
											"source": 0,
											"value": "317"
										},
										{
											"begin": 9740,
											"end": 9791,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9740,
											"end": 9791,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 9740,
											"end": 9791,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9588,
											"end": 9802,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9584,
											"end": 9587,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9584,
											"end": 9587,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9584,
											"end": 9587,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "318"
										},
										{
											"begin": 9584,
											"end": 9587,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9584,
											"end": 9587,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "319"
										},
										{
											"begin": 9584,
											"end": 9587,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9584,
											"end": 9587,
											"name": "tag",
											"source": 0,
											"value": "318"
										},
										{
											"begin": 9584,
											"end": 9587,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9584,
											"end": 9587,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9584,
											"end": 9587,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9584,
											"end": 9587,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9548,
											"end": 9802,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "306"
										},
										{
											"begin": 9548,
											"end": 9802,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9548,
											"end": 9802,
											"name": "tag",
											"source": 0,
											"value": "307"
										},
										{
											"begin": 9548,
											"end": 9802,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9863,
											"end": 9864,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9820,
											"end": 9860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "320"
										},
										{
											"begin": 9834,
											"end": 9860,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9820,
											"end": 9831,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 9820,
											"end": 9860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 9820,
											"end": 9860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9820,
											"end": 9860,
											"name": "tag",
											"source": 0,
											"value": "320"
										},
										{
											"begin": 9820,
											"end": 9860,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9820,
											"end": 9864,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 9812,
											"end": 9879,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "321"
										},
										{
											"begin": 9812,
											"end": 9879,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9812,
											"end": 9879,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9812,
											"end": 9879,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9812,
											"end": 9879,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9812,
											"end": 9879,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14201,
											"end": 14203,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9812,
											"end": 9879,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9812,
											"end": 9879,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9812,
											"end": 9879,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14183,
											"end": 14204,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14240,
											"end": 14242,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 14220,
											"end": 14238,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 14220,
											"end": 14238,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14220,
											"end": 14238,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14213,
											"end": 14243,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E6F207374616B657273"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14259,
											"end": 14277,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 14259,
											"end": 14277,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14259,
											"end": 14277,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14252,
											"end": 14292,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14309,
											"end": 14327,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 14309,
											"end": 14327,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9812,
											"end": 9879,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 13999,
											"end": 14333,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9812,
											"end": 9879,
											"name": "tag",
											"source": 0,
											"value": "321"
										},
										{
											"begin": 9812,
											"end": 9879,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9933,
											"end": 9947,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 9933,
											"end": 9947,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9933,
											"end": 9947,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9890,
											"end": 9909,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9912,
											"end": 9948,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9912,
											"end": 9948,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9912,
											"end": 9948,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9912,
											"end": 9932,
											"name": "PUSH",
											"source": 0,
											"value": "E"
										},
										{
											"begin": 9912,
											"end": 9948,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9912,
											"end": 9948,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9912,
											"end": 9948,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9912,
											"end": 9948,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9912,
											"end": 9948,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9912,
											"end": 9948,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9975,
											"end": 9990,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 9958,
											"end": 9990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9958,
											"end": 9990,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9958,
											"end": 9990,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 10098,
											"end": 10138,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 10112,
											"end": 10138,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10098,
											"end": 10109,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 10098,
											"end": 10138,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 10098,
											"end": 10138,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10098,
											"end": 10138,
											"name": "tag",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 10098,
											"end": 10138,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10066,
											"end": 10094,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "325"
										},
										{
											"begin": 10066,
											"end": 10072,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 10075,
											"end": 10094,
											"name": "PUSH",
											"source": 0,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 10066,
											"end": 10094,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 10066,
											"end": 10094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10066,
											"end": 10094,
											"name": "tag",
											"source": 0,
											"value": "325"
										},
										{
											"begin": 10066,
											"end": 10094,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10066,
											"end": 10139,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "326"
										},
										{
											"begin": 10066,
											"end": 10139,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10066,
											"end": 10139,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10066,
											"end": 10139,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 10066,
											"end": 10139,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10066,
											"end": 10139,
											"name": "tag",
											"source": 0,
											"value": "326"
										},
										{
											"begin": 10066,
											"end": 10139,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10048,
											"end": 10140,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "327"
										},
										{
											"begin": 10048,
											"end": 10140,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10048,
											"end": 10062,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10048,
											"end": 10140,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 10048,
											"end": 10140,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10048,
											"end": 10140,
											"name": "tag",
											"source": 0,
											"value": "327"
										},
										{
											"begin": 10048,
											"end": 10140,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10030,
											"end": 10044,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 10030,
											"end": 10044,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10009,
											"end": 10045,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10009,
											"end": 10045,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10009,
											"end": 10045,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10009,
											"end": 10045,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10009,
											"end": 10029,
											"name": "PUSH",
											"source": 0,
											"value": "E"
										},
										{
											"begin": 10009,
											"end": 10045,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10009,
											"end": 10045,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10009,
											"end": 10045,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10009,
											"end": 10045,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10009,
											"end": 10045,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10009,
											"end": 10045,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10009,
											"end": 10140,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10009,
											"end": 10140,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10009,
											"end": 10140,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10009,
											"end": 10140,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 10150,
											"end": 10162,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 10150,
											"end": 10166,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 10191,
											"end": 10235,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10191,
											"end": 10235,
											"name": "PUSH",
											"source": 0,
											"value": "DDD247369EDDDE588B8AFA794145311A9AC4FF297C32D895359C5BEFC1A4E1F3"
										},
										{
											"begin": 10191,
											"end": 10235,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10191,
											"end": 10235,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "328"
										},
										{
											"begin": 10191,
											"end": 10235,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10211,
											"end": 10217,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 10211,
											"end": 10217,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10219,
											"end": 10234,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 10219,
											"end": 10234,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3290,
											"end": 3315,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3290,
											"end": 3315,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3290,
											"end": 3315,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3346,
											"end": 3348,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3331,
											"end": 3349,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3331,
											"end": 3349,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3324,
											"end": 3358,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3278,
											"end": 3280,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3263,
											"end": 3281,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3263,
											"end": 3281,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3116,
											"end": 3364,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10191,
											"end": 10235,
											"name": "tag",
											"source": 0,
											"value": "328"
										},
										{
											"begin": 10191,
											"end": 10235,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10191,
											"end": 10235,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10191,
											"end": 10235,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10191,
											"end": 10235,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10191,
											"end": 10235,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10191,
											"end": 10235,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10191,
											"end": 10235,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10191,
											"end": 10235,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 9197,
											"end": 10242,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9197,
											"end": 10242,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9197,
											"end": 10242,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9197,
											"end": 10242,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9197,
											"end": 10242,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9197,
											"end": 10242,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9132,
											"end": 10242,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11289,
											"end": 11396,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 11289,
											"end": 11396,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11338,
											"end": 11354,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 11373,
											"end": 11389,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 11366,
											"end": 11389,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11366,
											"end": 11389,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11366,
											"end": 11389,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11366,
											"end": 11389,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11366,
											"end": 11389,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 11366,
											"end": 11389,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11366,
											"end": 11389,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11366,
											"end": 11389,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11366,
											"end": 11389,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11366,
											"end": 11389,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11366,
											"end": 11389,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11366,
											"end": 11389,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11366,
											"end": 11389,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11366,
											"end": 11389,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11366,
											"end": 11389,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11366,
											"end": 11389,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 11366,
											"end": 11389,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11366,
											"end": 11389,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11366,
											"end": 11389,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11366,
											"end": 11389,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11366,
											"end": 11389,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11366,
											"end": 11389,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11366,
											"end": 11389,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11366,
											"end": 11389,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11366,
											"end": 11389,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11366,
											"end": 11389,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11366,
											"end": 11389,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11366,
											"end": 11389,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11366,
											"end": 11389,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "330"
										},
										{
											"begin": 11366,
											"end": 11389,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11366,
											"end": 11389,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11366,
											"end": 11389,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 11366,
											"end": 11389,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11366,
											"end": 11389,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11366,
											"end": 11389,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11366,
											"end": 11389,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11366,
											"end": 11389,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11366,
											"end": 11389,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11366,
											"end": 11389,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11366,
											"end": 11389,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11366,
											"end": 11389,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11366,
											"end": 11389,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11366,
											"end": 11389,
											"name": "tag",
											"source": 0,
											"value": "331"
										},
										{
											"begin": 11366,
											"end": 11389,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11366,
											"end": 11389,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11366,
											"end": 11389,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11366,
											"end": 11389,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11366,
											"end": 11389,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11366,
											"end": 11389,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11366,
											"end": 11389,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 11366,
											"end": 11389,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11366,
											"end": 11389,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11366,
											"end": 11389,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11366,
											"end": 11389,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11366,
											"end": 11389,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11366,
											"end": 11389,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11366,
											"end": 11389,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11366,
											"end": 11389,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11366,
											"end": 11389,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 11366,
											"end": 11389,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "331"
										},
										{
											"begin": 11366,
											"end": 11389,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11366,
											"end": 11389,
											"name": "tag",
											"source": 0,
											"value": "330"
										},
										{
											"begin": 11366,
											"end": 11389,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11366,
											"end": 11389,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11366,
											"end": 11389,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11366,
											"end": 11389,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11366,
											"end": 11389,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11366,
											"end": 11389,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11366,
											"end": 11389,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11366,
											"end": 11389,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11289,
											"end": 11396,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11289,
											"end": 11396,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14103,
											"end": 14297,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 14103,
											"end": 14297,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14602,
											"end": 14617,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14602,
											"end": 14617,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14602,
											"end": 14617,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14580,
											"end": 14590,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 14580,
											"end": 14618,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 14572,
											"end": 14647,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "333"
										},
										{
											"begin": 14572,
											"end": 14647,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14572,
											"end": 14647,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14572,
											"end": 14647,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14572,
											"end": 14647,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14572,
											"end": 14647,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14540,
											"end": 14542,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14572,
											"end": 14647,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14572,
											"end": 14647,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14572,
											"end": 14647,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14522,
											"end": 14543,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14579,
											"end": 14581,
											"name": "PUSH",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 14559,
											"end": 14577,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 14559,
											"end": 14577,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14559,
											"end": 14577,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14552,
											"end": 14582,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14618,
											"end": 14644,
											"name": "PUSH",
											"source": 1,
											"value": "6F6E6C7956616C44617461436F6E7472616374206F6E6C790000000000000000"
										},
										{
											"begin": 14598,
											"end": 14616,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 14598,
											"end": 14616,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14598,
											"end": 14616,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14591,
											"end": 14645,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14662,
											"end": 14680,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 14662,
											"end": 14680,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14572,
											"end": 14647,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 14338,
											"end": 14686,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14572,
											"end": 14647,
											"name": "tag",
											"source": 0,
											"value": "333"
										},
										{
											"begin": 14572,
											"end": 14647,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14207,
											"end": 14217,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14207,
											"end": 14217,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14207,
											"end": 14290,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "337"
										},
										{
											"begin": 14207,
											"end": 14290,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14263,
											"end": 14286,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14289,
											"end": 14290,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14263,
											"end": 14286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14263,
											"end": 14286,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14263,
											"end": 14286,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14263,
											"end": 14275,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 14263,
											"end": 14286,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14263,
											"end": 14286,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14263,
											"end": 14286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14263,
											"end": 14286,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14263,
											"end": 14286,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14263,
											"end": 14290,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 14103,
											"end": 14297,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14207,
											"end": 14290,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "337"
										},
										{
											"begin": 14207,
											"end": 14290,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14246,
											"end": 14260,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 14246,
											"end": 14260,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14220,
											"end": 14243,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14220,
											"end": 14243,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14220,
											"end": 14243,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14220,
											"end": 14243,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14220,
											"end": 14243,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14220,
											"end": 14243,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14220,
											"end": 14243,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14220,
											"end": 14243,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14220,
											"end": 14232,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 14220,
											"end": 14243,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14220,
											"end": 14243,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14220,
											"end": 14243,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14220,
											"end": 14243,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14220,
											"end": 14243,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14220,
											"end": 14260,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 14103,
											"end": 14297,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13980,
											"end": 14097,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 13980,
											"end": 14097,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1748,
											"end": 1761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "341"
										},
										{
											"begin": 1748,
											"end": 1759,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 1748,
											"end": 1761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1748,
											"end": 1761,
											"name": "tag",
											"source": 0,
											"value": "341"
										},
										{
											"begin": 1748,
											"end": 1761,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14039,
											"end": 14090,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14039,
											"end": 14090,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14047,
											"end": 14057,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 14047,
											"end": 14057,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14068,
											"end": 14089,
											"modifierDepth": 1,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 14039,
											"end": 14090,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14039,
											"end": 14090,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14039,
											"end": 14090,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 14039,
											"end": 14090,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 14039,
											"end": 14090,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14039,
											"end": 14090,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14039,
											"end": 14090,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14039,
											"end": 14090,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14039,
											"end": 14090,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14068,
											"end": 14089,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14047,
											"end": 14057,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 14039,
											"end": 14090,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 14039,
											"end": 14090,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 14039,
											"end": 14090,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 14039,
											"end": 14090,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14039,
											"end": 14090,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14039,
											"end": 14090,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14039,
											"end": 14090,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14039,
											"end": 14090,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14039,
											"end": 14090,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14039,
											"end": 14090,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14039,
											"end": 14090,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "344"
										},
										{
											"begin": 14039,
											"end": 14090,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14039,
											"end": 14090,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 14039,
											"end": 14090,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14039,
											"end": 14090,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14039,
											"end": 14090,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 14039,
											"end": 14090,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 14039,
											"end": 14090,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14039,
											"end": 14090,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14039,
											"end": 14090,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "344"
										},
										{
											"begin": 14039,
											"end": 14090,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14039,
											"end": 14090,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13980,
											"end": 14097,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13225,
											"end": 13343,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 13225,
											"end": 13343,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1748,
											"end": 1761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "346"
										},
										{
											"begin": 1748,
											"end": 1759,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 1748,
											"end": 1761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1748,
											"end": 1761,
											"name": "tag",
											"source": 0,
											"value": "346"
										},
										{
											"begin": 1748,
											"end": 1761,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13312,
											"end": 13322,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13312,
											"end": 13336,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13312,
											"end": 13336,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 13312,
											"end": 13336,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13312,
											"end": 13336,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFF"
										},
										{
											"begin": 13312,
											"end": 13336,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13312,
											"end": 13336,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13312,
											"end": 13336,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13312,
											"end": 13336,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13312,
											"end": 13336,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13312,
											"end": 13336,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13312,
											"end": 13336,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13312,
											"end": 13336,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 13312,
											"end": 13336,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13312,
											"end": 13336,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 13225,
											"end": 13343,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11402,
											"end": 11589,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 11402,
											"end": 11589,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11487,
											"end": 11500,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11502,
											"end": 11513,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11536,
											"end": 11582,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "349"
										},
										{
											"begin": 11579,
											"end": 11580,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11536,
											"end": 11570,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "301"
										},
										{
											"begin": 11536,
											"end": 11582,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11536,
											"end": 11582,
											"name": "tag",
											"source": 0,
											"value": "349"
										},
										{
											"begin": 11536,
											"end": 11582,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11529,
											"end": 11582,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11529,
											"end": 11582,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11529,
											"end": 11582,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11529,
											"end": 11582,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11402,
											"end": 11589,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11402,
											"end": 11589,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11402,
											"end": 11589,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13575,
											"end": 13719,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 13575,
											"end": 13719,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1748,
											"end": 1761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "351"
										},
										{
											"begin": 1748,
											"end": 1759,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 1748,
											"end": 1761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1748,
											"end": 1761,
											"name": "tag",
											"source": 0,
											"value": "351"
										},
										{
											"begin": 1748,
											"end": 1761,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13686,
											"end": 13712,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "353"
										},
										{
											"begin": 13686,
											"end": 13704,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13707,
											"end": 13712,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "15180"
										},
										{
											"begin": 13686,
											"end": 13712,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "354"
										},
										{
											"begin": 13686,
											"end": 13712,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13686,
											"end": 13712,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "353"
										},
										{
											"begin": 13686,
											"end": 13712,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13666,
											"end": 13683,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 13666,
											"end": 13712,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13666,
											"end": 13712,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 13666,
											"end": 13712,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13666,
											"end": 13712,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13666,
											"end": 13712,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13666,
											"end": 13712,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13666,
											"end": 13712,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13666,
											"end": 13712,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13666,
											"end": 13712,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13666,
											"end": 13712,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13666,
											"end": 13712,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 13666,
											"end": 13712,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13666,
											"end": 13712,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13575,
											"end": 13719,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2735,
											"end": 2967,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 2735,
											"end": 2967,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1748,
											"end": 1761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "356"
										},
										{
											"begin": 1748,
											"end": 1759,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 1748,
											"end": 1761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1748,
											"end": 1761,
											"name": "tag",
											"source": 0,
											"value": "356"
										},
										{
											"begin": 1748,
											"end": 1761,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2836,
											"end": 2858,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2836,
											"end": 2858,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2815,
											"end": 2922,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "358"
										},
										{
											"begin": 2815,
											"end": 2922,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2815,
											"end": 2922,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2815,
											"end": 2922,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2815,
											"end": 2922,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2815,
											"end": 2922,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15155,
											"end": 15157,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2815,
											"end": 2922,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2815,
											"end": 2922,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2815,
											"end": 2922,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15137,
											"end": 15158,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15194,
											"end": 15196,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 15174,
											"end": 15192,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 15174,
											"end": 15192,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15174,
											"end": 15192,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15167,
											"end": 15197,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15233,
											"end": 15267,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 15213,
											"end": 15231,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 15213,
											"end": 15231,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15213,
											"end": 15231,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15206,
											"end": 15268,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15284,
											"end": 15302,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 15284,
											"end": 15302,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15284,
											"end": 15302,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15277,
											"end": 15313,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15330,
											"end": 15349,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 15330,
											"end": 15349,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2815,
											"end": 2922,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 14953,
											"end": 15355,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2815,
											"end": 2922,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "358"
										},
										{
											"begin": 2815,
											"end": 2922,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2932,
											"end": 2960,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "344"
										},
										{
											"begin": 2951,
											"end": 2959,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2932,
											"end": 2950,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 2932,
											"end": 2960,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12290,
											"end": 13219,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 12290,
											"end": 13219,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12480,
											"end": 12509,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12480,
											"end": 12509,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12352,
											"end": 12369,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12480,
											"end": 12509,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12480,
											"end": 12509,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12480,
											"end": 12509,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12480,
											"end": 12500,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 12480,
											"end": 12509,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12480,
											"end": 12509,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12480,
											"end": 12509,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12480,
											"end": 12509,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12480,
											"end": 12509,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12480,
											"end": 12509,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12352,
											"end": 12369,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12352,
											"end": 12369,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12352,
											"end": 12369,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12352,
											"end": 12369,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12352,
											"end": 12369,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12352,
											"end": 12369,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12480,
											"end": 12513,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12477,
											"end": 12632,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "363"
										},
										{
											"begin": 12477,
											"end": 12632,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12602,
											"end": 12631,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 12602,
											"end": 12631,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12581,
											"end": 12632,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12602,
											"end": 12631,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12602,
											"end": 12631,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12602,
											"end": 12631,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12602,
											"end": 12622,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 12602,
											"end": 12631,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12602,
											"end": 12631,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12602,
											"end": 12631,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12602,
											"end": 12631,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12602,
											"end": 12631,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12602,
											"end": 12631,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12602,
											"end": 12631,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12602,
											"end": 12631,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12602,
											"end": 12631,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12581,
											"end": 12632,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12581,
											"end": 12632,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12581,
											"end": 12601,
											"name": "PUSH",
											"source": 0,
											"value": "E"
										},
										{
											"begin": 12581,
											"end": 12632,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12581,
											"end": 12632,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12581,
											"end": 12632,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12581,
											"end": 12632,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12581,
											"end": 12632,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12581,
											"end": 12632,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12581,
											"end": 12632,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12563,
											"end": 12577,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 12563,
											"end": 12577,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12542,
											"end": 12578,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12542,
											"end": 12578,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12542,
											"end": 12578,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12542,
											"end": 12578,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12542,
											"end": 12578,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12542,
											"end": 12632,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "364"
										},
										{
											"begin": 12542,
											"end": 12632,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12581,
											"end": 12632,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12542,
											"end": 12632,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 12542,
											"end": 12632,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12542,
											"end": 12632,
											"name": "tag",
											"source": 0,
											"value": "364"
										},
										{
											"begin": 12542,
											"end": 12632,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12527,
											"end": 12632,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12527,
											"end": 12632,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12477,
											"end": 12632,
											"name": "tag",
											"source": 0,
											"value": "363"
										},
										{
											"begin": 12477,
											"end": 12632,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12730,
											"end": 12751,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 12730,
											"end": 12751,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12709,
											"end": 12752,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12730,
											"end": 12751,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12730,
											"end": 12751,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12730,
											"end": 12751,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12730,
											"end": 12742,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 12730,
											"end": 12751,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12730,
											"end": 12751,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12730,
											"end": 12751,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12730,
											"end": 12751,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12730,
											"end": 12751,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12730,
											"end": 12751,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12730,
											"end": 12751,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12730,
											"end": 12751,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12730,
											"end": 12751,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12709,
											"end": 12752,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12709,
											"end": 12752,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12709,
											"end": 12729,
											"name": "PUSH",
											"source": 0,
											"value": "E"
										},
										{
											"begin": 12709,
											"end": 12752,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12709,
											"end": 12752,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12709,
											"end": 12752,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12709,
											"end": 12752,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12709,
											"end": 12752,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12709,
											"end": 12752,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12709,
											"end": 12752,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12691,
											"end": 12705,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 12691,
											"end": 12705,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12670,
											"end": 12706,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12670,
											"end": 12706,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12670,
											"end": 12706,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12670,
											"end": 12706,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12670,
											"end": 12706,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12670,
											"end": 12752,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "365"
										},
										{
											"begin": 12670,
											"end": 12752,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12709,
											"end": 12752,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12670,
											"end": 12752,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 12670,
											"end": 12752,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12670,
											"end": 12752,
											"name": "tag",
											"source": 0,
											"value": "365"
										},
										{
											"begin": 12670,
											"end": 12752,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12811,
											"end": 12826,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 12811,
											"end": 12826,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12811,
											"end": 12866,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12811,
											"end": 12866,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "64877981"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12811,
											"end": 12866,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12811,
											"end": 12866,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6974,
											"end": 6989,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 6974,
											"end": 6989,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6974,
											"end": 6989,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12811,
											"end": 12866,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12811,
											"end": 12866,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12811,
											"end": 12866,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6956,
											"end": 6990,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6956,
											"end": 6990,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6956,
											"end": 6990,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7006,
											"end": 7024,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7006,
											"end": 7024,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7006,
											"end": 7024,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6999,
											"end": 7042,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12646,
											"end": 12752,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12646,
											"end": 12752,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12768,
											"end": 12797,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12768,
											"end": 12797,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12811,
											"end": 12826,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12811,
											"end": 12826,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12811,
											"end": 12826,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12811,
											"end": 12826,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12811,
											"end": 12849,
											"name": "PUSH",
											"source": 0,
											"value": "64877981"
										},
										{
											"begin": 12811,
											"end": 12849,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6891,
											"end": 6909,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 6891,
											"end": 6909,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12811,
											"end": 12866,
											"name": "PUSH",
											"source": 0,
											"value": "C0"
										},
										{
											"begin": 12811,
											"end": 12866,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12811,
											"end": 12866,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12811,
											"end": 12866,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12811,
											"end": 12866,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12811,
											"end": 12866,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12811,
											"end": 12866,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12811,
											"end": 12866,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 12811,
											"end": 12866,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 12811,
											"end": 12866,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 12811,
											"end": 12866,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12811,
											"end": 12866,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12811,
											"end": 12866,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12811,
											"end": 12866,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "368"
										},
										{
											"begin": 12811,
											"end": 12866,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12811,
											"end": 12866,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 12811,
											"end": 12866,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12811,
											"end": 12866,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12811,
											"end": 12866,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 12811,
											"end": 12866,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 12811,
											"end": 12866,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12811,
											"end": 12866,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12811,
											"end": 12866,
											"name": "tag",
											"source": 0,
											"value": "368"
										},
										{
											"begin": 12811,
											"end": 12866,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12811,
											"end": 12866,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12811,
											"end": 12866,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12811,
											"end": 12866,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12811,
											"end": 12866,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12811,
											"end": 12866,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12811,
											"end": 12866,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12811,
											"end": 12866,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 12811,
											"end": 12866,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 12811,
											"end": 12866,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 12811,
											"end": 12866,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 12811,
											"end": 12866,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12811,
											"end": 12866,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12811,
											"end": 12866,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12811,
											"end": 12866,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12811,
											"end": 12866,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12811,
											"end": 12866,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12811,
											"end": 12866,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12811,
											"end": 12866,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12811,
											"end": 12866,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12811,
											"end": 12866,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12811,
											"end": 12866,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12811,
											"end": 12866,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12811,
											"end": 12866,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "369"
										},
										{
											"begin": 12811,
											"end": 12866,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12811,
											"end": 12866,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12811,
											"end": 12866,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 12811,
											"end": 12866,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12811,
											"end": 12866,
											"name": "tag",
											"source": 0,
											"value": "369"
										},
										{
											"begin": 12811,
											"end": 12866,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12767,
											"end": 12866,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12767,
											"end": 12866,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12767,
											"end": 12866,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12767,
											"end": 12866,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12767,
											"end": 12866,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12767,
											"end": 12866,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12767,
											"end": 12866,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12923,
											"end": 12924,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12899,
											"end": 12920,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12884,
											"end": 12896,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12884,
											"end": 12920,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "370"
										},
										{
											"begin": 12884,
											"end": 12920,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12884,
											"end": 12920,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12884,
											"end": 12920,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 12884,
											"end": 12920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12884,
											"end": 12920,
											"name": "tag",
											"source": 0,
											"value": "370"
										},
										{
											"begin": 12884,
											"end": 12920,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12884,
											"end": 12924,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 12881,
											"end": 13190,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12881,
											"end": 13190,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "371"
										},
										{
											"begin": 12881,
											"end": 13190,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13016,
											"end": 13035,
											"name": "PUSH",
											"source": 0,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 12968,
											"end": 13013,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "372"
										},
										{
											"begin": 12992,
											"end": 13013,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12968,
											"end": 12989,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12968,
											"end": 13013,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 12968,
											"end": 13013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12968,
											"end": 13013,
											"name": "tag",
											"source": 0,
											"value": "372"
										},
										{
											"begin": 12968,
											"end": 13013,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12968,
											"end": 13035,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "373"
										},
										{
											"begin": 12968,
											"end": 13035,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12968,
											"end": 13035,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12968,
											"end": 13035,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 12968,
											"end": 13035,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12968,
											"end": 13035,
											"name": "tag",
											"source": 0,
											"value": "373"
										},
										{
											"begin": 12968,
											"end": 13035,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13068,
											"end": 13087,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 13068,
											"end": 13087,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13068,
											"end": 13087,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13068,
											"end": 13087,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13068,
											"end": 13087,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13068,
											"end": 13087,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13068,
											"end": 13078,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 13068,
											"end": 13087,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13068,
											"end": 13087,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13068,
											"end": 13087,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13068,
											"end": 13087,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13068,
											"end": 13087,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13068,
											"end": 13087,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12956,
											"end": 13035,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12956,
											"end": 13035,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13105,
											"end": 13124,
											"name": "PUSH",
											"source": 0,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 13105,
											"end": 13124,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13068,
											"end": 13102,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "374"
										},
										{
											"begin": 13068,
											"end": 13102,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13090,
											"end": 13102,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 13090,
											"end": 13102,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13068,
											"end": 13102,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 13068,
											"end": 13102,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13068,
											"end": 13102,
											"name": "tag",
											"source": 0,
											"value": "374"
										},
										{
											"begin": 13068,
											"end": 13102,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13068,
											"end": 13124,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "375"
										},
										{
											"begin": 13068,
											"end": 13124,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13068,
											"end": 13124,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13068,
											"end": 13124,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 13068,
											"end": 13124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13068,
											"end": 13124,
											"name": "tag",
											"source": 0,
											"value": "375"
										},
										{
											"begin": 13068,
											"end": 13124,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13053,
											"end": 13124,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 13053,
											"end": 13124,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13142,
											"end": 13174,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13142,
											"end": 13174,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13142,
											"end": 13174,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12290,
											"end": 13219,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12290,
											"end": 13219,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12290,
											"end": 13219,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12290,
											"end": 13219,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12881,
											"end": 13190,
											"name": "tag",
											"source": 0,
											"value": "371"
										},
										{
											"begin": 12881,
											"end": 13190,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13207,
											"end": 13208,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13207,
											"end": 13208,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 13207,
											"end": 13208,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 13207,
											"end": 13208,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12290,
											"end": 13219,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12290,
											"end": 13219,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13348,
											"end": 13570,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 13348,
											"end": 13570,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1748,
											"end": 1761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "377"
										},
										{
											"begin": 1748,
											"end": 1759,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 1748,
											"end": 1761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1748,
											"end": 1761,
											"name": "tag",
											"source": 0,
											"value": "377"
										},
										{
											"begin": 1748,
											"end": 1761,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13481,
											"end": 13482,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13459,
											"end": 13478,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13459,
											"end": 13482,
											"modifierDepth": 1,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 13451,
											"end": 13515,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "379"
										},
										{
											"begin": 13451,
											"end": 13515,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13451,
											"end": 13515,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13451,
											"end": 13515,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13451,
											"end": 13515,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13451,
											"end": 13515,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15562,
											"end": 15564,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13451,
											"end": 13515,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13451,
											"end": 13515,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13451,
											"end": 13515,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15544,
											"end": 15565,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15601,
											"end": 15603,
											"name": "PUSH",
											"source": 1,
											"value": "1C"
										},
										{
											"begin": 15581,
											"end": 15599,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 15581,
											"end": 15599,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15581,
											"end": 15599,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15574,
											"end": 15604,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15640,
											"end": 15670,
											"name": "PUSH",
											"source": 1,
											"value": "496E636F7272656374204D696E696D616C5374616B696E67436F696E00000000"
										},
										{
											"begin": 15620,
											"end": 15638,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 15620,
											"end": 15638,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15620,
											"end": 15638,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15613,
											"end": 15671,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15688,
											"end": 15706,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 15688,
											"end": 15706,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13451,
											"end": 13515,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 15360,
											"end": 15712,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13451,
											"end": 13515,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "379"
										},
										{
											"begin": 13451,
											"end": 13515,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13523,
											"end": 13541,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 13523,
											"end": 13563,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 13348,
											"end": 13570,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4583,
											"end": 4616,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 4583,
											"end": 4616,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4583,
											"end": 4616,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 4583,
											"end": 4616,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4583,
											"end": 4616,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4583,
											"end": 4616,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4583,
											"end": 4616,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4583,
											"end": 4616,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 4583,
											"end": 4616,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "382"
										},
										{
											"begin": 4583,
											"end": 4616,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4583,
											"end": 4616,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4583,
											"end": 4616,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4583,
											"end": 4616,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4583,
											"end": 4616,
											"name": "tag",
											"source": 0,
											"value": "382"
										},
										{
											"begin": 4583,
											"end": 4616,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4583,
											"end": 4616,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4583,
											"end": 4616,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4583,
											"end": 4616,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4583,
											"end": 4616,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4583,
											"end": 4616,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4583,
											"end": 4616,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4583,
											"end": 4616,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4583,
											"end": 4616,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4583,
											"end": 4616,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4583,
											"end": 4616,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4583,
											"end": 4616,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4583,
											"end": 4616,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4583,
											"end": 4616,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4583,
											"end": 4616,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2013,
											"end": 2143,
											"name": "tag",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 2013,
											"end": 2143,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1908,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1927,
											"end": 1933,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1927,
											"end": 1933,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2099,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2068,
											"end": 2136,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 2068,
											"end": 2136,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2068,
											"end": 2136,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2068,
											"end": 2136,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2068,
											"end": 2136,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2068,
											"end": 2136,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15919,
											"end": 15921,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2068,
											"end": 2136,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2068,
											"end": 2136,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2068,
											"end": 2136,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15901,
											"end": 15922,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15901,
											"end": 15922,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15901,
											"end": 15922,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15938,
											"end": 15956,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 15938,
											"end": 15956,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15938,
											"end": 15956,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15931,
											"end": 15961,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15997,
											"end": 16031,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 15977,
											"end": 15995,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 15977,
											"end": 15995,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15977,
											"end": 15995,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15970,
											"end": 16032,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16049,
											"end": 16067,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 16049,
											"end": 16067,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2068,
											"end": 2136,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 15717,
											"end": 16073,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10248,
											"end": 10855,
											"name": "tag",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 10248,
											"end": 10855,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10337,
											"end": 10346,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10319,
											"end": 10849,
											"name": "tag",
											"source": 0,
											"value": "392"
										},
										{
											"begin": 10319,
											"end": 10849,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10368,
											"end": 10384,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 10368,
											"end": 10391,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10364,
											"end": 10391,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10364,
											"end": 10391,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 10319,
											"end": 10849,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10319,
											"end": 10849,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "393"
										},
										{
											"begin": 10319,
											"end": 10849,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10447,
											"end": 10463,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 10464,
											"end": 10465,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10447,
											"end": 10466,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10447,
											"end": 10466,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10447,
											"end": 10466,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10447,
											"end": 10466,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 10447,
											"end": 10466,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "396"
										},
										{
											"begin": 10447,
											"end": 10466,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10447,
											"end": 10466,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "396"
										},
										{
											"begin": 10447,
											"end": 10466,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 10447,
											"end": 10466,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10447,
											"end": 10466,
											"name": "tag",
											"source": 0,
											"value": "396"
										},
										{
											"begin": 10447,
											"end": 10466,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10447,
											"end": 10466,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10447,
											"end": 10466,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10447,
											"end": 10466,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10447,
											"end": 10466,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10447,
											"end": 10466,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10447,
											"end": 10466,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10447,
											"end": 10466,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10447,
											"end": 10466,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10447,
											"end": 10466,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10447,
											"end": 10466,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10447,
											"end": 10466,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10447,
											"end": 10466,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10447,
											"end": 10466,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10437,
											"end": 10466,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10437,
											"end": 10466,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10437,
											"end": 10466,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10437,
											"end": 10466,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10433,
											"end": 10839,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "398"
										},
										{
											"begin": 10433,
											"end": 10839,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10524,
											"end": 10540,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 10524,
											"end": 10547,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10524,
											"end": 10551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "399"
										},
										{
											"begin": 10524,
											"end": 10551,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10550,
											"end": 10551,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 10550,
											"end": 10551,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10524,
											"end": 10551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 10524,
											"end": 10551,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10524,
											"end": 10551,
											"name": "tag",
											"source": 0,
											"value": "399"
										},
										{
											"begin": 10524,
											"end": 10551,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10519,
											"end": 10520,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10519,
											"end": 10551,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 10515,
											"end": 10686,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "400"
										},
										{
											"begin": 10515,
											"end": 10686,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10597,
											"end": 10613,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 10614,
											"end": 10662,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10614,
											"end": 10662,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10614,
											"end": 10666,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "401"
										},
										{
											"begin": 10614,
											"end": 10666,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10665,
											"end": 10666,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 10665,
											"end": 10666,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10614,
											"end": 10666,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 10614,
											"end": 10666,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10614,
											"end": 10666,
											"name": "tag",
											"source": 0,
											"value": "401"
										},
										{
											"begin": 10614,
											"end": 10666,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10597,
											"end": 10667,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10597,
											"end": 10667,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10597,
											"end": 10667,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10597,
											"end": 10667,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 10597,
											"end": 10667,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "403"
										},
										{
											"begin": 10597,
											"end": 10667,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10597,
											"end": 10667,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "403"
										},
										{
											"begin": 10597,
											"end": 10667,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 10597,
											"end": 10667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10597,
											"end": 10667,
											"name": "tag",
											"source": 0,
											"value": "403"
										},
										{
											"begin": 10597,
											"end": 10667,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10597,
											"end": 10667,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10597,
											"end": 10667,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10597,
											"end": 10667,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10597,
											"end": 10667,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10597,
											"end": 10667,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10597,
											"end": 10667,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10597,
											"end": 10667,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10597,
											"end": 10667,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10597,
											"end": 10667,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10597,
											"end": 10667,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10575,
											"end": 10591,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 10575,
											"end": 10594,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10575,
											"end": 10594,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10597,
											"end": 10667,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10597,
											"end": 10667,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10597,
											"end": 10667,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10597,
											"end": 10667,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10592,
											"end": 10593,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10592,
											"end": 10593,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10575,
											"end": 10594,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10575,
											"end": 10594,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 10575,
											"end": 10594,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "406"
										},
										{
											"begin": 10575,
											"end": 10594,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10575,
											"end": 10594,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "406"
										},
										{
											"begin": 10575,
											"end": 10594,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 10575,
											"end": 10594,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10575,
											"end": 10594,
											"name": "tag",
											"source": 0,
											"value": "406"
										},
										{
											"begin": 10575,
											"end": 10594,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10575,
											"end": 10594,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10575,
											"end": 10594,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10575,
											"end": 10594,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10575,
											"end": 10594,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10575,
											"end": 10594,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10575,
											"end": 10594,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10575,
											"end": 10594,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10575,
											"end": 10594,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10575,
											"end": 10667,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 10575,
											"end": 10667,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 10575,
											"end": 10667,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10575,
											"end": 10667,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10575,
											"end": 10667,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10575,
											"end": 10667,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 10575,
											"end": 10667,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 10575,
											"end": 10667,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10575,
											"end": 10667,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10575,
											"end": 10667,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10575,
											"end": 10667,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10575,
											"end": 10667,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 10575,
											"end": 10667,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 10575,
											"end": 10667,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10575,
											"end": 10667,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 10575,
											"end": 10667,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10515,
											"end": 10686,
											"name": "tag",
											"source": 0,
											"value": "400"
										},
										{
											"begin": 10515,
											"end": 10686,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10704,
											"end": 10720,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 10704,
											"end": 10726,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10704,
											"end": 10726,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10704,
											"end": 10726,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10704,
											"end": 10726,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "409"
										},
										{
											"begin": 10704,
											"end": 10726,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10704,
											"end": 10726,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "409"
										},
										{
											"begin": 10704,
											"end": 10726,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "410"
										},
										{
											"begin": 10704,
											"end": 10726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10704,
											"end": 10726,
											"name": "tag",
											"source": 0,
											"value": "409"
										},
										{
											"begin": 10704,
											"end": 10726,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10704,
											"end": 10726,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10704,
											"end": 10726,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10704,
											"end": 10726,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10704,
											"end": 10726,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10704,
											"end": 10726,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10704,
											"end": 10726,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10704,
											"end": 10726,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10704,
											"end": 10726,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10704,
											"end": 10726,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10704,
											"end": 10726,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10704,
											"end": 10726,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10704,
											"end": 10726,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10704,
											"end": 10726,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10704,
											"end": 10726,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10704,
											"end": 10726,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10704,
											"end": 10726,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10704,
											"end": 10726,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 10704,
											"end": 10726,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10704,
											"end": 10726,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10704,
											"end": 10726,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 10749,
											"end": 10800,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10749,
											"end": 10800,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10749,
											"end": 10800,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10749,
											"end": 10800,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10749,
											"end": 10800,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10749,
											"end": 10800,
											"name": "PUSH",
											"source": 0,
											"value": "77F1DE51AE9C845B4FFF5F1512C8736EA703337FE77421649A51F6188D3470B2"
										},
										{
											"begin": 10749,
											"end": 10800,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10749,
											"end": 10800,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "412"
										},
										{
											"begin": 10749,
											"end": 10800,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10784,
											"end": 10799,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 449,
											"end": 474,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 449,
											"end": 474,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 437,
											"end": 439,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 422,
											"end": 440,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 422,
											"end": 440,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 303,
											"end": 480,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10749,
											"end": 10800,
											"name": "tag",
											"source": 0,
											"value": "412"
										},
										{
											"begin": 10749,
											"end": 10800,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10749,
											"end": 10800,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10749,
											"end": 10800,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10749,
											"end": 10800,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10749,
											"end": 10800,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10749,
											"end": 10800,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10749,
											"end": 10800,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10749,
											"end": 10800,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 10319,
											"end": 10849,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10248,
											"end": 10855,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10248,
											"end": 10855,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10433,
											"end": 10839,
											"name": "tag",
											"source": 0,
											"value": "398"
										},
										{
											"begin": 10433,
											"end": 10839,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10405,
											"end": 10408,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10405,
											"end": 10408,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "413"
										},
										{
											"begin": 10405,
											"end": 10408,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10405,
											"end": 10408,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 10405,
											"end": 10408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10405,
											"end": 10408,
											"name": "tag",
											"source": 0,
											"value": "413"
										},
										{
											"begin": 10405,
											"end": 10408,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10405,
											"end": 10408,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10405,
											"end": 10408,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10405,
											"end": 10408,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10319,
											"end": 10849,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "392"
										},
										{
											"begin": 10319,
											"end": 10849,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10319,
											"end": 10849,
											"name": "tag",
											"source": 0,
											"value": "393"
										},
										{
											"begin": 10319,
											"end": 10849,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10319,
											"end": 10849,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10248,
											"end": 10855,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10248,
											"end": 10855,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3121,
											"end": 3308,
											"name": "tag",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 3121,
											"end": 3308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3194,
											"end": 3210,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3213,
											"end": 3219,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3213,
											"end": 3219,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3229,
											"end": 3246,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3229,
											"end": 3246,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3229,
											"end": 3246,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3229,
											"end": 3246,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3229,
											"end": 3246,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3229,
											"end": 3246,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3229,
											"end": 3246,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3229,
											"end": 3246,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3229,
											"end": 3246,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3261,
											"end": 3301,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3261,
											"end": 3301,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3213,
											"end": 3219,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3213,
											"end": 3219,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3213,
											"end": 3219,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3213,
											"end": 3219,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3213,
											"end": 3219,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3213,
											"end": 3219,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3213,
											"end": 3219,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3261,
											"end": 3301,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3261,
											"end": 3301,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3194,
											"end": 3210,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3261,
											"end": 3301,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 3184,
											"end": 3308,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3121,
											"end": 3308,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3121,
											"end": 3308,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11595,
											"end": 12021,
											"name": "tag",
											"source": 0,
											"value": "301"
										},
										{
											"begin": 11595,
											"end": 12021,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11698,
											"end": 11711,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11713,
											"end": 11724,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11745,
											"end": 11754,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11740,
											"end": 11985,
											"name": "tag",
											"source": 0,
											"value": "416"
										},
										{
											"begin": 11740,
											"end": 11985,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11764,
											"end": 11780,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 11764,
											"end": 11787,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11760,
											"end": 11787,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11760,
											"end": 11787,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 11740,
											"end": 11985,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11740,
											"end": 11985,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "417"
										},
										{
											"begin": 11740,
											"end": 11985,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11836,
											"end": 11852,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 11853,
											"end": 11854,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11836,
											"end": 11855,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11836,
											"end": 11855,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11836,
											"end": 11855,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11836,
											"end": 11855,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 11836,
											"end": 11855,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "420"
										},
										{
											"begin": 11836,
											"end": 11855,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11836,
											"end": 11855,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "420"
										},
										{
											"begin": 11836,
											"end": 11855,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 11836,
											"end": 11855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11836,
											"end": 11855,
											"name": "tag",
											"source": 0,
											"value": "420"
										},
										{
											"begin": 11836,
											"end": 11855,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11836,
											"end": 11855,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11836,
											"end": 11855,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11836,
											"end": 11855,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11836,
											"end": 11855,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11836,
											"end": 11855,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11836,
											"end": 11855,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11836,
											"end": 11855,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11836,
											"end": 11855,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11836,
											"end": 11855,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11836,
											"end": 11855,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11829,
											"end": 11855,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 11829,
											"end": 11855,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11829,
											"end": 11855,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11836,
											"end": 11855,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11836,
											"end": 11855,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11829,
											"end": 11855,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11808,
											"end": 11975,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "422"
										},
										{
											"begin": 11808,
											"end": 11975,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11905,
											"end": 11915,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 11905,
											"end": 11936,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11916,
											"end": 11932,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 11933,
											"end": 11934,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11916,
											"end": 11935,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11916,
											"end": 11935,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11916,
											"end": 11935,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11916,
											"end": 11935,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 11916,
											"end": 11935,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "424"
										},
										{
											"begin": 11916,
											"end": 11935,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11916,
											"end": 11935,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "424"
										},
										{
											"begin": 11916,
											"end": 11935,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 11916,
											"end": 11935,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11916,
											"end": 11935,
											"name": "tag",
											"source": 0,
											"value": "424"
										},
										{
											"begin": 11916,
											"end": 11935,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11916,
											"end": 11935,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11916,
											"end": 11935,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11916,
											"end": 11935,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11916,
											"end": 11935,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11916,
											"end": 11935,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11916,
											"end": 11935,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11916,
											"end": 11935,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11916,
											"end": 11935,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11916,
											"end": 11935,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11916,
											"end": 11935,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11916,
											"end": 11935,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11916,
											"end": 11935,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11916,
											"end": 11935,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11905,
											"end": 11936,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11905,
											"end": 11936,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11905,
											"end": 11936,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11905,
											"end": 11936,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11905,
											"end": 11936,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 11905,
											"end": 11936,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11905,
											"end": 11936,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 11905,
											"end": 11936,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11905,
											"end": 11936,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11905,
											"end": 11936,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11905,
											"end": 11936,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11905,
											"end": 11936,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11905,
											"end": 11936,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11896,
											"end": 11937,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "426"
										},
										{
											"begin": 11896,
											"end": 11937,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11896,
											"end": 11901,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11896,
											"end": 11937,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 11896,
											"end": 11937,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11896,
											"end": 11937,
											"name": "tag",
											"source": 0,
											"value": "426"
										},
										{
											"begin": 11896,
											"end": 11937,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11888,
											"end": 11937,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11955,
											"end": 11960,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11955,
											"end": 11960,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "427"
										},
										{
											"begin": 11955,
											"end": 11960,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11955,
											"end": 11960,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 11955,
											"end": 11960,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11955,
											"end": 11960,
											"name": "tag",
											"source": 0,
											"value": "427"
										},
										{
											"begin": 11955,
											"end": 11960,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11955,
											"end": 11960,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 11955,
											"end": 11960,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11955,
											"end": 11960,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11808,
											"end": 11975,
											"name": "tag",
											"source": 0,
											"value": "422"
										},
										{
											"begin": 11808,
											"end": 11975,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11789,
											"end": 11792,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11789,
											"end": 11792,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "428"
										},
										{
											"begin": 11789,
											"end": 11792,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11789,
											"end": 11792,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 11789,
											"end": 11792,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11789,
											"end": 11792,
											"name": "tag",
											"source": 0,
											"value": "428"
										},
										{
											"begin": 11789,
											"end": 11792,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11789,
											"end": 11792,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11789,
											"end": 11792,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11789,
											"end": 11792,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11740,
											"end": 11985,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "416"
										},
										{
											"begin": 11740,
											"end": 11985,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11740,
											"end": 11985,
											"name": "tag",
											"source": 0,
											"value": "417"
										},
										{
											"begin": 11740,
											"end": 11985,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11740,
											"end": 11985,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11595,
											"end": 12021,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11595,
											"end": 12021,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11595,
											"end": 12021,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11595,
											"end": 12021,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14,
											"end": 298,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 14,
											"end": 298,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 72,
											"end": 78,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 125,
											"end": 127,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 113,
											"end": 122,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 104,
											"end": 111,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 100,
											"end": 123,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 96,
											"end": 128,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 93,
											"end": 145,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 93,
											"end": 145,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "442"
										},
										{
											"begin": 93,
											"end": 145,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 141,
											"end": 142,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 138,
											"end": 139,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 131,
											"end": 143,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 93,
											"end": 145,
											"name": "tag",
											"source": 1,
											"value": "442"
										},
										{
											"begin": 93,
											"end": 145,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 180,
											"end": 189,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 167,
											"end": 190,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 223,
											"end": 228,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 219,
											"end": 249,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 212,
											"end": 217,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 209,
											"end": 250,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 199,
											"end": 268,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "443"
										},
										{
											"begin": 199,
											"end": 268,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 264,
											"end": 265,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 261,
											"end": 262,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 254,
											"end": 266,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 199,
											"end": 268,
											"name": "tag",
											"source": 1,
											"value": "443"
										},
										{
											"begin": 199,
											"end": 268,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 287,
											"end": 292,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 14,
											"end": 298,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 298,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 485,
											"end": 616,
											"name": "tag",
											"source": 1,
											"value": "430"
										},
										{
											"begin": 485,
											"end": 616,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 560,
											"end": 591,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 560,
											"end": 591,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 550,
											"end": 592,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 550,
											"end": 592,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 540,
											"end": 610,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "344"
										},
										{
											"begin": 540,
											"end": 610,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 606,
											"end": 607,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 603,
											"end": 604,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 596,
											"end": 608,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 621,
											"end": 868,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 621,
											"end": 868,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 680,
											"end": 686,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 733,
											"end": 735,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 721,
											"end": 730,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 712,
											"end": 719,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 708,
											"end": 731,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 704,
											"end": 736,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 701,
											"end": 753,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 701,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "448"
										},
										{
											"begin": 701,
											"end": 753,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 749,
											"end": 750,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 746,
											"end": 747,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 739,
											"end": 751,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 701,
											"end": 753,
											"name": "tag",
											"source": 1,
											"value": "448"
										},
										{
											"begin": 701,
											"end": 753,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 788,
											"end": 797,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 775,
											"end": 798,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 807,
											"end": 838,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "443"
										},
										{
											"begin": 832,
											"end": 837,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 807,
											"end": 838,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "430"
										},
										{
											"begin": 807,
											"end": 838,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1065,
											"end": 1245,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 1065,
											"end": 1245,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1124,
											"end": 1130,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1177,
											"end": 1179,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1165,
											"end": 1174,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1156,
											"end": 1163,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1152,
											"end": 1175,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1148,
											"end": 1180,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1145,
											"end": 1197,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1145,
											"end": 1197,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "452"
										},
										{
											"begin": 1145,
											"end": 1197,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1193,
											"end": 1194,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1190,
											"end": 1191,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1183,
											"end": 1195,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1145,
											"end": 1197,
											"name": "tag",
											"source": 1,
											"value": "452"
										},
										{
											"begin": 1145,
											"end": 1197,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1216,
											"end": 1239,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1216,
											"end": 1239,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1065,
											"end": 1245,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1065,
											"end": 1245,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1458,
											"end": 2116,
											"name": "tag",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 1458,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1629,
											"end": 1631,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1681,
											"end": 1702,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1681,
											"end": 1702,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1681,
											"end": 1702,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1751,
											"end": 1764,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1751,
											"end": 1764,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1654,
											"end": 1672,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1654,
											"end": 1672,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1654,
											"end": 1672,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1773,
											"end": 1795,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1773,
											"end": 1795,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1773,
											"end": 1795,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1600,
											"end": 1604,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1600,
											"end": 1604,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1629,
											"end": 1631,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1852,
											"end": 1867,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1852,
											"end": 1867,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1852,
											"end": 1867,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1852,
											"end": 1867,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1826,
											"end": 1828,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1811,
											"end": 1829,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1811,
											"end": 1829,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1811,
											"end": 1829,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1600,
											"end": 1604,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1895,
											"end": 2090,
											"name": "tag",
											"source": 1,
											"value": "455"
										},
										{
											"begin": 1895,
											"end": 2090,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1909,
											"end": 1915,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1906,
											"end": 1907,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1903,
											"end": 1916,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1895,
											"end": 2090,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1895,
											"end": 2090,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "457"
										},
										{
											"begin": 1895,
											"end": 2090,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1974,
											"end": 1987,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1974,
											"end": 1987,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1970,
											"end": 2009,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1958,
											"end": 2010,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1958,
											"end": 2010,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2065,
											"end": 2080,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2065,
											"end": 2080,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2065,
											"end": 2080,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2065,
											"end": 2080,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2030,
											"end": 2042,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2030,
											"end": 2042,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2030,
											"end": 2042,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2030,
											"end": 2042,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2006,
											"end": 2007,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1924,
											"end": 1933,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1895,
											"end": 2090,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "455"
										},
										{
											"begin": 1895,
											"end": 2090,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1895,
											"end": 2090,
											"name": "tag",
											"source": 1,
											"value": "457"
										},
										{
											"begin": 1895,
											"end": 2090,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2107,
											"end": 2110,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2107,
											"end": 2110,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 1458,
											"end": 2116,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1458,
											"end": 2116,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2121,
											"end": 2436,
											"name": "tag",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 2121,
											"end": 2436,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2189,
											"end": 2195,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2197,
											"end": 2203,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2250,
											"end": 2252,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2238,
											"end": 2247,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2229,
											"end": 2236,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2225,
											"end": 2248,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2221,
											"end": 2253,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2218,
											"end": 2270,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2218,
											"end": 2270,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "459"
										},
										{
											"begin": 2218,
											"end": 2270,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2266,
											"end": 2267,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2263,
											"end": 2264,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2256,
											"end": 2268,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2218,
											"end": 2270,
											"name": "tag",
											"source": 1,
											"value": "459"
										},
										{
											"begin": 2218,
											"end": 2270,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2305,
											"end": 2314,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2292,
											"end": 2315,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2324,
											"end": 2355,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "460"
										},
										{
											"begin": 2349,
											"end": 2354,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2324,
											"end": 2355,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "430"
										},
										{
											"begin": 2324,
											"end": 2355,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2324,
											"end": 2355,
											"name": "tag",
											"source": 1,
											"value": "460"
										},
										{
											"begin": 2324,
											"end": 2355,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2374,
											"end": 2379,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 2426,
											"end": 2428,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2411,
											"end": 2429,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2411,
											"end": 2429,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2411,
											"end": 2429,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2411,
											"end": 2429,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2398,
											"end": 2430,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2398,
											"end": 2430,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2121,
											"end": 2436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2634,
											"end": 2906,
											"name": "tag",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 2634,
											"end": 2906,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2692,
											"end": 2698,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2745,
											"end": 2747,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2733,
											"end": 2742,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2724,
											"end": 2731,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2720,
											"end": 2743,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2716,
											"end": 2748,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2713,
											"end": 2765,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2713,
											"end": 2765,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "463"
										},
										{
											"begin": 2713,
											"end": 2765,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2761,
											"end": 2762,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2758,
											"end": 2759,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2751,
											"end": 2763,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2713,
											"end": 2765,
											"name": "tag",
											"source": 1,
											"value": "463"
										},
										{
											"begin": 2713,
											"end": 2765,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2800,
											"end": 2809,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2787,
											"end": 2810,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2850,
											"end": 2856,
											"name": "PUSH",
											"source": 1,
											"value": "FFFF"
										},
										{
											"begin": 2843,
											"end": 2848,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2839,
											"end": 2857,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2832,
											"end": 2837,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2829,
											"end": 2858,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2819,
											"end": 2876,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "443"
										},
										{
											"begin": 2819,
											"end": 2876,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2872,
											"end": 2873,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2869,
											"end": 2870,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2862,
											"end": 2874,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4307,
											"end": 4434,
											"name": "tag",
											"source": 1,
											"value": "431"
										},
										{
											"begin": 4307,
											"end": 4434,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4368,
											"end": 4378,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 4363,
											"end": 4366,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 4359,
											"end": 4379,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 4356,
											"end": 4357,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4349,
											"end": 4380,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4399,
											"end": 4403,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 4396,
											"end": 4397,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4389,
											"end": 4404,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4423,
											"end": 4427,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4420,
											"end": 4421,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4413,
											"end": 4428,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4439,
											"end": 4567,
											"name": "tag",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 4439,
											"end": 4567,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4506,
											"end": 4515,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4506,
											"end": 4515,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4506,
											"end": 4515,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4527,
											"end": 4538,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4527,
											"end": 4538,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4527,
											"end": 4538,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 4524,
											"end": 4561,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4524,
											"end": 4561,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "473"
										},
										{
											"begin": 4524,
											"end": 4561,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4541,
											"end": 4559,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "473"
										},
										{
											"begin": 4541,
											"end": 4559,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "431"
										},
										{
											"begin": 4541,
											"end": 4559,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4541,
											"end": 4559,
											"name": "tag",
											"source": 1,
											"value": "473"
										},
										{
											"begin": 4541,
											"end": 4559,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4439,
											"end": 4567,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4439,
											"end": 4567,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4439,
											"end": 4567,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4439,
											"end": 4567,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4439,
											"end": 4567,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4572,
											"end": 4697,
											"name": "tag",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 4572,
											"end": 4697,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4637,
											"end": 4646,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4637,
											"end": 4646,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4637,
											"end": 4646,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4658,
											"end": 4668,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4658,
											"end": 4668,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4658,
											"end": 4668,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 4655,
											"end": 4691,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4655,
											"end": 4691,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "473"
										},
										{
											"begin": 4655,
											"end": 4691,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4671,
											"end": 4689,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "473"
										},
										{
											"begin": 4671,
											"end": 4689,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "431"
										},
										{
											"begin": 4671,
											"end": 4689,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4702,
											"end": 4870,
											"name": "tag",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 4702,
											"end": 4870,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4775,
											"end": 4784,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4775,
											"end": 4784,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4775,
											"end": 4784,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 4806,
											"end": 4815,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4806,
											"end": 4815,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4823,
											"end": 4838,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4823,
											"end": 4838,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4823,
											"end": 4838,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4817,
											"end": 4839,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4817,
											"end": 4839,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4803,
											"end": 4840,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 4793,
											"end": 4864,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "473"
										},
										{
											"begin": 4793,
											"end": 4864,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4844,
											"end": 4862,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "473"
										},
										{
											"begin": 4844,
											"end": 4862,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "431"
										},
										{
											"begin": 4844,
											"end": 4862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4875,
											"end": 5092,
											"name": "tag",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 4875,
											"end": 5092,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4915,
											"end": 4916,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4941,
											"end": 4942,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4931,
											"end": 5063,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "481"
										},
										{
											"begin": 4931,
											"end": 5063,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4985,
											"end": 4995,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 4980,
											"end": 4983,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 4976,
											"end": 4996,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 4973,
											"end": 4974,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4966,
											"end": 4997,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5020,
											"end": 5024,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 5017,
											"end": 5018,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5010,
											"end": 5025,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5048,
											"end": 5052,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5045,
											"end": 5046,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5038,
											"end": 5053,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4931,
											"end": 5063,
											"name": "tag",
											"source": 1,
											"value": "481"
										},
										{
											"begin": 4931,
											"end": 5063,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5077,
											"end": 5086,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 5077,
											"end": 5086,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4875,
											"end": 5092,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6472,
											"end": 6599,
											"name": "tag",
											"source": 1,
											"value": "259"
										},
										{
											"begin": 6472,
											"end": 6599,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6533,
											"end": 6543,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 6528,
											"end": 6531,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 6524,
											"end": 6544,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 6521,
											"end": 6522,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6514,
											"end": 6545,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6564,
											"end": 6568,
											"name": "PUSH",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 6561,
											"end": 6562,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6554,
											"end": 6569,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6588,
											"end": 6592,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6585,
											"end": 6586,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6578,
											"end": 6593,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6604,
											"end": 6739,
											"name": "tag",
											"source": 1,
											"value": "263"
										},
										{
											"begin": 6604,
											"end": 6739,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6643,
											"end": 6646,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6664,
											"end": 6681,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6664,
											"end": 6681,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6664,
											"end": 6681,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6661,
											"end": 6704,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "489"
										},
										{
											"begin": 6661,
											"end": 6704,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6684,
											"end": 6702,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "489"
										},
										{
											"begin": 6684,
											"end": 6702,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "431"
										},
										{
											"begin": 6684,
											"end": 6702,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6684,
											"end": 6702,
											"name": "tag",
											"source": 1,
											"value": "489"
										},
										{
											"begin": 6684,
											"end": 6702,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6731,
											"end": 6732,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6720,
											"end": 6733,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6720,
											"end": 6733,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6604,
											"end": 6739,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7053,
											"end": 7204,
											"name": "tag",
											"source": 1,
											"value": "432"
										},
										{
											"begin": 7053,
											"end": 7204,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7136,
											"end": 7149,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7136,
											"end": 7149,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7178,
											"end": 7179,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 7168,
											"end": 7180,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7168,
											"end": 7180,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 7158,
											"end": 7198,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "246"
										},
										{
											"begin": 7158,
											"end": 7198,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7194,
											"end": 7195,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7191,
											"end": 7192,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7184,
											"end": 7196,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7209,
											"end": 7806,
											"name": "tag",
											"source": 1,
											"value": "278"
										},
										{
											"begin": 7209,
											"end": 7806,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7334,
											"end": 7340,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7342,
											"end": 7348,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7350,
											"end": 7356,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7358,
											"end": 7364,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7366,
											"end": 7372,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7374,
											"end": 7380,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7427,
											"end": 7430,
											"name": "PUSH",
											"source": 1,
											"value": "C0"
										},
										{
											"begin": 7415,
											"end": 7424,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7406,
											"end": 7413,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 7402,
											"end": 7425,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7398,
											"end": 7431,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 7395,
											"end": 7448,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7395,
											"end": 7448,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "494"
										},
										{
											"begin": 7395,
											"end": 7448,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7444,
											"end": 7445,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7441,
											"end": 7442,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7434,
											"end": 7446,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7395,
											"end": 7448,
											"name": "tag",
											"source": 1,
											"value": "494"
										},
										{
											"begin": 7395,
											"end": 7448,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7473,
											"end": 7482,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 7467,
											"end": 7483,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7457,
											"end": 7483,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 7457,
											"end": 7483,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7502,
											"end": 7555,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "495"
										},
										{
											"begin": 7551,
											"end": 7553,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7540,
											"end": 7549,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 7536,
											"end": 7554,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7502,
											"end": 7555,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "432"
										},
										{
											"begin": 7502,
											"end": 7555,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7502,
											"end": 7555,
											"name": "tag",
											"source": 1,
											"value": "495"
										},
										{
											"begin": 7502,
											"end": 7555,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7492,
											"end": 7555,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 7492,
											"end": 7555,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7595,
											"end": 7597,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7584,
											"end": 7593,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7580,
											"end": 7598,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7574,
											"end": 7599,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7564,
											"end": 7599,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 7564,
											"end": 7599,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7639,
											"end": 7641,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 7628,
											"end": 7637,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7624,
											"end": 7642,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7618,
											"end": 7643,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7608,
											"end": 7643,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7608,
											"end": 7643,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7683,
											"end": 7686,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 7672,
											"end": 7681,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7668,
											"end": 7687,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7662,
											"end": 7688,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7652,
											"end": 7688,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7652,
											"end": 7688,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7731,
											"end": 7734,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 7720,
											"end": 7729,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7716,
											"end": 7735,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7710,
											"end": 7736,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7745,
											"end": 7776,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "496"
										},
										{
											"begin": 7770,
											"end": 7775,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7745,
											"end": 7776,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "430"
										},
										{
											"begin": 7745,
											"end": 7776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7745,
											"end": 7776,
											"name": "tag",
											"source": 1,
											"value": "496"
										},
										{
											"begin": 7745,
											"end": 7776,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7795,
											"end": 7800,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7785,
											"end": 7800,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7785,
											"end": 7800,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7785,
											"end": 7800,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7209,
											"end": 7806,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7209,
											"end": 7806,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 7209,
											"end": 7806,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7209,
											"end": 7806,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7209,
											"end": 7806,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 7209,
											"end": 7806,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7209,
											"end": 7806,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7209,
											"end": 7806,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 7209,
											"end": 7806,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7811,
											"end": 7995,
											"name": "tag",
											"source": 1,
											"value": "286"
										},
										{
											"begin": 7811,
											"end": 7995,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7881,
											"end": 7887,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7934,
											"end": 7936,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7922,
											"end": 7931,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7913,
											"end": 7920,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7909,
											"end": 7932,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7905,
											"end": 7937,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 7902,
											"end": 7954,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7902,
											"end": 7954,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "498"
										},
										{
											"begin": 7902,
											"end": 7954,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7950,
											"end": 7951,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7947,
											"end": 7948,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7940,
											"end": 7952,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7902,
											"end": 7954,
											"name": "tag",
											"source": 1,
											"value": "498"
										},
										{
											"begin": 7902,
											"end": 7954,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7973,
											"end": 7989,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7973,
											"end": 7989,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7811,
											"end": 7995,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7811,
											"end": 7995,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8000,
											"end": 8127,
											"name": "tag",
											"source": 1,
											"value": "433"
										},
										{
											"begin": 8000,
											"end": 8127,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8061,
											"end": 8071,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 8056,
											"end": 8059,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 8052,
											"end": 8072,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 8049,
											"end": 8050,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8042,
											"end": 8073,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8092,
											"end": 8096,
											"name": "PUSH",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 8089,
											"end": 8090,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8082,
											"end": 8097,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8116,
											"end": 8120,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 8113,
											"end": 8114,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8106,
											"end": 8121,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 8132,
											"end": 8407,
											"name": "tag",
											"source": 1,
											"value": "434"
										},
										{
											"begin": 8132,
											"end": 8407,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8203,
											"end": 8205,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8197,
											"end": 8206,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8268,
											"end": 8270,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 8249,
											"end": 8262,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8249,
											"end": 8262,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 8245,
											"end": 8272,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8233,
											"end": 8273,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8233,
											"end": 8273,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8288,
											"end": 8322,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8288,
											"end": 8322,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 8324,
											"end": 8346,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8324,
											"end": 8346,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8324,
											"end": 8346,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 8285,
											"end": 8347,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 8282,
											"end": 8370,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8282,
											"end": 8370,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "502"
										},
										{
											"begin": 8282,
											"end": 8370,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8350,
											"end": 8368,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "502"
										},
										{
											"begin": 8350,
											"end": 8368,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "433"
										},
										{
											"begin": 8350,
											"end": 8368,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8350,
											"end": 8368,
											"name": "tag",
											"source": 1,
											"value": "502"
										},
										{
											"begin": 8350,
											"end": 8368,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8386,
											"end": 8388,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8379,
											"end": 8401,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8132,
											"end": 8407,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8132,
											"end": 8407,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8132,
											"end": 8407,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8412,
											"end": 8595,
											"name": "tag",
											"source": 1,
											"value": "435"
										},
										{
											"begin": 8412,
											"end": 8595,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8472,
											"end": 8476,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8497,
											"end": 8503,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8494,
											"end": 8524,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 8491,
											"end": 8547,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8491,
											"end": 8547,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "505"
										},
										{
											"begin": 8491,
											"end": 8547,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8527,
											"end": 8545,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "505"
										},
										{
											"begin": 8527,
											"end": 8545,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "433"
										},
										{
											"begin": 8527,
											"end": 8545,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8527,
											"end": 8545,
											"name": "tag",
											"source": 1,
											"value": "505"
										},
										{
											"begin": 8527,
											"end": 8545,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8572,
											"end": 8573,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 8568,
											"end": 8582,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 8584,
											"end": 8588,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8564,
											"end": 8589,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8564,
											"end": 8589,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8412,
											"end": 8595,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8600,
											"end": 9334,
											"name": "tag",
											"source": 1,
											"value": "436"
										},
										{
											"begin": 8600,
											"end": 9334,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8665,
											"end": 8670,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8718,
											"end": 8721,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8711,
											"end": 8715,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 8703,
											"end": 8709,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8699,
											"end": 8716,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8695,
											"end": 8722,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 8685,
											"end": 8740,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "507"
										},
										{
											"begin": 8685,
											"end": 8740,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8736,
											"end": 8737,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8733,
											"end": 8734,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8726,
											"end": 8738,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 8685,
											"end": 8740,
											"name": "tag",
											"source": 1,
											"value": "507"
										},
										{
											"begin": 8685,
											"end": 8740,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8765,
											"end": 8771,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8759,
											"end": 8772,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8791,
											"end": 8795,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8815,
											"end": 8875,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "508"
										},
										{
											"begin": 8831,
											"end": 8874,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "509"
										},
										{
											"begin": 8871,
											"end": 8873,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8831,
											"end": 8874,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "435"
										},
										{
											"begin": 8831,
											"end": 8874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8831,
											"end": 8874,
											"name": "tag",
											"source": 1,
											"value": "509"
										},
										{
											"begin": 8831,
											"end": 8874,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8815,
											"end": 8875,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "434"
										},
										{
											"begin": 8815,
											"end": 8875,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8815,
											"end": 8875,
											"name": "tag",
											"source": 1,
											"value": "508"
										},
										{
											"begin": 8815,
											"end": 8875,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8909,
											"end": 8924,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8909,
											"end": 8924,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8909,
											"end": 8924,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8995,
											"end": 8996,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 8991,
											"end": 9001,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8991,
											"end": 9001,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8991,
											"end": 9001,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8991,
											"end": 9001,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 8979,
											"end": 9002,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8979,
											"end": 9002,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8975,
											"end": 9007,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8975,
											"end": 9007,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8975,
											"end": 9007,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8940,
											"end": 8952,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8940,
											"end": 8952,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8940,
											"end": 8952,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8940,
											"end": 8952,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9019,
											"end": 9034,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 9019,
											"end": 9034,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9019,
											"end": 9034,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 9016,
											"end": 9051,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9016,
											"end": 9051,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "510"
										},
										{
											"begin": 9016,
											"end": 9051,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9047,
											"end": 9048,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9044,
											"end": 9045,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9037,
											"end": 9049,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9016,
											"end": 9051,
											"name": "tag",
											"source": 1,
											"value": "510"
										},
										{
											"begin": 9016,
											"end": 9051,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9083,
											"end": 9085,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9075,
											"end": 9081,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 9071,
											"end": 9086,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9095,
											"end": 9305,
											"name": "tag",
											"source": 1,
											"value": "511"
										},
										{
											"begin": 9095,
											"end": 9305,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9111,
											"end": 9117,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9106,
											"end": 9109,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9103,
											"end": 9118,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 9095,
											"end": 9305,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9095,
											"end": 9305,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "513"
										},
										{
											"begin": 9095,
											"end": 9305,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9184,
											"end": 9187,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9178,
											"end": 9188,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9201,
											"end": 9232,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "514"
										},
										{
											"begin": 9226,
											"end": 9231,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9201,
											"end": 9232,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "430"
										},
										{
											"begin": 9201,
											"end": 9232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9201,
											"end": 9232,
											"name": "tag",
											"source": 1,
											"value": "514"
										},
										{
											"begin": 9201,
											"end": 9232,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9245,
											"end": 9263,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9245,
											"end": 9263,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9283,
											"end": 9295,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9283,
											"end": 9295,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9283,
											"end": 9295,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9283,
											"end": 9295,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9128,
											"end": 9140,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9128,
											"end": 9140,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9095,
											"end": 9305,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "511"
										},
										{
											"begin": 9095,
											"end": 9305,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9095,
											"end": 9305,
											"name": "tag",
											"source": 1,
											"value": "513"
										},
										{
											"begin": 9095,
											"end": 9305,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9323,
											"end": 9328,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 8600,
											"end": 9334,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8600,
											"end": 9334,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9339,
											"end": 10030,
											"name": "tag",
											"source": 1,
											"value": "437"
										},
										{
											"begin": 9339,
											"end": 10030,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9408,
											"end": 9413,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9461,
											"end": 9464,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9454,
											"end": 9458,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 9446,
											"end": 9452,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9442,
											"end": 9459,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9438,
											"end": 9465,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 9428,
											"end": 9483,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "516"
										},
										{
											"begin": 9428,
											"end": 9483,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9479,
											"end": 9480,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9476,
											"end": 9477,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9469,
											"end": 9481,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9428,
											"end": 9483,
											"name": "tag",
											"source": 1,
											"value": "516"
										},
										{
											"begin": 9428,
											"end": 9483,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9508,
											"end": 9514,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9502,
											"end": 9515,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9534,
											"end": 9538,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9558,
											"end": 9618,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "517"
										},
										{
											"begin": 9574,
											"end": 9617,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "509"
										},
										{
											"begin": 9614,
											"end": 9616,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9574,
											"end": 9617,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "435"
										},
										{
											"begin": 9574,
											"end": 9617,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9558,
											"end": 9618,
											"name": "tag",
											"source": 1,
											"value": "517"
										},
										{
											"begin": 9558,
											"end": 9618,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9652,
											"end": 9667,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9652,
											"end": 9667,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9652,
											"end": 9667,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9738,
											"end": 9739,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 9734,
											"end": 9744,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9734,
											"end": 9744,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9734,
											"end": 9744,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9734,
											"end": 9744,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 9722,
											"end": 9745,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9722,
											"end": 9745,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9718,
											"end": 9750,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9718,
											"end": 9750,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9718,
											"end": 9750,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9683,
											"end": 9695,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9683,
											"end": 9695,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9683,
											"end": 9695,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9683,
											"end": 9695,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9762,
											"end": 9777,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 9762,
											"end": 9777,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9762,
											"end": 9777,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 9759,
											"end": 9794,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9759,
											"end": 9794,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "519"
										},
										{
											"begin": 9759,
											"end": 9794,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9790,
											"end": 9791,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9787,
											"end": 9788,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9780,
											"end": 9792,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9759,
											"end": 9794,
											"name": "tag",
											"source": 1,
											"value": "519"
										},
										{
											"begin": 9759,
											"end": 9794,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9826,
											"end": 9828,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9818,
											"end": 9824,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 9814,
											"end": 9829,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9838,
											"end": 10001,
											"name": "tag",
											"source": 1,
											"value": "520"
										},
										{
											"begin": 9838,
											"end": 10001,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9854,
											"end": 9860,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9849,
											"end": 9852,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9846,
											"end": 9861,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 9838,
											"end": 10001,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9838,
											"end": 10001,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "513"
										},
										{
											"begin": 9838,
											"end": 10001,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9920,
											"end": 9958,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "523"
										},
										{
											"begin": 9954,
											"end": 9957,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9920,
											"end": 9958,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "432"
										},
										{
											"begin": 9920,
											"end": 9958,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9920,
											"end": 9958,
											"name": "tag",
											"source": 1,
											"value": "523"
										},
										{
											"begin": 9920,
											"end": 9958,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9908,
											"end": 9959,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9908,
											"end": 9959,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9979,
											"end": 9991,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9979,
											"end": 9991,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9979,
											"end": 9991,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9979,
											"end": 9991,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9871,
											"end": 9883,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9871,
											"end": 9883,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9838,
											"end": 10001,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "520"
										},
										{
											"begin": 9838,
											"end": 10001,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10035,
											"end": 10694,
											"name": "tag",
											"source": 1,
											"value": "438"
										},
										{
											"begin": 10035,
											"end": 10694,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10100,
											"end": 10105,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10153,
											"end": 10156,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10146,
											"end": 10150,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 10138,
											"end": 10144,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10134,
											"end": 10151,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10130,
											"end": 10157,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 10120,
											"end": 10175,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "525"
										},
										{
											"begin": 10120,
											"end": 10175,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10171,
											"end": 10172,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10168,
											"end": 10169,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10161,
											"end": 10173,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10120,
											"end": 10175,
											"name": "tag",
											"source": 1,
											"value": "525"
										},
										{
											"begin": 10120,
											"end": 10175,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10200,
											"end": 10206,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10194,
											"end": 10207,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10226,
											"end": 10230,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10250,
											"end": 10310,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "526"
										},
										{
											"begin": 10266,
											"end": 10309,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "509"
										},
										{
											"begin": 10306,
											"end": 10308,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10266,
											"end": 10309,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "435"
										},
										{
											"begin": 10266,
											"end": 10309,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10250,
											"end": 10310,
											"name": "tag",
											"source": 1,
											"value": "526"
										},
										{
											"begin": 10250,
											"end": 10310,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10344,
											"end": 10359,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10344,
											"end": 10359,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10344,
											"end": 10359,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10430,
											"end": 10431,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 10426,
											"end": 10436,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10426,
											"end": 10436,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10426,
											"end": 10436,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10426,
											"end": 10436,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 10414,
											"end": 10437,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10414,
											"end": 10437,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10410,
											"end": 10442,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10410,
											"end": 10442,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10410,
											"end": 10442,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10375,
											"end": 10387,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10375,
											"end": 10387,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10375,
											"end": 10387,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10375,
											"end": 10387,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10454,
											"end": 10469,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 10454,
											"end": 10469,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10454,
											"end": 10469,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 10451,
											"end": 10486,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10451,
											"end": 10486,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "528"
										},
										{
											"begin": 10451,
											"end": 10486,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10482,
											"end": 10483,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10479,
											"end": 10480,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10472,
											"end": 10484,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10451,
											"end": 10486,
											"name": "tag",
											"source": 1,
											"value": "528"
										},
										{
											"begin": 10451,
											"end": 10486,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10518,
											"end": 10520,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10510,
											"end": 10516,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 10506,
											"end": 10521,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10530,
											"end": 10665,
											"name": "tag",
											"source": 1,
											"value": "529"
										},
										{
											"begin": 10530,
											"end": 10665,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10546,
											"end": 10552,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10541,
											"end": 10544,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10538,
											"end": 10553,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 10530,
											"end": 10665,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10530,
											"end": 10665,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "513"
										},
										{
											"begin": 10530,
											"end": 10665,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10612,
											"end": 10622,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10612,
											"end": 10622,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10600,
											"end": 10623,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10600,
											"end": 10623,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10643,
											"end": 10655,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10643,
											"end": 10655,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10643,
											"end": 10655,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10643,
											"end": 10655,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10563,
											"end": 10575,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10563,
											"end": 10575,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10530,
											"end": 10665,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "529"
										},
										{
											"begin": 10530,
											"end": 10665,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10699,
											"end": 12347,
											"name": "tag",
											"source": 1,
											"value": "439"
										},
										{
											"begin": 10699,
											"end": 12347,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10763,
											"end": 10768,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10793,
											"end": 10797,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 10837,
											"end": 10840,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10832,
											"end": 10834,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10824,
											"end": 10830,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10820,
											"end": 10835,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10816,
											"end": 10841,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 10806,
											"end": 10859,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "533"
										},
										{
											"begin": 10806,
											"end": 10859,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10855,
											"end": 10856,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10852,
											"end": 10853,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10845,
											"end": 10857,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10806,
											"end": 10859,
											"name": "tag",
											"source": 1,
											"value": "533"
										},
										{
											"begin": 10806,
											"end": 10859,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10884,
											"end": 10890,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10878,
											"end": 10891,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10910,
											"end": 10914,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10934,
											"end": 10994,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "534"
										},
										{
											"begin": 10950,
											"end": 10993,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "509"
										},
										{
											"begin": 10990,
											"end": 10992,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10950,
											"end": 10993,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "435"
										},
										{
											"begin": 10950,
											"end": 10993,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10934,
											"end": 10994,
											"name": "tag",
											"source": 1,
											"value": "534"
										},
										{
											"begin": 10934,
											"end": 10994,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11028,
											"end": 11043,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11028,
											"end": 11043,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11028,
											"end": 11043,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11114,
											"end": 11115,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 11110,
											"end": 11120,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 11110,
											"end": 11120,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11110,
											"end": 11120,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 11110,
											"end": 11120,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 11098,
											"end": 11121,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 11098,
											"end": 11121,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11094,
											"end": 11126,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11094,
											"end": 11126,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11094,
											"end": 11126,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11059,
											"end": 11071,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11059,
											"end": 11071,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11059,
											"end": 11071,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11059,
											"end": 11071,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11138,
											"end": 11153,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 11138,
											"end": 11153,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11138,
											"end": 11153,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 11135,
											"end": 11170,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11135,
											"end": 11170,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "536"
										},
										{
											"begin": 11135,
											"end": 11170,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11166,
											"end": 11167,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11163,
											"end": 11164,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11156,
											"end": 11168,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 11135,
											"end": 11170,
											"name": "tag",
											"source": 1,
											"value": "536"
										},
										{
											"begin": 11135,
											"end": 11170,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11202,
											"end": 11204,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11194,
											"end": 11200,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 11190,
											"end": 11205,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11214,
											"end": 12318,
											"name": "tag",
											"source": 1,
											"value": "537"
										},
										{
											"begin": 11214,
											"end": 12318,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11230,
											"end": 11236,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11225,
											"end": 11228,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11222,
											"end": 11237,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 11214,
											"end": 12318,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11214,
											"end": 12318,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "539"
										},
										{
											"begin": 11214,
											"end": 12318,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11309,
											"end": 11312,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11303,
											"end": 11313,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11386,
											"end": 11388,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11373,
											"end": 11384,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11370,
											"end": 11389,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 11367,
											"end": 11476,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11367,
											"end": 11476,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "540"
										},
										{
											"begin": 11367,
											"end": 11476,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11430,
											"end": 11431,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11459,
											"end": 11461,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11455,
											"end": 11457,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11448,
											"end": 11462,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 11367,
											"end": 11476,
											"name": "tag",
											"source": 1,
											"value": "540"
										},
										{
											"begin": 11367,
											"end": 11476,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11511,
											"end": 11522,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11503,
											"end": 11509,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 11499,
											"end": 11523,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11489,
											"end": 11523,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11489,
											"end": 11523,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11563,
											"end": 11566,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 11558,
											"end": 11560,
											"name": "PUSH",
											"source": 1,
											"value": "3F"
										},
										{
											"begin": 11554,
											"end": 11556,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11550,
											"end": 11561,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11546,
											"end": 11567,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 11536,
											"end": 11655,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "541"
										},
										{
											"begin": 11536,
											"end": 11655,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11609,
											"end": 11610,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11638,
											"end": 11640,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11634,
											"end": 11636,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11627,
											"end": 11641,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 11536,
											"end": 11655,
											"name": "tag",
											"source": 1,
											"value": "541"
										},
										{
											"begin": 11536,
											"end": 11655,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11692,
											"end": 11694,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 11688,
											"end": 11690,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11684,
											"end": 11695,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11678,
											"end": 11696,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11719,
											"end": 11721,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11715,
											"end": 11717,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11712,
											"end": 11722,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 11709,
											"end": 11745,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11709,
											"end": 11745,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "543"
										},
										{
											"begin": 11709,
											"end": 11745,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11725,
											"end": 11743,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "543"
										},
										{
											"begin": 11725,
											"end": 11743,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "433"
										},
										{
											"begin": 11725,
											"end": 11743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11725,
											"end": 11743,
											"name": "tag",
											"source": 1,
											"value": "543"
										},
										{
											"begin": 11725,
											"end": 11743,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11773,
											"end": 11824,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "544"
										},
										{
											"begin": 11797,
											"end": 11808,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11797,
											"end": 11808,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 11797,
											"end": 11808,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11793,
											"end": 11818,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11789,
											"end": 11823,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 11789,
											"end": 11823,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11773,
											"end": 11824,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "434"
										},
										{
											"begin": 11773,
											"end": 11824,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11773,
											"end": 11824,
											"name": "tag",
											"source": 1,
											"value": "544"
										},
										{
											"begin": 11773,
											"end": 11824,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11758,
											"end": 11824,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11758,
											"end": 11824,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11853,
											"end": 11855,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11844,
											"end": 11851,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11837,
											"end": 11856,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11879,
											"end": 11881,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11922,
											"end": 11925,
											"name": "DUP13",
											"source": 1
										},
										{
											"begin": 11917,
											"end": 11919,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11912,
											"end": 11914,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11908,
											"end": 11910,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 11904,
											"end": 11915,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11900,
											"end": 11920,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11897,
											"end": 11926,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 11894,
											"end": 12016,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11894,
											"end": 12016,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "545"
										},
										{
											"begin": 11894,
											"end": 12016,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11968,
											"end": 11969,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11998,
											"end": 12001,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11993,
											"end": 11996,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11986,
											"end": 12002,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 11894,
											"end": 12016,
											"name": "tag",
											"source": 1,
											"value": "545"
										},
										{
											"begin": 11894,
											"end": 12016,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12038,
											"end": 12039,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12052,
											"end": 12194,
											"name": "tag",
											"source": 1,
											"value": "546"
										},
										{
											"begin": 12052,
											"end": 12194,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12066,
											"end": 12068,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12063,
											"end": 12064,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12060,
											"end": 12069,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 12052,
											"end": 12194,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 12052,
											"end": 12194,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "548"
										},
										{
											"begin": 12052,
											"end": 12194,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12163,
											"end": 12173,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12163,
											"end": 12173,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12163,
											"end": 12173,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12159,
											"end": 12178,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12159,
											"end": 12178,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12153,
											"end": 12179,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 12131,
											"end": 12146,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12131,
											"end": 12146,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12131,
											"end": 12146,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12127,
											"end": 12151,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 12127,
											"end": 12151,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12120,
											"end": 12180,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12077,
											"end": 12087,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 12077,
											"end": 12087,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12052,
											"end": 12194,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "546"
										},
										{
											"begin": 12052,
											"end": 12194,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12052,
											"end": 12194,
											"name": "tag",
											"source": 1,
											"value": "548"
										},
										{
											"begin": 12052,
											"end": 12194,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12241,
											"end": 12242,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12218,
											"end": 12234,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12218,
											"end": 12234,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12218,
											"end": 12234,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12214,
											"end": 12239,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 12214,
											"end": 12239,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12207,
											"end": 12243,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12256,
											"end": 12276,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12256,
											"end": 12276,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12296,
											"end": 12308,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12296,
											"end": 12308,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12296,
											"end": 12308,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12296,
											"end": 12308,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11247,
											"end": 11259,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11247,
											"end": 11259,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11214,
											"end": 12318,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "537"
										},
										{
											"begin": 11214,
											"end": 12318,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11214,
											"end": 12318,
											"name": "tag",
											"source": 1,
											"value": "539"
										},
										{
											"begin": 11214,
											"end": 12318,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12336,
											"end": 12341,
											"name": "SWAP8",
											"source": 1
										},
										{
											"begin": 10699,
											"end": 12347,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10699,
											"end": 12347,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12352,
											"end": 13814,
											"name": "tag",
											"source": 1,
											"value": "305"
										},
										{
											"begin": 12352,
											"end": 13814,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12631,
											"end": 12637,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12639,
											"end": 12645,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12647,
											"end": 12653,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12655,
											"end": 12661,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12663,
											"end": 12669,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12671,
											"end": 12677,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12679,
											"end": 12685,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12732,
											"end": 12735,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 12720,
											"end": 12729,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 12711,
											"end": 12718,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 12707,
											"end": 12730,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 12703,
											"end": 12736,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 12700,
											"end": 12753,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 12700,
											"end": 12753,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "550"
										},
										{
											"begin": 12700,
											"end": 12753,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12749,
											"end": 12750,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12746,
											"end": 12747,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12739,
											"end": 12751,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 12700,
											"end": 12753,
											"name": "tag",
											"source": 1,
											"value": "550"
										},
										{
											"begin": 12700,
											"end": 12753,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12778,
											"end": 12787,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 12772,
											"end": 12788,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 12762,
											"end": 12788,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 12762,
											"end": 12788,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12828,
											"end": 12830,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12817,
											"end": 12826,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 12813,
											"end": 12831,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12807,
											"end": 12832,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 12797,
											"end": 12832,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 12797,
											"end": 12832,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12876,
											"end": 12878,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12865,
											"end": 12874,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 12861,
											"end": 12879,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12855,
											"end": 12880,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12940,
											"end": 12942,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12932,
											"end": 12938,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12929,
											"end": 12943,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 12926,
											"end": 12960,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 12926,
											"end": 12960,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "551"
										},
										{
											"begin": 12926,
											"end": 12960,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12956,
											"end": 12957,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12953,
											"end": 12954,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12946,
											"end": 12958,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 12926,
											"end": 12960,
											"name": "tag",
											"source": 1,
											"value": "551"
										},
										{
											"begin": 12926,
											"end": 12960,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12979,
											"end": 13051,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "552"
										},
										{
											"begin": 13043,
											"end": 13050,
											"name": "DUP12",
											"source": 1
										},
										{
											"begin": 13034,
											"end": 13040,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13023,
											"end": 13032,
											"name": "DUP13",
											"source": 1
										},
										{
											"begin": 13019,
											"end": 13041,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12979,
											"end": 13051,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "436"
										},
										{
											"begin": 12979,
											"end": 13051,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12979,
											"end": 13051,
											"name": "tag",
											"source": 1,
											"value": "552"
										},
										{
											"begin": 12979,
											"end": 13051,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12969,
											"end": 13051,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 12969,
											"end": 13051,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13097,
											"end": 13099,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 13086,
											"end": 13095,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 13082,
											"end": 13100,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13076,
											"end": 13101,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13060,
											"end": 13101,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13060,
											"end": 13101,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13126,
											"end": 13128,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13116,
											"end": 13124,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13113,
											"end": 13129,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 13110,
											"end": 13146,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 13110,
											"end": 13146,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "553"
										},
										{
											"begin": 13110,
											"end": 13146,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13142,
											"end": 13143,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13139,
											"end": 13140,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13132,
											"end": 13144,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 13110,
											"end": 13146,
											"name": "tag",
											"source": 1,
											"value": "553"
										},
										{
											"begin": 13110,
											"end": 13146,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13165,
											"end": 13243,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "554"
										},
										{
											"begin": 13235,
											"end": 13242,
											"name": "DUP12",
											"source": 1
										},
										{
											"begin": 13224,
											"end": 13232,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13213,
											"end": 13222,
											"name": "DUP13",
											"source": 1
										},
										{
											"begin": 13209,
											"end": 13233,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13165,
											"end": 13243,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "437"
										},
										{
											"begin": 13165,
											"end": 13243,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13165,
											"end": 13243,
											"name": "tag",
											"source": 1,
											"value": "554"
										},
										{
											"begin": 13165,
											"end": 13243,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13155,
											"end": 13243,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 13155,
											"end": 13243,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13289,
											"end": 13292,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 13278,
											"end": 13287,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 13274,
											"end": 13293,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13268,
											"end": 13294,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13252,
											"end": 13294,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13252,
											"end": 13294,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13319,
											"end": 13321,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13309,
											"end": 13317,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13306,
											"end": 13322,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 13303,
											"end": 13339,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 13303,
											"end": 13339,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "555"
										},
										{
											"begin": 13303,
											"end": 13339,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13335,
											"end": 13336,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13332,
											"end": 13333,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13325,
											"end": 13337,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 13303,
											"end": 13339,
											"name": "tag",
											"source": 1,
											"value": "555"
										},
										{
											"begin": 13303,
											"end": 13339,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13358,
											"end": 13432,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "556"
										},
										{
											"begin": 13424,
											"end": 13431,
											"name": "DUP12",
											"source": 1
										},
										{
											"begin": 13413,
											"end": 13421,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13402,
											"end": 13411,
											"name": "DUP13",
											"source": 1
										},
										{
											"begin": 13398,
											"end": 13422,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13358,
											"end": 13432,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "438"
										},
										{
											"begin": 13358,
											"end": 13432,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13358,
											"end": 13432,
											"name": "tag",
											"source": 1,
											"value": "556"
										},
										{
											"begin": 13358,
											"end": 13432,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13348,
											"end": 13432,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 13348,
											"end": 13432,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13478,
											"end": 13481,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 13467,
											"end": 13476,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 13463,
											"end": 13482,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13457,
											"end": 13483,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13441,
											"end": 13483,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13441,
											"end": 13483,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13508,
											"end": 13510,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13498,
											"end": 13506,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13495,
											"end": 13511,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 13492,
											"end": 13528,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 13492,
											"end": 13528,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "557"
										},
										{
											"begin": 13492,
											"end": 13528,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13524,
											"end": 13525,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13521,
											"end": 13522,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13514,
											"end": 13526,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 13492,
											"end": 13528,
											"name": "tag",
											"source": 1,
											"value": "557"
										},
										{
											"begin": 13492,
											"end": 13528,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13547,
											"end": 13620,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "558"
										},
										{
											"begin": 13612,
											"end": 13619,
											"name": "DUP12",
											"source": 1
										},
										{
											"begin": 13601,
											"end": 13609,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13590,
											"end": 13599,
											"name": "DUP13",
											"source": 1
										},
										{
											"begin": 13586,
											"end": 13610,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13547,
											"end": 13620,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "439"
										},
										{
											"begin": 13547,
											"end": 13620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13547,
											"end": 13620,
											"name": "tag",
											"source": 1,
											"value": "558"
										},
										{
											"begin": 13547,
											"end": 13620,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13537,
											"end": 13620,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 13537,
											"end": 13620,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13666,
											"end": 13669,
											"name": "PUSH",
											"source": 1,
											"value": "C0"
										},
										{
											"begin": 13655,
											"end": 13664,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 13651,
											"end": 13670,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13645,
											"end": 13671,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13629,
											"end": 13671,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13629,
											"end": 13671,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13696,
											"end": 13698,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13686,
											"end": 13694,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13683,
											"end": 13699,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 13680,
											"end": 13716,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 13680,
											"end": 13716,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "559"
										},
										{
											"begin": 13680,
											"end": 13716,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13712,
											"end": 13713,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13709,
											"end": 13710,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13702,
											"end": 13714,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 13680,
											"end": 13716,
											"name": "tag",
											"source": 1,
											"value": "559"
										},
										{
											"begin": 13680,
											"end": 13716,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13680,
											"end": 13716,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13735,
											"end": 13808,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "560"
										},
										{
											"begin": 13800,
											"end": 13807,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 13789,
											"end": 13797,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13778,
											"end": 13787,
											"name": "DUP12",
											"source": 1
										},
										{
											"begin": 13774,
											"end": 13798,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13735,
											"end": 13808,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "439"
										},
										{
											"begin": 13735,
											"end": 13808,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13735,
											"end": 13808,
											"name": "tag",
											"source": 1,
											"value": "560"
										},
										{
											"begin": 13735,
											"end": 13808,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13725,
											"end": 13808,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13725,
											"end": 13808,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13725,
											"end": 13808,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12352,
											"end": 13814,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 12352,
											"end": 13814,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 12352,
											"end": 13814,
											"name": "SWAP9",
											"source": 1
										},
										{
											"begin": 12352,
											"end": 13814,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12352,
											"end": 13814,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 12352,
											"end": 13814,
											"name": "SWAP8",
											"source": 1
										},
										{
											"begin": 12352,
											"end": 13814,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12352,
											"end": 13814,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 12352,
											"end": 13814,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 12352,
											"end": 13814,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12352,
											"end": 13814,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13819,
											"end": 13994,
											"name": "tag",
											"source": 1,
											"value": "319"
										},
										{
											"begin": 13819,
											"end": 13994,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13856,
											"end": 13859,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13900,
											"end": 13904,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 13893,
											"end": 13898,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13889,
											"end": 13905,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13929,
											"end": 13933,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 13920,
											"end": 13927,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13917,
											"end": 13934,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13914,
											"end": 13957,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "563"
										},
										{
											"begin": 13914,
											"end": 13957,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13937,
											"end": 13955,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "563"
										},
										{
											"begin": 13937,
											"end": 13955,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "431"
										},
										{
											"begin": 13937,
											"end": 13955,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13937,
											"end": 13955,
											"name": "tag",
											"source": 1,
											"value": "563"
										},
										{
											"begin": 13937,
											"end": 13955,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13986,
											"end": 13987,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 13973,
											"end": 13988,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13973,
											"end": 13988,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 13819,
											"end": 13994,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13819,
											"end": 13994,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14691,
											"end": 14948,
											"name": "tag",
											"source": 1,
											"value": "354"
										},
										{
											"begin": 14691,
											"end": 14948,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14812,
											"end": 14822,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14812,
											"end": 14822,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14812,
											"end": 14822,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14824,
											"end": 14834,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14824,
											"end": 14834,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14824,
											"end": 14834,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14808,
											"end": 14835,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 14855,
											"end": 14875,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14855,
											"end": 14875,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14855,
											"end": 14875,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14855,
											"end": 14875,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14762,
											"end": 14780,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14894,
											"end": 14918,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14894,
											"end": 14918,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14894,
											"end": 14918,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 14884,
											"end": 14942,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "568"
										},
										{
											"begin": 14884,
											"end": 14942,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14922,
											"end": 14940,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "568"
										},
										{
											"begin": 14922,
											"end": 14940,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "431"
										},
										{
											"begin": 14922,
											"end": 14940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14922,
											"end": 14940,
											"name": "tag",
											"source": 1,
											"value": "568"
										},
										{
											"begin": 14922,
											"end": 14940,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14884,
											"end": 14942,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14884,
											"end": 14942,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14691,
											"end": 14948,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 14691,
											"end": 14948,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14691,
											"end": 14948,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14691,
											"end": 14948,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14691,
											"end": 14948,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16078,
											"end": 16205,
											"name": "tag",
											"source": 1,
											"value": "410"
										},
										{
											"begin": 16078,
											"end": 16205,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16139,
											"end": 16149,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 16134,
											"end": 16137,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 16130,
											"end": 16150,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 16127,
											"end": 16128,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16120,
											"end": 16151,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16170,
											"end": 16174,
											"name": "PUSH",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 16167,
											"end": 16168,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 16160,
											"end": 16175,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16194,
											"end": 16198,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 16191,
											"end": 16192,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16184,
											"end": 16199,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"JaiHo/system-contracts/Staking.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"MaxStakers()": "bddd6de4",
							"MinimalStakingCoin()": "be645692",
							"checkforpenalty(address)": "41f349b5",
							"currentStakerSet(uint256)": "f6b663c3",
							"distributeReward()": "8f73c5ae",
							"getActiveStakers()": "9fb82db9",
							"getStakingInfo(address)": "aa4704f3",
							"getTotalStakeOfActiveStakers()": "e75bcb96",
							"isActiveStaker(address)": "68015791",
							"lastRewardTime()": "9231cf74",
							"mutateValStakeTimeMapping(address,uint256)": "a9e30ccf",
							"owner()": "8da5cb5b",
							"penaltyPercentage()": "15908d51",
							"reflectionPercentSum(uint256)": "5fa34ebd",
							"renounceOwnership()": "715018a6",
							"rescueCoins()": "b0806108",
							"rewardWithdrawalTime(address)": "cc001f16",
							"stake()": "3a4b66f1",
							"stakeTime(address)": "2170e472",
							"stakingLockPeriod()": "e0639364",
							"totalPenalty()": "e6af61c8",
							"totalStake()": "8b0e9f3f",
							"transferOwnership(address)": "f2fde38b",
							"unstake()": "2def6620",
							"updateMaxStakers(uint16)": "c7907f54",
							"updateMinimalStakingCoin(uint256)": "f67c4dfd",
							"updatePenaltyPercentage(uint64)": "062b6139",
							"updateStakingLockPeriod(uint64)": "ee7cb288",
							"updateValidatorDataContract(address)": "6285b5a2",
							"valDataContract()": "fe32f55e",
							"valStakeTime(address)": "82cb1c18",
							"viewStakeReward(address)": "f3883538",
							"withdrawStakingReward(address)": "72d30a70"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"LogDistributeReward\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"LogRemoveFromCurrentStaker\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"staking\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"LogStake\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"penalty\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"LogUnstake\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timeStamp\",\"type\":\"uint256\"}],\"name\":\"withdrawStakingRewardEv\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MaxStakers\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MinimalStakingCoin\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"}],\"name\":\"checkforpenalty\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isPenalty\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"currentStakerSet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"distributeReward\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getActiveStakers\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"}],\"name\":\"getStakingInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalStakeOfActiveStakers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"total\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"len\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"}],\"name\":\"isActiveStaker\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastRewardTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"validator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"mutateValStakeTimeMapping\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"penaltyPercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"reflectionPercentSum\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rescueCoins\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"rewardWithdrawalTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stake\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakeTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingLockPeriod\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalPenalty\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalStake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unstake\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_MaxStakers\",\"type\":\"uint16\"}],\"name\":\"updateMaxStakers\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_MinimalStakingCoin\",\"type\":\"uint256\"}],\"name\":\"updateMinimalStakingCoin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"_penaltyPercentage\",\"type\":\"uint64\"}],\"name\":\"updatePenaltyPercentage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"_stakingLockPeriod\",\"type\":\"uint64\"}],\"name\":\"updateStakingLockPeriod\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_validatorData\",\"type\":\"address\"}],\"name\":\"updateValidatorDataContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"valDataContract\",\"outputs\":[{\"internalType\":\"contract InterfaceValidator\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"valStakeTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_staker\",\"type\":\"address\"}],\"name\":\"viewStakeReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"valReward\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stakerReward\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"}],\"name\":\"withdrawStakingReward\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"rescueCoins()\":{\"notice\":\"admin functions\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"JaiHo/system-contracts/Staking.sol\":\"Staking\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"JaiHo/system-contracts/Staking.sol\":{\"keccak256\":\"0x76c70f3d79c68e3005420228d257956b725fc455d9b709c4d2d502793044ba8c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://570643c1e9de5d515cb413ceef450b9665b1f277b94589526070d5bd9f6a2754\",\"dweb:/ipfs/QmfCcsCPREDAer8qZSg9CE89MwrVCo3jJySrtikLLh6JEq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 26,
								"contract": "JaiHo/system-contracts/Staking.sol:Staking",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 198,
								"contract": "JaiHo/system-contracts/Staking.sol:Staking",
								"label": "valDataContract",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(InterfaceValidator)190"
							},
							{
								"astId": 202,
								"contract": "JaiHo/system-contracts/Staking.sol:Staking",
								"label": "stakerInfo",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 205,
								"contract": "JaiHo/system-contracts/Staking.sol:Staking",
								"label": "MinimalStakingCoin",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 208,
								"contract": "JaiHo/system-contracts/Staking.sol:Staking",
								"label": "MaxStakers",
								"offset": 0,
								"slot": "4",
								"type": "t_uint16"
							},
							{
								"astId": 211,
								"contract": "JaiHo/system-contracts/Staking.sol:Staking",
								"label": "currentStakerSet",
								"offset": 0,
								"slot": "5",
								"type": "t_array(t_address)dyn_storage"
							},
							{
								"astId": 213,
								"contract": "JaiHo/system-contracts/Staking.sol:Staking",
								"label": "totalStake",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 215,
								"contract": "JaiHo/system-contracts/Staking.sol:Staking",
								"label": "totalPenalty",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 218,
								"contract": "JaiHo/system-contracts/Staking.sol:Staking",
								"label": "stakingLockPeriod",
								"offset": 0,
								"slot": "8",
								"type": "t_uint64"
							},
							{
								"astId": 221,
								"contract": "JaiHo/system-contracts/Staking.sol:Staking",
								"label": "penaltyPercentage",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							},
							{
								"astId": 225,
								"contract": "JaiHo/system-contracts/Staking.sol:Staking",
								"label": "rewardWithdrawalTime",
								"offset": 0,
								"slot": "10",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 229,
								"contract": "JaiHo/system-contracts/Staking.sol:Staking",
								"label": "stakeTime",
								"offset": 0,
								"slot": "11",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 233,
								"contract": "JaiHo/system-contracts/Staking.sol:Staking",
								"label": "valStakeTime",
								"offset": 0,
								"slot": "12",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 235,
								"contract": "JaiHo/system-contracts/Staking.sol:Staking",
								"label": "lastRewardTime",
								"offset": 0,
								"slot": "13",
								"type": "t_uint256"
							},
							{
								"astId": 239,
								"contract": "JaiHo/system-contracts/Staking.sol:Staking",
								"label": "reflectionPercentSum",
								"offset": 0,
								"slot": "14",
								"type": "t_mapping(t_uint256,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_contract(InterfaceValidator)190": {
								"encoding": "inplace",
								"label": "contract InterfaceValidator",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint16": {
								"encoding": "inplace",
								"label": "uint16",
								"numberOfBytes": "2"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint64": {
								"encoding": "inplace",
								"label": "uint64",
								"numberOfBytes": "8"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"rescueCoins()": {
								"notice": "admin functions"
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"JaiHo/system-contracts/Staking.sol": {
				"ast": {
					"absolutePath": "JaiHo/system-contracts/Staking.sol",
					"exportedSymbols": {
						"Context": [
							21
						],
						"InterfaceValidator": [
							190
						],
						"Ownable": [
							131
						],
						"Staking": [
							1194
						]
					},
					"id": 1195,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "57:496:0",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 21,
							"linearizedBaseContracts": [
								21
							],
							"name": "Context",
							"nameLocation": "572:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 10,
										"nodeType": "Block",
										"src": "648:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 7,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "665:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 8,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "669:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "665:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 6,
												"id": 9,
												"nodeType": "Return",
												"src": "658:17:0"
											}
										]
									},
									"id": 11,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "595:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "605:2:0"
									},
									"returnParameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "639:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "639:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "638:9:0"
									},
									"scope": 21,
									"src": "586:96:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 19,
										"nodeType": "Block",
										"src": "755:32:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 16,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "772:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 17,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "776:4:0",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "772:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 15,
												"id": 18,
												"nodeType": "Return",
												"src": "765:15:0"
											}
										]
									},
									"id": 20,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "697:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "705:2:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "739:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 13,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "739:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "738:16:0"
									},
									"scope": 21,
									"src": "688:99:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1195,
							"src": "554:235:0",
							"usedErrors": []
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 23,
										"name": "Context",
										"nameLocations": [
											"1315:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 21,
										"src": "1315:7:0"
									},
									"id": 24,
									"nodeType": "InheritanceSpecifier",
									"src": "1315:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 22,
								"nodeType": "StructuredDocumentation",
								"src": "791:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 131,
							"linearizedBaseContracts": [
								131,
								21
							],
							"name": "Ownable",
							"nameLocation": "1304:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 26,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "1345:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 131,
									"src": "1329:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 25,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1329:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 32,
									"name": "OwnershipTransferred",
									"nameLocation": "1364:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 28,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1410:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "1394:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 27,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1394:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 30,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1449:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "1433:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 29,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1433:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1384:79:0"
									},
									"src": "1358:106:0"
								},
								{
									"body": {
										"id": 41,
										"nodeType": "Block",
										"src": "1580:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 37,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 11,
																"src": "1609:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 38,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1609:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 36,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 130,
														"src": "1590:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 39,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1590:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 40,
												"nodeType": "ExpressionStatement",
												"src": "1590:32:0"
											}
										]
									},
									"documentation": {
										"id": 33,
										"nodeType": "StructuredDocumentation",
										"src": "1470:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 42,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1577:2:0"
									},
									"returnParameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1580:0:0"
									},
									"scope": 131,
									"src": "1566:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1738:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 45,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 73,
														"src": "1748:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 46,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1748:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 47,
												"nodeType": "ExpressionStatement",
												"src": "1748:13:0"
											},
											{
												"id": 48,
												"nodeType": "PlaceholderStatement",
												"src": "1771:1:0"
											}
										]
									},
									"documentation": {
										"id": 43,
										"nodeType": "StructuredDocumentation",
										"src": "1635:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 50,
									"name": "onlyOwner",
									"nameLocation": "1726:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1735:2:0"
									},
									"src": "1717:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 58,
										"nodeType": "Block",
										"src": "1910:30:0",
										"statements": [
											{
												"expression": {
													"id": 56,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 26,
													"src": "1927:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 55,
												"id": 57,
												"nodeType": "Return",
												"src": "1920:13:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1785:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 59,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1864:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1869:2:0"
									},
									"returnParameters": {
										"id": 55,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 54,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "1901:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 53,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1901:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1900:9:0"
									},
									"scope": 131,
									"src": "1855:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 72,
										"nodeType": "Block",
										"src": "2058:85:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 68,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 64,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 59,
																	"src": "2076:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 65,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2076:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 66,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 11,
																	"src": "2087:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 67,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2087:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2076:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 69,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2101:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 63,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2068:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 70,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2068:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 71,
												"nodeType": "ExpressionStatement",
												"src": "2068:68:0"
											}
										]
									},
									"documentation": {
										"id": 60,
										"nodeType": "StructuredDocumentation",
										"src": "1946:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 73,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "2022:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 61,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2033:2:0"
									},
									"returnParameters": {
										"id": 62,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2058:0:0"
									},
									"scope": 131,
									"src": "2013:130:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 86,
										"nodeType": "Block",
										"src": "2539:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 82,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2576:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2568:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 80,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2568:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2568:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 79,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 130,
														"src": "2549:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2549:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "2549:30:0"
											}
										]
									},
									"documentation": {
										"id": 74,
										"nodeType": "StructuredDocumentation",
										"src": "2149:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 87,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 77,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 76,
												"name": "onlyOwner",
												"nameLocations": [
													"2529:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 50,
												"src": "2529:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2529:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2494:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2511:2:0"
									},
									"returnParameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2539:0:0"
									},
									"scope": 131,
									"src": "2485:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 109,
										"nodeType": "Block",
										"src": "2805:162:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 101,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 96,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 90,
																"src": "2836:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 99,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2856:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 98,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2848:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 97,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2848:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 100,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2848:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2836:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 102,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2872:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 95,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2815:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2815:107:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "2815:107:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 106,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 90,
															"src": "2951:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 105,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 130,
														"src": "2932:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2932:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 108,
												"nodeType": "ExpressionStatement",
												"src": "2932:28:0"
											}
										]
									},
									"documentation": {
										"id": 88,
										"nodeType": "StructuredDocumentation",
										"src": "2592:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 110,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 93,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 92,
												"name": "onlyOwner",
												"nameLocations": [
													"2795:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 50,
												"src": "2795:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2795:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2744:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 90,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2770:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "2762:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 89,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2762:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2761:18:0"
									},
									"returnParameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2805:0:0"
									},
									"scope": 131,
									"src": "2735:232:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 129,
										"nodeType": "Block",
										"src": "3184:124:0",
										"statements": [
											{
												"assignments": [
													117
												],
												"declarations": [
													{
														"constant": false,
														"id": 117,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "3202:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 129,
														"src": "3194:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 116,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3194:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 119,
												"initialValue": {
													"id": 118,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 26,
													"src": "3213:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3194:25:0"
											},
											{
												"expression": {
													"id": 122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 120,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 26,
														"src": "3229:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 121,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 113,
														"src": "3238:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3229:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 123,
												"nodeType": "ExpressionStatement",
												"src": "3229:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 125,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 117,
															"src": "3282:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 126,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 113,
															"src": "3292:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 124,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 32,
														"src": "3261:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 127,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3261:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 128,
												"nodeType": "EmitStatement",
												"src": "3256:45:0"
											}
										]
									},
									"documentation": {
										"id": 111,
										"nodeType": "StructuredDocumentation",
										"src": "2973:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 130,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "3130:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 113,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "3157:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 130,
												"src": "3149:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 112,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3149:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3148:18:0"
									},
									"returnParameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3184:0:0"
									},
									"scope": 131,
									"src": "3121:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1195,
							"src": "1286:2024:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "InterfaceValidator",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 190,
							"linearizedBaseContracts": [
								190
							],
							"name": "InterfaceValidator",
							"nameLocation": "3322:18:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "InterfaceValidator.Status",
									"id": 137,
									"members": [
										{
											"id": 132,
											"name": "NotExist",
											"nameLocation": "3416:8:0",
											"nodeType": "EnumValue",
											"src": "3416:8:0"
										},
										{
											"id": 133,
											"name": "Created",
											"nameLocation": "3463:7:0",
											"nodeType": "EnumValue",
											"src": "3463:7:0"
										},
										{
											"id": 134,
											"name": "Staked",
											"nameLocation": "3527:6:0",
											"nodeType": "EnumValue",
											"src": "3527:6:0"
										},
										{
											"id": 135,
											"name": "Unstaked",
											"nameLocation": "3600:8:0",
											"nodeType": "EnumValue",
											"src": "3600:8:0"
										},
										{
											"id": 136,
											"name": "Jailed",
											"nameLocation": "3688:6:0",
											"nodeType": "EnumValue",
											"src": "3688:6:0"
										}
									],
									"name": "Status",
									"nameLocation": "3352:6:0",
									"nodeType": "EnumDefinition",
									"src": "3347:353:0"
								},
								{
									"functionSelector": "3f8dc65a",
									"id": 160,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAllValidatorInfo",
									"nameLocation": "3719:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3738:2:0"
									},
									"returnParameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 140,
												"mutability": "mutable",
												"name": "totalValidatorCount",
												"nameLocation": "3772:19:0",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "3764:27:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 139,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3764:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "totalStakedCoins",
												"nameLocation": "3800:16:0",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "3792:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3792:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "3817:16:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 143,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "3817:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 144,
													"nodeType": "ArrayTypeName",
													"src": "3817:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 149,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "3834:34:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_enum$_Status_$137_$dyn_memory_ptr",
													"typeString": "enum InterfaceValidator.Status[]"
												},
												"typeName": {
													"baseType": {
														"id": 147,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 146,
															"name": "InterfaceValidator.Status",
															"nameLocations": [
																"3834:18:0",
																"3853:6:0"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 137,
															"src": "3834:25:0"
														},
														"referencedDeclaration": 137,
														"src": "3834:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Status_$137",
															"typeString": "enum InterfaceValidator.Status"
														}
													},
													"id": 148,
													"nodeType": "ArrayTypeName",
													"src": "3834:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_enum$_Status_$137_$dyn_storage_ptr",
														"typeString": "enum InterfaceValidator.Status[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "3869:16:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 150,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3869:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 151,
													"nodeType": "ArrayTypeName",
													"src": "3869:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "3886:15:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
													"typeString": "string[]"
												},
												"typeName": {
													"baseType": {
														"id": 153,
														"name": "string",
														"nodeType": "ElementaryTypeName",
														"src": "3886:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage_ptr",
															"typeString": "string"
														}
													},
													"id": 154,
													"nodeType": "ArrayTypeName",
													"src": "3886:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
														"typeString": "string[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 158,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "3902:15:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
													"typeString": "string[]"
												},
												"typeName": {
													"baseType": {
														"id": 156,
														"name": "string",
														"nodeType": "ElementaryTypeName",
														"src": "3902:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage_ptr",
															"typeString": "string"
														}
													},
													"id": 157,
													"nodeType": "ArrayTypeName",
													"src": "3902:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
														"typeString": "string[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3763:155:0"
									},
									"scope": 190,
									"src": "3710:209:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d0744e3d",
									"id": 169,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getStakingTime",
									"nameLocation": "3933:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "_staker",
												"nameLocation": "3956:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "3948:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3948:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 164,
												"mutability": "mutable",
												"name": "_validator",
												"nameLocation": "3973:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "3965:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 163,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3965:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3947:37:0"
									},
									"returnParameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "4007:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 166,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4007:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4006:9:0"
									},
									"scope": 190,
									"src": "3924:92:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "64877981",
									"id": 189,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "validatorSpecificInfo2",
									"nameLocation": "4030:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "validatorAddress",
												"nameLocation": "4061:16:0",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "4053:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4053:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "4087:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "4079:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 172,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4079:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4052:40:0"
									},
									"returnParameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "totalStakedCoins",
												"nameLocation": "4123:16:0",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "4115:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4115:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "status",
												"nameLocation": "4167:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "4141:32:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Status_$137",
													"typeString": "enum InterfaceValidator.Status"
												},
												"typeName": {
													"id": 178,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 177,
														"name": "InterfaceValidator.Status",
														"nameLocations": [
															"4141:18:0",
															"4160:6:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 137,
														"src": "4141:25:0"
													},
													"referencedDeclaration": 137,
													"src": "4141:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Status_$137",
														"typeString": "enum InterfaceValidator.Status"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "selfStakedCoins",
												"nameLocation": "4183:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "4175:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 180,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4175:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "masterVoters",
												"nameLocation": "4208:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "4200:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4200:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "stakers",
												"nameLocation": "4230:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "4222:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 184,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4222:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "4239:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 186,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4239:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4114:133:0"
									},
									"scope": 190,
									"src": "4021:227:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1195,
							"src": "3312:938:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 191,
										"name": "Ownable",
										"nameLocations": [
											"4272:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 131,
										"src": "4272:7:0"
									},
									"id": 192,
									"nodeType": "InheritanceSpecifier",
									"src": "4272:7:0"
								}
							],
							"canonicalName": "Staking",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1194,
							"linearizedBaseContracts": [
								1194,
								131,
								21
							],
							"name": "Staking",
							"nameLocation": "4261:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "fe32f55e",
									"id": 198,
									"mutability": "mutable",
									"name": "valDataContract",
									"nameLocation": "4313:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 1194,
									"src": "4287:106:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_InterfaceValidator_$190",
										"typeString": "contract InterfaceValidator"
									},
									"typeName": {
										"id": 194,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 193,
											"name": "InterfaceValidator",
											"nameLocations": [
												"4287:18:0"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 190,
											"src": "4287:18:0"
										},
										"referencedDeclaration": 190,
										"src": "4287:18:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_InterfaceValidator_$190",
											"typeString": "contract InterfaceValidator"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "307830633446364633453534353841433831303035454546383435323133373339303446313865333665",
												"id": 196,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "4350:42:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"value": "0x0c4F6F3E5458AC81005EEF84521373904F18e36e"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											],
											"id": 195,
											"name": "InterfaceValidator",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 190,
											"src": "4331:18:0",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_contract$_InterfaceValidator_$190_$",
												"typeString": "type(contract InterfaceValidator)"
											}
										},
										"id": 197,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "4331:62:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_InterfaceValidator_$190",
											"typeString": "contract InterfaceValidator"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 202,
									"mutability": "mutable",
									"name": "stakerInfo",
									"nameLocation": "4479:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 1194,
									"src": "4451:38:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 201,
										"keyType": {
											"id": 199,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "4459:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "4451:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 200,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "4470:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "be645692",
									"id": 205,
									"mutability": "mutable",
									"name": "MinimalStakingCoin",
									"nameLocation": "4512:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 1194,
									"src": "4496:44:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 203,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "4496:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 204,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "4533:7:0",
										"subdenomination": "ether",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000"
										},
										"value": "1"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "bddd6de4",
									"id": 208,
									"mutability": "mutable",
									"name": "MaxStakers",
									"nameLocation": "4561:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 1194,
									"src": "4547:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint16",
										"typeString": "uint16"
									},
									"typeName": {
										"id": 206,
										"name": "uint16",
										"nodeType": "ElementaryTypeName",
										"src": "4547:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint16",
											"typeString": "uint16"
										}
									},
									"value": {
										"hexValue": "33",
										"id": 207,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "4574:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_3_by_1",
											"typeString": "int_const 3"
										},
										"value": "3"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f6b663c3",
									"id": 211,
									"mutability": "mutable",
									"name": "currentStakerSet",
									"nameLocation": "4600:16:0",
									"nodeType": "VariableDeclaration",
									"scope": 1194,
									"src": "4583:33:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_storage",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 209,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "4583:7:0",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 210,
										"nodeType": "ArrayTypeName",
										"src": "4583:9:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8b0e9f3f",
									"id": 213,
									"mutability": "mutable",
									"name": "totalStake",
									"nameLocation": "4672:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 1194,
									"src": "4657:25:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 212,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "4657:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e6af61c8",
									"id": 215,
									"mutability": "mutable",
									"name": "totalPenalty",
									"nameLocation": "4704:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 1194,
									"src": "4689:27:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 214,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "4689:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e0639364",
									"id": 218,
									"mutability": "mutable",
									"name": "stakingLockPeriod",
									"nameLocation": "4737:17:0",
									"nodeType": "VariableDeclaration",
									"scope": 1194,
									"src": "4723:41:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint64",
										"typeString": "uint64"
									},
									"typeName": {
										"id": 216,
										"name": "uint64",
										"nodeType": "ElementaryTypeName",
										"src": "4723:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint64",
											"typeString": "uint64"
										}
									},
									"value": {
										"hexValue": "37373736303030",
										"id": 217,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "4757:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_7776000_by_1",
											"typeString": "int_const 7776000"
										},
										"value": "7776000"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "15908d51",
									"id": 221,
									"mutability": "mutable",
									"name": "penaltyPercentage",
									"nameLocation": "4786:17:0",
									"nodeType": "VariableDeclaration",
									"scope": 1194,
									"src": "4771:39:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 219,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "4771:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31303030",
										"id": 220,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "4806:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000_by_1",
											"typeString": "int_const 1000"
										},
										"value": "1000"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "cc001f16",
									"id": 225,
									"mutability": "mutable",
									"name": "rewardWithdrawalTime",
									"nameLocation": "4857:20:0",
									"nodeType": "VariableDeclaration",
									"scope": 1194,
									"src": "4825:52:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 224,
										"keyType": {
											"id": 222,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "4833:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "4825:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 223,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "4844:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "2170e472",
									"id": 229,
									"mutability": "mutable",
									"name": "stakeTime",
									"nameLocation": "4916:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 1194,
									"src": "4884:41:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 228,
										"keyType": {
											"id": 226,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "4892:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "4884:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 227,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "4903:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "82cb1c18",
									"id": 233,
									"mutability": "mutable",
									"name": "valStakeTime",
									"nameLocation": "4964:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 1194,
									"src": "4932:44:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 232,
										"keyType": {
											"id": 230,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "4940:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "4932:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 231,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "4951:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "9231cf74",
									"id": 235,
									"mutability": "mutable",
									"name": "lastRewardTime",
									"nameLocation": "5015:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 1194,
									"src": "5003:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 234,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "5003:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "5fa34ebd",
									"id": 239,
									"mutability": "mutable",
									"name": "reflectionPercentSum",
									"nameLocation": "5105:20:0",
									"nodeType": "VariableDeclaration",
									"scope": 1194,
									"src": "5076:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 238,
										"keyType": {
											"id": 236,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "5084:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "5076:21:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueType": {
											"id": 237,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "5092:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "753014cc7945cb3c93016ecb5bc2a66e26d69971a934fcfe2a882794cb344827",
									"id": 249,
									"name": "LogUnstake",
									"nameLocation": "5138:10:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"indexed": true,
												"mutability": "mutable",
												"name": "staker",
												"nameLocation": "5174:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "5158:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5158:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5198:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "5190:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5190:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"indexed": false,
												"mutability": "mutable",
												"name": "penalty",
												"nameLocation": "5222:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "5214:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5214:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"indexed": false,
												"mutability": "mutable",
												"name": "time",
												"nameLocation": "5247:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "5239:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5239:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5148:109:0"
									},
									"src": "5132:126:0"
								},
								{
									"anonymous": false,
									"eventSelector": "ddd247369eddde588b8afa794145311a9ac4ff297c32d895359c5befc1a4e1f3",
									"id": 255,
									"name": "LogDistributeReward",
									"nameLocation": "5270:19:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 251,
												"indexed": false,
												"mutability": "mutable",
												"name": "reward",
												"nameLocation": "5307:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "5299:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 250,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5299:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 253,
												"indexed": false,
												"mutability": "mutable",
												"name": "time",
												"nameLocation": "5331:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "5323:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 252,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5323:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5289:52:0"
									},
									"src": "5264:78:0"
								},
								{
									"anonymous": false,
									"eventSelector": "a0d1fa51224fb08c7c0b48d481448ad6a31c945d1a68cac8758cac3a92d5001c",
									"id": 263,
									"name": "LogStake",
									"nameLocation": "5357:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"indexed": true,
												"mutability": "mutable",
												"name": "staker",
												"nameLocation": "5391:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 263,
												"src": "5375:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5375:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 259,
												"indexed": false,
												"mutability": "mutable",
												"name": "staking",
												"nameLocation": "5415:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 263,
												"src": "5407:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 258,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5407:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 261,
												"indexed": false,
												"mutability": "mutable",
												"name": "time",
												"nameLocation": "5440:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 263,
												"src": "5432:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 260,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5432:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5365:85:0"
									},
									"src": "5351:100:0"
								},
								{
									"anonymous": false,
									"eventSelector": "77f1de51ae9c845b4fff5f1512c8736ea703337fe77421649a51f6188d3470b2",
									"id": 269,
									"name": "LogRemoveFromCurrentStaker",
									"nameLocation": "5463:26:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 265,
												"indexed": true,
												"mutability": "mutable",
												"name": "staker",
												"nameLocation": "5506:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "5490:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 264,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5490:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 267,
												"indexed": false,
												"mutability": "mutable",
												"name": "time",
												"nameLocation": "5522:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "5514:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 266,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5514:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5489:38:0"
									},
									"src": "5457:71:0"
								},
								{
									"anonymous": false,
									"eventSelector": "f03271da9252f83cabf8baf9c18589849bdadb0ad1f6268432d871380624b9e6",
									"id": 277,
									"name": "withdrawStakingRewardEv",
									"nameLocation": "5540:23:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 271,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "5580:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "5564:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 270,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5564:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 273,
												"indexed": false,
												"mutability": "mutable",
												"name": "reward",
												"nameLocation": "5590:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "5585:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 272,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5585:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 275,
												"indexed": false,
												"mutability": "mutable",
												"name": "timeStamp",
												"nameLocation": "5602:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "5597:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 274,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5597:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5563:49:0"
									},
									"src": "5534:79:0"
								},
								{
									"body": {
										"id": 384,
										"nodeType": "Block",
										"src": "5694:994:0",
										"statements": [
											{
												"assignments": [
													283
												],
												"declarations": [
													{
														"constant": false,
														"id": 283,
														"mutability": "mutable",
														"name": "staker",
														"nameLocation": "5720:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 384,
														"src": "5704:22:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														},
														"typeName": {
															"id": 282,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5704:15:0",
															"stateMutability": "payable",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 289,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 286,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5737:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 287,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5741:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5737:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 285,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "5729:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_payable_$",
															"typeString": "type(address payable)"
														},
														"typeName": {
															"id": 284,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5729:8:0",
															"stateMutability": "payable",
															"typeDescriptions": {}
														}
													},
													"id": 288,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5729:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5704:44:0"
											},
											{
												"assignments": [
													291
												],
												"declarations": [
													{
														"constant": false,
														"id": 291,
														"mutability": "mutable",
														"name": "staking",
														"nameLocation": "5766:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 384,
														"src": "5758:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 290,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5758:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 294,
												"initialValue": {
													"expression": {
														"id": 292,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "5776:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 293,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "5780:5:0",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"src": "5776:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5758:27:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 298,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 296,
																"name": "staking",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 291,
																"src": "5804:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 297,
																"name": "MinimalStakingCoin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 205,
																"src": "5815:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5804:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5374616b696e6720636f696e73206e6f7420656e6f756768",
															"id": 299,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5847:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d2ba0f653fcbe1afc9b84e320657368b893b7ad54da2f700d876aa380dcc7782",
																"typeString": "literal_string \"Staking coins not enough\""
															},
															"value": "Staking coins not enough"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d2ba0f653fcbe1afc9b84e320657368b893b7ad54da2f700d876aa380dcc7782",
																"typeString": "literal_string \"Staking coins not enough\""
															}
														],
														"id": 295,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5796:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 300,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5796:78:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 301,
												"nodeType": "ExpressionStatement",
												"src": "5796:78:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 307,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"expression": {
																			"id": 303,
																			"name": "currentStakerSet",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 211,
																			"src": "5907:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_storage",
																				"typeString": "address[] storage ref"
																			}
																		},
																		"id": 304,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5924:6:0",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5907:23:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 305,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5906:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 306,
																"name": "MaxStakers",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 208,
																"src": "5934:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															},
															"src": "5906:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e2774207374616b6520736c6f742069732066756c6c",
															"id": 308,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5958:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ba804126d815ed68ee4da90636d7a5e80cb0f9d156959f15a3e42c332e0abffb",
																"typeString": "literal_string \"Can't stake slot is full\""
															},
															"value": "Can't stake slot is full"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ba804126d815ed68ee4da90636d7a5e80cb0f9d156959f15a3e42c332e0abffb",
																"typeString": "literal_string \"Can't stake slot is full\""
															}
														],
														"id": 302,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5885:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 309,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5885:109:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 310,
												"nodeType": "ExpressionStatement",
												"src": "5885:109:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 315,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 311,
															"name": "stakerInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 202,
															"src": "6065:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 313,
														"indexExpression": {
															"id": 312,
															"name": "staker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 283,
															"src": "6076:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "6065:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 314,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6087:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6065:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 343,
													"nodeType": "Block",
													"src": "6344:54:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 340,
																		"name": "staker",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 283,
																		"src": "6380:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	],
																	"id": 339,
																	"name": "withdrawStakingReward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 646,
																	"src": "6358:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address) returns (bool)"
																	}
																},
																"id": 341,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6358:29:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 342,
															"nodeType": "ExpressionStatement",
															"src": "6358:29:0"
														}
													]
												},
												"id": 344,
												"nodeType": "IfStatement",
												"src": "6061:337:0",
												"trueBody": {
													"id": 338,
													"nodeType": "Block",
													"src": "6090:232:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 318,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 316,
																	"name": "lastRewardTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 235,
																	"src": "6107:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 317,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6125:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "6107:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 325,
															"nodeType": "IfStatement",
															"src": "6104:101:0",
															"trueBody": {
																"id": 324,
																"nodeType": "Block",
																"src": "6140:65:0",
																"statements": [
																	{
																		"expression": {
																			"id": 322,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 319,
																				"name": "lastRewardTime",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 235,
																				"src": "6158:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"expression": {
																					"id": 320,
																					"name": "block",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967292,
																					"src": "6175:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_block",
																						"typeString": "block"
																					}
																				},
																				"id": 321,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "6181:9:0",
																				"memberName": "timestamp",
																				"nodeType": "MemberAccess",
																				"src": "6175:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6158:32:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 323,
																		"nodeType": "ExpressionStatement",
																		"src": "6158:32:0"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 330,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 326,
																		"name": "rewardWithdrawalTime",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 225,
																		"src": "6218:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 328,
																	"indexExpression": {
																		"id": 327,
																		"name": "staker",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 283,
																		"src": "6239:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6218:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 329,
																	"name": "lastRewardTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 235,
																	"src": "6249:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6218:45:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 331,
															"nodeType": "ExpressionStatement",
															"src": "6218:45:0"
														},
														{
															"expression": {
																"id": 336,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 332,
																		"name": "stakeTime",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 229,
																		"src": "6277:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 334,
																	"indexExpression": {
																		"id": 333,
																		"name": "staker",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 283,
																		"src": "6287:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6277:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 335,
																	"name": "lastRewardTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 235,
																	"src": "6297:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6277:34:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 337,
															"nodeType": "ExpressionStatement",
															"src": "6277:34:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 354,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 345,
															"name": "stakerInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 202,
															"src": "6408:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 347,
														"indexExpression": {
															"id": 346,
															"name": "staker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 283,
															"src": "6419:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6408:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 353,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"id": 348,
																"name": "stakerInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 202,
																"src": "6429:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 350,
															"indexExpression": {
																"id": 349,
																"name": "staker",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 283,
																"src": "6440:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6429:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"components": [
																{
																	"id": 351,
																	"name": "staking",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 291,
																	"src": "6451:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 352,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "6450:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "6429:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6408:51:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 355,
												"nodeType": "ExpressionStatement",
												"src": "6408:51:0"
											},
											{
												"condition": {
													"id": 359,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "6474:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 357,
																"name": "staker",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 283,
																"src": "6490:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															],
															"id": 356,
															"name": "isActiveStaker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 958,
															"src": "6475:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																"typeString": "function (address) view returns (bool)"
															}
														},
														"id": 358,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6475:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 367,
												"nodeType": "IfStatement",
												"src": "6470:87:0",
												"trueBody": {
													"id": 366,
													"nodeType": "Block",
													"src": "6499:58:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 363,
																		"name": "staker",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 283,
																		"src": "6539:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	],
																	"expression": {
																		"id": 360,
																		"name": "currentStakerSet",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 211,
																		"src": "6517:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 362,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6534:4:0",
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"src": "6517:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
																		"typeString": "function (address[] storage pointer,address)"
																	}
																},
																"id": 364,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6517:29:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 365,
															"nodeType": "ExpressionStatement",
															"src": "6517:29:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 368,
														"name": "totalStake",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 213,
														"src": "6567:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 372,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 369,
															"name": "totalStake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 213,
															"src": "6580:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"components": [
																{
																	"id": 370,
																	"name": "staking",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 291,
																	"src": "6594:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 371,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "6593:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "6580:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6567:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 374,
												"nodeType": "ExpressionStatement",
												"src": "6567:35:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 376,
															"name": "staker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 283,
															"src": "6627:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 377,
															"name": "staking",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 291,
															"src": "6635:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 378,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "6644:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 379,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6650:9:0",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "6644:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 375,
														"name": "LogStake",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 263,
														"src": "6618:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 380,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6618:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 381,
												"nodeType": "EmitStatement",
												"src": "6613:47:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 382,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6677:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 281,
												"id": 383,
												"nodeType": "Return",
												"src": "6670:11:0"
											}
										]
									},
									"functionSelector": "3a4b66f1",
									"id": 385,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "stake",
									"nameLocation": "5628:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 278,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5633:2:0"
									},
									"returnParameters": {
										"id": 281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 280,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "5684:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 279,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5684:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5683:6:0"
									},
									"scope": 1194,
									"src": "5619:1069:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 519,
										"nodeType": "Block",
										"src": "6736:1129:0",
										"statements": [
											{
												"assignments": [
													391
												],
												"declarations": [
													{
														"constant": false,
														"id": 391,
														"mutability": "mutable",
														"name": "staker",
														"nameLocation": "6764:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 519,
														"src": "6748:22:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														},
														"typeName": {
															"id": 390,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6748:15:0",
															"stateMutability": "payable",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 397,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 394,
																"name": "tx",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967270,
																"src": "6781:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_transaction",
																	"typeString": "tx"
																}
															},
															"id": 395,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6784:6:0",
															"memberName": "origin",
															"nodeType": "MemberAccess",
															"src": "6781:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 393,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "6773:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_payable_$",
															"typeString": "type(address payable)"
														},
														"typeName": {
															"id": 392,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6773:8:0",
															"stateMutability": "payable",
															"typeDescriptions": {}
														}
													},
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6773:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6748:43:0"
											},
											{
												"assignments": [
													399
												],
												"declarations": [
													{
														"constant": false,
														"id": 399,
														"mutability": "mutable",
														"name": "unstakeAmount",
														"nameLocation": "6810:13:0",
														"nodeType": "VariableDeclaration",
														"scope": 519,
														"src": "6802:21:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 398,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6802:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 403,
												"initialValue": {
													"baseExpression": {
														"id": 400,
														"name": "stakerInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 202,
														"src": "6826:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 402,
													"indexExpression": {
														"id": 401,
														"name": "staker",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 391,
														"src": "6837:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6826:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6802:42:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 407,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 405,
																"name": "unstakeAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 399,
																"src": "6863:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 406,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6879:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6863:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f7520646f6e2774206861766520616e79207374616b65",
															"id": 408,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6882:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_42f46607fb15b7b6277e560cb4c47a556656af70297e39e5ca0f1a20e37a69fe",
																"typeString": "literal_string \"You don't have any stake\""
															},
															"value": "You don't have any stake"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_42f46607fb15b7b6277e560cb4c47a556656af70297e39e5ca0f1a20e37a69fe",
																"typeString": "literal_string \"You don't have any stake\""
															}
														],
														"id": 404,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6855:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 409,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6855:54:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 410,
												"nodeType": "ExpressionStatement",
												"src": "6855:54:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 412,
															"name": "staker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 391,
															"src": "6942:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 411,
														"name": "withdrawStakingReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 646,
														"src": "6920:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_bool_$",
															"typeString": "function (address) returns (bool)"
														}
													},
													"id": 413,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6920:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 414,
												"nodeType": "ExpressionStatement",
												"src": "6920:29:0"
											},
											{
												"expression": {
													"id": 424,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 415,
															"name": "stakerInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 202,
															"src": "6968:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 417,
														"indexExpression": {
															"id": 416,
															"name": "staker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 391,
															"src": "6979:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6968:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 423,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"id": 418,
																"name": "stakerInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 202,
																"src": "6989:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 420,
															"indexExpression": {
																"id": 419,
																"name": "staker",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 391,
																"src": "7000:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6989:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"components": [
																{
																	"id": 421,
																	"name": "unstakeAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 399,
																	"src": "7011:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 422,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "7010:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "6989:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6968:57:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 425,
												"nodeType": "ExpressionStatement",
												"src": "6968:57:0"
											},
											{
												"expression": {
													"id": 431,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 426,
														"name": "totalStake",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 213,
														"src": "7043:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 430,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 427,
															"name": "totalStake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 213,
															"src": "7056:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"components": [
																{
																	"id": 428,
																	"name": "unstakeAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 399,
																	"src": "7070:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 429,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "7069:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "7056:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7043:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 432,
												"nodeType": "ExpressionStatement",
												"src": "7043:41:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 434,
															"name": "staker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 391,
															"src": "7123:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 433,
														"name": "removeStakerFromCurrrentSet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 814,
														"src": "7095:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7095:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 436,
												"nodeType": "ExpressionStatement",
												"src": "7095:35:0"
											},
											{
												"assignments": [
													438
												],
												"declarations": [
													{
														"constant": false,
														"id": 438,
														"mutability": "mutable",
														"name": "remaining",
														"nameLocation": "7149:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 519,
														"src": "7141:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 437,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7141:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 439,
												"nodeType": "VariableDeclarationStatement",
												"src": "7141:17:0"
											},
											{
												"assignments": [
													441
												],
												"declarations": [
													{
														"constant": false,
														"id": 441,
														"mutability": "mutable",
														"name": "penalty",
														"nameLocation": "7176:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 519,
														"src": "7168:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 440,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7168:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 442,
												"nodeType": "VariableDeclarationStatement",
												"src": "7168:15:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 451,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 443,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "7197:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 444,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7203:9:0",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "7197:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<=",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 449,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"baseExpression": {
																			"id": 445,
																			"name": "stakeTime",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 229,
																			"src": "7217:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																				"typeString": "mapping(address => uint256)"
																			}
																		},
																		"id": 447,
																		"indexExpression": {
																			"id": 446,
																			"name": "staker",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 391,
																			"src": "7227:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "7217:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 448,
																		"name": "stakingLockPeriod",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 218,
																		"src": "7237:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	},
																	"src": "7217:37:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 450,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "7216:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "7197:58:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 454,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 452,
															"name": "penaltyPercentage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 221,
															"src": "7259:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 453,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7279:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "7259:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "7197:83:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 495,
													"nodeType": "Block",
													"src": "7582:105:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 492,
																		"name": "unstakeAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 399,
																		"src": "7662:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 489,
																				"name": "staker",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 391,
																				"src": "7645:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address_payable",
																					"typeString": "address payable"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address_payable",
																					"typeString": "address payable"
																				}
																			],
																			"id": 488,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7637:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_payable_$",
																				"typeString": "type(address payable)"
																			},
																			"typeName": {
																				"id": 487,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7637:8:0",
																				"stateMutability": "payable",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 490,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7637:15:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"id": 491,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7653:8:0",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"src": "7637:24:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 493,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7637:39:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 494,
															"nodeType": "ExpressionStatement",
															"src": "7637:39:0"
														}
													]
												},
												"id": 496,
												"nodeType": "IfStatement",
												"src": "7194:493:0",
												"trueBody": {
													"id": 486,
													"nodeType": "Block",
													"src": "7282:294:0",
													"statements": [
														{
															"expression": {
																"id": 464,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 456,
																	"name": "penalty",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 441,
																	"src": "7296:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 462,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 459,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 457,
																							"name": "unstakeAmount",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 399,
																							"src": "7308:13:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "*",
																						"rightExpression": {
																							"id": 458,
																							"name": "penaltyPercentage",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 221,
																							"src": "7324:17:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "7308:33:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 460,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "7307:35:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"hexValue": "3130303030",
																				"id": 461,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7345:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10000_by_1",
																					"typeString": "int_const 10000"
																				},
																				"value": "10000"
																			},
																			"src": "7307:43:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 463,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7306:45:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7296:55:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 465,
															"nodeType": "ExpressionStatement",
															"src": "7296:55:0"
														},
														{
															"expression": {
																"id": 470,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 466,
																	"name": "remaining",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 438,
																	"src": "7430:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 469,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 467,
																		"name": "unstakeAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 399,
																		"src": "7442:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 468,
																		"name": "penalty",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 441,
																		"src": "7458:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7442:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7430:35:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 471,
															"nodeType": "ExpressionStatement",
															"src": "7430:35:0"
														},
														{
															"expression": {
																"id": 476,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 472,
																	"name": "totalPenalty",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 215,
																	"src": "7479:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 475,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 473,
																		"name": "totalPenalty",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 215,
																		"src": "7494:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 474,
																		"name": "penalty",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 441,
																		"src": "7509:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7494:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7479:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 477,
															"nodeType": "ExpressionStatement",
															"src": "7479:37:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 483,
																		"name": "remaining",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 438,
																		"src": "7555:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 480,
																				"name": "staker",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 391,
																				"src": "7538:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address_payable",
																					"typeString": "address payable"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address_payable",
																					"typeString": "address payable"
																				}
																			],
																			"id": 479,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7530:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_payable_$",
																				"typeString": "type(address payable)"
																			},
																			"typeName": {
																				"id": 478,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7530:8:0",
																				"stateMutability": "payable",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 481,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7530:15:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"id": 482,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7546:8:0",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"src": "7530:24:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 484,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7530:35:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 485,
															"nodeType": "ExpressionStatement",
															"src": "7530:35:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 501,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 497,
															"name": "rewardWithdrawalTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 225,
															"src": "7697:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 499,
														"indexExpression": {
															"id": 498,
															"name": "staker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 391,
															"src": "7718:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7697:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 500,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7728:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7697:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 502,
												"nodeType": "ExpressionStatement",
												"src": "7697:32:0"
											},
											{
												"expression": {
													"id": 507,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 503,
															"name": "stakeTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 229,
															"src": "7740:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 505,
														"indexExpression": {
															"id": 504,
															"name": "staker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 391,
															"src": "7750:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7740:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 506,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7760:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7740:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 508,
												"nodeType": "ExpressionStatement",
												"src": "7740:21:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 510,
															"name": "staker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 391,
															"src": "7789:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 511,
															"name": "unstakeAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 399,
															"src": "7797:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 512,
															"name": "penalty",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 441,
															"src": "7812:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 513,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "7821:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 514,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7827:9:0",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "7821:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 509,
														"name": "LogUnstake",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 249,
														"src": "7778:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256,uint256)"
														}
													},
													"id": 515,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7778:59:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 516,
												"nodeType": "EmitStatement",
												"src": "7773:64:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 517,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "7854:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 389,
												"id": 518,
												"nodeType": "Return",
												"src": "7847:11:0"
											}
										]
									},
									"functionSelector": "2def6620",
									"id": 520,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unstake",
									"nameLocation": "6703:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 386,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6710:2:0"
									},
									"returnParameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 520,
												"src": "6731:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 387,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6731:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6730:6:0"
									},
									"scope": 1194,
									"src": "6694:1171:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 645,
										"nodeType": "Block",
										"src": "7943:1102:0",
										"statements": [
											{
												"assignments": [
													528
												],
												"declarations": [
													{
														"constant": false,
														"id": 528,
														"mutability": "mutable",
														"name": "validPercent",
														"nameLocation": "7958:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 645,
														"src": "7953:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 527,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "7953:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 529,
												"nodeType": "VariableDeclarationStatement",
												"src": "7953:17:0"
											},
											{
												"assignments": [
													531
												],
												"declarations": [
													{
														"constant": false,
														"id": 531,
														"mutability": "mutable",
														"name": "validValidatorPercent",
														"nameLocation": "7985:21:0",
														"nodeType": "VariableDeclaration",
														"scope": 645,
														"src": "7980:26:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 530,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "7980:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 532,
												"nodeType": "VariableDeclarationStatement",
												"src": "7980:26:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 537,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 533,
															"name": "rewardWithdrawalTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 225,
															"src": "8019:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 535,
														"indexExpression": {
															"id": 534,
															"name": "staker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 522,
															"src": "8040:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "8019:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 536,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8050:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8019:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 550,
												"nodeType": "IfStatement",
												"src": "8016:149:0",
												"trueBody": {
													"expression": {
														"id": 548,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 538,
															"name": "validPercent",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 528,
															"src": "8061:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 547,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 539,
																	"name": "reflectionPercentSum",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 239,
																	"src": "8076:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 541,
																"indexExpression": {
																	"id": 540,
																	"name": "lastRewardTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 235,
																	"src": "8097:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8076:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"baseExpression": {
																	"id": 542,
																	"name": "reflectionPercentSum",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 239,
																	"src": "8115:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 546,
																"indexExpression": {
																	"baseExpression": {
																		"id": 543,
																		"name": "rewardWithdrawalTime",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 225,
																		"src": "8136:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 545,
																	"indexExpression": {
																		"id": 544,
																		"name": "staker",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 522,
																		"src": "8157:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "8136:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8115:50:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8076:89:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "8061:104:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 549,
													"nodeType": "ExpressionStatement",
													"src": "8061:104:0"
												}
											},
											{
												"expression": {
													"id": 561,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 551,
														"name": "validValidatorPercent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 531,
														"src": "8175:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 560,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"id": 552,
																"name": "reflectionPercentSum",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 239,
																"src": "8199:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																	"typeString": "mapping(uint256 => uint256)"
																}
															},
															"id": 554,
															"indexExpression": {
																"id": 553,
																"name": "lastRewardTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 235,
																"src": "8220:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "8199:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"baseExpression": {
																"id": 555,
																"name": "reflectionPercentSum",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 239,
																"src": "8238:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																	"typeString": "mapping(uint256 => uint256)"
																}
															},
															"id": 559,
															"indexExpression": {
																"baseExpression": {
																	"id": 556,
																	"name": "valStakeTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 233,
																	"src": "8259:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 558,
																"indexExpression": {
																	"id": 557,
																	"name": "staker",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 522,
																	"src": "8272:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8259:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "8238:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "8199:81:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8175:105:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 562,
												"nodeType": "ExpressionStatement",
												"src": "8175:105:0"
											},
											{
												"assignments": [
													564,
													null,
													null,
													null,
													null,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 564,
														"mutability": "mutable",
														"name": "validatorsStakedCoins",
														"nameLocation": "8300:21:0",
														"nodeType": "VariableDeclaration",
														"scope": 645,
														"src": "8292:29:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 563,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8292:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													null,
													null,
													null,
													null,
													null
												],
												"id": 570,
												"initialValue": {
													"arguments": [
														{
															"id": 567,
															"name": "staker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 522,
															"src": "8374:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 568,
															"name": "staker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 522,
															"src": "8381:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 565,
															"name": "valDataContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 198,
															"src": "8335:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_InterfaceValidator_$190",
																"typeString": "contract InterfaceValidator"
															}
														},
														"id": 566,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8351:22:0",
														"memberName": "validatorSpecificInfo2",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 189,
														"src": "8335:38:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$_t_enum$_Status_$137_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$",
															"typeString": "function (address,address) view external returns (uint256,enum InterfaceValidator.Status,uint256,uint256,uint256,address)"
														}
													},
													"id": 569,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8335:53:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_enum$_Status_$137_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$",
														"typeString": "tuple(uint256,enum InterfaceValidator.Status,uint256,uint256,uint256,address)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8291:97:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 576,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 573,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 571,
																	"name": "validPercent",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 528,
																	"src": "8403:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 572,
																	"name": "validValidatorPercent",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 531,
																	"src": "8418:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8403:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 574,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "8402:38:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 575,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8443:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8402:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 642,
												"nodeType": "IfStatement",
												"src": "8399:619:0",
												"trueBody": {
													"id": 641,
													"nodeType": "Block",
													"src": "8454:564:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 581,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 577,
																		"name": "rewardWithdrawalTime",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 225,
																		"src": "8471:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 579,
																	"indexExpression": {
																		"id": 578,
																		"name": "staker",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 522,
																		"src": "8492:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "8471:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 580,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8502:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "8471:32:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 588,
															"nodeType": "IfStatement",
															"src": "8468:94:0",
															"trueBody": {
																"expression": {
																	"id": 586,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"baseExpression": {
																			"id": 582,
																			"name": "rewardWithdrawalTime",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 225,
																			"src": "8517:20:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																				"typeString": "mapping(address => uint256)"
																			}
																		},
																		"id": 584,
																		"indexExpression": {
																			"id": 583,
																			"name": "staker",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 522,
																			"src": "8538:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"nodeType": "IndexAccess",
																		"src": "8517:28:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"id": 585,
																		"name": "lastRewardTime",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 235,
																		"src": "8548:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8517:45:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 587,
																"nodeType": "ExpressionStatement",
																"src": "8517:45:0"
															}
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 595,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 591,
																			"name": "staker",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 522,
																			"src": "8610:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 592,
																			"name": "staker",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 522,
																			"src": "8617:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"expression": {
																			"id": 589,
																			"name": "valDataContract",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 198,
																			"src": "8579:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_InterfaceValidator_$190",
																				"typeString": "contract InterfaceValidator"
																			}
																		},
																		"id": 590,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "8595:14:0",
																		"memberName": "getStakingTime",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 169,
																		"src": "8579:30:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (address,address) view external returns (uint256)"
																		}
																	},
																	"id": 593,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8579:45:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 594,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8627:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "8579:49:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 602,
															"nodeType": "IfStatement",
															"src": "8576:103:0",
															"trueBody": {
																"expression": {
																	"id": 600,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"baseExpression": {
																			"id": 596,
																			"name": "valStakeTime",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 233,
																			"src": "8642:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																				"typeString": "mapping(address => uint256)"
																			}
																		},
																		"id": 598,
																		"indexExpression": {
																			"id": 597,
																			"name": "staker",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 522,
																			"src": "8655:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"nodeType": "IndexAccess",
																		"src": "8642:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"id": 599,
																		"name": "lastRewardTime",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 235,
																		"src": "8665:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8642:37:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 601,
																"nodeType": "ExpressionStatement",
																"src": "8642:37:0"
															}
														},
														{
															"assignments": [
																604
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 604,
																	"mutability": "mutable",
																	"name": "reward",
																	"nameLocation": "8698:6:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 641,
																	"src": "8693:11:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 603,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "8693:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 612,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 611,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 609,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"baseExpression": {
																			"id": 605,
																			"name": "stakerInfo",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 202,
																			"src": "8707:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																				"typeString": "mapping(address => uint256)"
																			}
																		},
																		"id": 607,
																		"indexExpression": {
																			"id": 606,
																			"name": "staker",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 522,
																			"src": "8718:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "8707:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 608,
																		"name": "validPercent",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 528,
																		"src": "8728:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8707:33:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"hexValue": "31303030303030303030303030303030303030",
																	"id": 610,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8743:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	},
																	"value": "1000000000000000000"
																},
																"src": "8707:55:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "8693:69:0"
														},
														{
															"assignments": [
																614
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 614,
																	"mutability": "mutable",
																	"name": "valReward",
																	"nameLocation": "8781:9:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 641,
																	"src": "8776:14:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 613,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "8776:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 620,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 619,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 617,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 615,
																		"name": "validatorsStakedCoins",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 564,
																		"src": "8793:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 616,
																		"name": "validValidatorPercent",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 531,
																		"src": "8817:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8793:45:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"hexValue": "31303030303030303030303030303030303030",
																	"id": 618,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8841:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	},
																	"value": "1000000000000000000"
																},
																"src": "8793:67:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "8776:84:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 628,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 626,
																			"name": "reward",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 604,
																			"src": "8899:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"id": 627,
																			"name": "valReward",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 614,
																			"src": "8908:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "8899:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 623,
																				"name": "staker",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 522,
																				"src": "8882:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 622,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8874:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_payable_$",
																				"typeString": "type(address payable)"
																			},
																			"typeName": {
																				"id": 621,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8874:8:0",
																				"stateMutability": "payable",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 624,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8874:15:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"id": 625,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "8890:8:0",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"src": "8874:24:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 629,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8874:44:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 630,
															"nodeType": "ExpressionStatement",
															"src": "8874:44:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 632,
																		"name": "staker",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 522,
																		"src": "8961:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 635,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 633,
																					"name": "reward",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 604,
																					"src": "8970:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "+",
																				"rightExpression": {
																					"id": 634,
																					"name": "valReward",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 614,
																					"src": "8979:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8970:18:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 636,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "8969:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"expression": {
																			"id": 637,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "8991:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 638,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "8997:9:0",
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"src": "8991:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 631,
																	"name": "withdrawStakingRewardEv",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 277,
																	"src": "8937:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256,uint256)"
																	}
																},
																"id": 639,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8937:70:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 640,
															"nodeType": "EmitStatement",
															"src": "8932:75:0"
														}
													]
												}
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 643,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "9034:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 526,
												"id": 644,
												"nodeType": "Return",
												"src": "9027:11:0"
											}
										]
									},
									"functionSelector": "72d30a70",
									"id": 646,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawStakingReward",
									"nameLocation": "7880:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 522,
												"mutability": "mutable",
												"name": "staker",
												"nameLocation": "7910:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 646,
												"src": "7902:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 521,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7902:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7901:16:0"
									},
									"returnParameters": {
										"id": 526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 525,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 646,
												"src": "7933:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 524,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7933:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7932:6:0"
									},
									"scope": 1194,
									"src": "7871:1174:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 756,
										"nodeType": "Block",
										"src": "9197:1045:0",
										"statements": [
											{
												"assignments": [
													650
												],
												"declarations": [
													{
														"constant": false,
														"id": 650,
														"mutability": "mutable",
														"name": "reward",
														"nameLocation": "9215:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 756,
														"src": "9207:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 649,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9207:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 655,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 654,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 651,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "9224:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 652,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9228:5:0",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "9224:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 653,
														"name": "totalPenalty",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 215,
														"src": "9236:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9224:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9207:41:0"
											},
											{
												"assignments": [
													657,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 657,
														"mutability": "mutable",
														"name": "totalstakes",
														"nameLocation": "9268:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 756,
														"src": "9260:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 656,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9260:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 664,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 661,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9327:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 660,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9319:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 659,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9319:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 662,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9319:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 658,
														"name": "getTotalStakeOfActiveStakersExcept",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 926,
														"src": "9284:34:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$_t_uint256_$",
															"typeString": "function (address) view returns (uint256,uint256)"
														}
													},
													"id": 663,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9284:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9259:71:0"
											},
											{
												"assignments": [
													null,
													null,
													669,
													null,
													null,
													null,
													null
												],
												"declarations": [
													null,
													null,
													{
														"constant": false,
														"id": 669,
														"mutability": "mutable",
														"name": "highestValidatorsSet",
														"nameLocation": "9362:20:0",
														"nodeType": "VariableDeclaration",
														"scope": 756,
														"src": "9345:37:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[]"
														},
														"typeName": {
															"baseType": {
																"id": 667,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9345:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 668,
															"nodeType": "ArrayTypeName",
															"src": "9345:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														},
														"visibility": "internal"
													},
													null,
													null,
													null,
													null
												],
												"id": 673,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 670,
															"name": "valDataContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 198,
															"src": "9393:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_InterfaceValidator_$190",
																"typeString": "contract InterfaceValidator"
															}
														},
														"id": 671,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9409:19:0",
														"memberName": "getAllValidatorInfo",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 160,
														"src": "9393:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_enum$_Status_$137_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$",
															"typeString": "function () view external returns (uint256,uint256,address[] memory,enum InterfaceValidator.Status[] memory,uint256[] memory,string memory[] memory,string memory[] memory)"
														}
													},
													"id": 672,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9393:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_enum$_Status_$137_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$",
														"typeString": "tuple(uint256,uint256,address[] memory,enum InterfaceValidator.Status[] memory,uint256[] memory,string memory[] memory,string memory[] memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9341:89:0"
											},
											{
												"assignments": [
													675
												],
												"declarations": [
													{
														"constant": false,
														"id": 675,
														"mutability": "mutable",
														"name": "totalValidators",
														"nameLocation": "9448:15:0",
														"nodeType": "VariableDeclaration",
														"scope": 756,
														"src": "9440:23:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 674,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9440:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 678,
												"initialValue": {
													"expression": {
														"id": 676,
														"name": "highestValidatorsSet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 669,
														"src": "9466:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[] memory"
														}
													},
													"id": 677,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "9487:6:0",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "9466:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9440:53:0"
											},
											{
												"assignments": [
													680
												],
												"declarations": [
													{
														"constant": false,
														"id": 680,
														"mutability": "mutable",
														"name": "totalValidatorsStakedCoins",
														"nameLocation": "9511:26:0",
														"nodeType": "VariableDeclaration",
														"scope": 756,
														"src": "9503:34:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 679,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9503:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 681,
												"nodeType": "VariableDeclarationStatement",
												"src": "9503:34:0"
											},
											{
												"body": {
													"id": 708,
													"nodeType": "Block",
													"src": "9588:214:0",
													"statements": [
														{
															"assignments": [
																693,
																null,
																null,
																null,
																null,
																null
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 693,
																	"mutability": "mutable",
																	"name": "validatorsStakedCoins",
																	"nameLocation": "9608:21:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 708,
																	"src": "9600:29:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 692,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "9600:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																},
																null,
																null,
																null,
																null,
																null
															],
															"id": 703,
															"initialValue": {
																"arguments": [
																	{
																		"baseExpression": {
																			"id": 696,
																			"name": "highestValidatorsSet",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 669,
																			"src": "9682:20:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																				"typeString": "address[] memory"
																			}
																		},
																		"id": 698,
																		"indexExpression": {
																			"id": 697,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 683,
																			"src": "9703:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "9682:23:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"baseExpression": {
																			"id": 699,
																			"name": "highestValidatorsSet",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 669,
																			"src": "9706:20:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																				"typeString": "address[] memory"
																			}
																		},
																		"id": 701,
																		"indexExpression": {
																			"id": 700,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 683,
																			"src": "9727:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "9706:23:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 694,
																		"name": "valDataContract",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 198,
																		"src": "9643:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_InterfaceValidator_$190",
																			"typeString": "contract InterfaceValidator"
																		}
																	},
																	"id": 695,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "9659:22:0",
																	"memberName": "validatorSpecificInfo2",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 189,
																	"src": "9643:38:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$_t_enum$_Status_$137_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$",
																		"typeString": "function (address,address) view external returns (uint256,enum InterfaceValidator.Status,uint256,uint256,uint256,address)"
																	}
																},
																"id": 702,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9643:87:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_uint256_$_t_enum$_Status_$137_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$",
																	"typeString": "tuple(uint256,enum InterfaceValidator.Status,uint256,uint256,uint256,address)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "9599:131:0"
														},
														{
															"expression": {
																"id": 706,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 704,
																	"name": "totalValidatorsStakedCoins",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 680,
																	"src": "9740:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 705,
																	"name": "validatorsStakedCoins",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 693,
																	"src": "9770:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9740:51:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 707,
															"nodeType": "ExpressionStatement",
															"src": "9740:51:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 688,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 686,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 683,
														"src": "9563:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 687,
														"name": "totalValidators",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 675,
														"src": "9567:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9563:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 709,
												"initializationExpression": {
													"assignments": [
														683
													],
													"declarations": [
														{
															"constant": false,
															"id": 683,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "9558:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 709,
															"src": "9552:7:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															"typeName": {
																"id": 682,
																"name": "uint8",
																"nodeType": "ElementaryTypeName",
																"src": "9552:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 685,
													"initialValue": {
														"hexValue": "30",
														"id": 684,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9560:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "9552:9:0"
												},
												"loopExpression": {
													"expression": {
														"id": 690,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "9584:3:0",
														"subExpression": {
															"id": 689,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 683,
															"src": "9584:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"id": 691,
													"nodeType": "ExpressionStatement",
													"src": "9584:3:0"
												},
												"nodeType": "ForStatement",
												"src": "9548:254:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 715,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 713,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 711,
																	"name": "totalstakes",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 657,
																	"src": "9820:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 712,
																	"name": "totalValidatorsStakedCoins",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 680,
																	"src": "9834:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9820:40:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 714,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9863:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9820:44:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f207374616b657273",
															"id": 716,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9866:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_54025137788e7e9d462111aca326bb911826fad4e8e597c5ee14218225070076",
																"typeString": "literal_string \"No stakers\""
															},
															"value": "No stakers"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_54025137788e7e9d462111aca326bb911826fad4e8e597c5ee14218225070076",
																"typeString": "literal_string \"No stakers\""
															}
														],
														"id": 710,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9812:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 717,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9812:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 718,
												"nodeType": "ExpressionStatement",
												"src": "9812:67:0"
											},
											{
												"assignments": [
													720
												],
												"declarations": [
													{
														"constant": false,
														"id": 720,
														"mutability": "mutable",
														"name": "lastRewardHold",
														"nameLocation": "9895:14:0",
														"nodeType": "VariableDeclaration",
														"scope": 756,
														"src": "9890:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 719,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "9890:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 724,
												"initialValue": {
													"baseExpression": {
														"id": 721,
														"name": "reflectionPercentSum",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 239,
														"src": "9912:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
															"typeString": "mapping(uint256 => uint256)"
														}
													},
													"id": 723,
													"indexExpression": {
														"id": 722,
														"name": "lastRewardTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 235,
														"src": "9933:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9912:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9890:58:0"
											},
											{
												"expression": {
													"id": 728,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 725,
														"name": "lastRewardTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 235,
														"src": "9958:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 726,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "9975:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 727,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9981:9:0",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "9975:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9958:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 729,
												"nodeType": "ExpressionStatement",
												"src": "9958:32:0"
											},
											{
												"expression": {
													"id": 744,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 730,
															"name": "reflectionPercentSum",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 239,
															"src": "10009:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 732,
														"indexExpression": {
															"id": 731,
															"name": "lastRewardTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 235,
															"src": "10030:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10009:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 743,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 733,
															"name": "lastRewardHold",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 720,
															"src": "10048:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 741,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 736,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 734,
																			"name": "reward",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 650,
																			"src": "10066:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "31303030303030303030303030303030303030",
																			"id": 735,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10075:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1000000000000000000_by_1",
																				"typeString": "int_const 1000000000000000000"
																			},
																			"value": "1000000000000000000"
																		},
																		"src": "10066:28:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 739,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 737,
																					"name": "totalstakes",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 657,
																					"src": "10098:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "+",
																				"rightExpression": {
																					"id": 738,
																					"name": "totalValidatorsStakedCoins",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 680,
																					"src": "10112:26:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10098:40:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 740,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "10097:42:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10066:73:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 742,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "10065:75:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "10048:92:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10009:131:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 745,
												"nodeType": "ExpressionStatement",
												"src": "10009:131:0"
											},
											{
												"expression": {
													"id": 748,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 746,
														"name": "totalPenalty",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 215,
														"src": "10150:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 747,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10165:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "10150:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 749,
												"nodeType": "ExpressionStatement",
												"src": "10150:16:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 751,
															"name": "reward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 650,
															"src": "10211:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 752,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "10219:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 753,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10225:9:0",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "10219:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 750,
														"name": "LogDistributeReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 255,
														"src": "10191:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 754,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10191:44:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 755,
												"nodeType": "EmitStatement",
												"src": "10186:49:0"
											}
										]
									},
									"functionSelector": "8f73c5ae",
									"id": 757,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "distributeReward",
									"nameLocation": "9141:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 647,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9157:2:0"
									},
									"returnParameters": {
										"id": 648,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9197:0:0"
									},
									"scope": 1194,
									"src": "9132:1110:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 813,
										"nodeType": "Block",
										"src": "10309:546:0",
										"statements": [
											{
												"body": {
													"id": 811,
													"nodeType": "Block",
													"src": "10419:430:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 777,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 773,
																	"name": "staker",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 759,
																	"src": "10437:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"baseExpression": {
																		"id": 774,
																		"name": "currentStakerSet",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 211,
																		"src": "10447:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 776,
																	"indexExpression": {
																		"id": 775,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 763,
																		"src": "10464:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "10447:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "10437:29:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 810,
															"nodeType": "IfStatement",
															"src": "10433:406:0",
															"trueBody": {
																"id": 809,
																"nodeType": "Block",
																"src": "10468:371:0",
																"statements": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 783,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 778,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 763,
																				"src": "10519:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "!=",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 782,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"expression": {
																						"id": 779,
																						"name": "currentStakerSet",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 211,
																						"src": "10524:16:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_address_$dyn_storage",
																							"typeString": "address[] storage ref"
																						}
																					},
																					"id": 780,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "10541:6:0",
																					"memberName": "length",
																					"nodeType": "MemberAccess",
																					"src": "10524:23:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"hexValue": "31",
																					"id": 781,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "10550:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "10524:27:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10519:32:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 796,
																		"nodeType": "IfStatement",
																		"src": "10515:171:0",
																		"trueBody": {
																			"id": 795,
																			"nodeType": "Block",
																			"src": "10553:133:0",
																			"statements": [
																				{
																					"expression": {
																						"id": 793,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"baseExpression": {
																								"id": 784,
																								"name": "currentStakerSet",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 211,
																								"src": "10575:16:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_address_$dyn_storage",
																									"typeString": "address[] storage ref"
																								}
																							},
																							"id": 786,
																							"indexExpression": {
																								"id": 785,
																								"name": "i",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 763,
																								"src": "10592:1:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": true,
																							"nodeType": "IndexAccess",
																							"src": "10575:19:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "=",
																						"rightHandSide": {
																							"baseExpression": {
																								"id": 787,
																								"name": "currentStakerSet",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 211,
																								"src": "10597:16:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_address_$dyn_storage",
																									"typeString": "address[] storage ref"
																								}
																							},
																							"id": 792,
																							"indexExpression": {
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 791,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"expression": {
																										"id": 788,
																										"name": "currentStakerSet",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 211,
																										"src": "10614:16:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_array$_t_address_$dyn_storage",
																											"typeString": "address[] storage ref"
																										}
																									},
																									"id": 789,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberLocation": "10656:6:0",
																									"memberName": "length",
																									"nodeType": "MemberAccess",
																									"src": "10614:48:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "-",
																								"rightExpression": {
																									"hexValue": "31",
																									"id": 790,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "10665:1:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_1_by_1",
																										"typeString": "int_const 1"
																									},
																									"value": "1"
																								},
																								"src": "10614:52:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "10597:70:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"src": "10575:92:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"id": 794,
																					"nodeType": "ExpressionStatement",
																					"src": "10575:92:0"
																				}
																			]
																		}
																	},
																	{
																		"expression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"expression": {
																					"id": 797,
																					"name": "currentStakerSet",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 211,
																					"src": "10704:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_storage",
																						"typeString": "address[] storage ref"
																					}
																				},
																				"id": 799,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "10721:3:0",
																				"memberName": "pop",
																				"nodeType": "MemberAccess",
																				"src": "10704:20:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
																					"typeString": "function (address[] storage pointer)"
																				}
																			},
																			"id": 800,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10704:22:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 801,
																		"nodeType": "ExpressionStatement",
																		"src": "10704:22:0"
																	},
																	{
																		"eventCall": {
																			"arguments": [
																				{
																					"id": 803,
																					"name": "staker",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 759,
																					"src": "10776:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"expression": {
																						"id": 804,
																						"name": "block",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967292,
																						"src": "10784:5:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_block",
																							"typeString": "block"
																						}
																					},
																					"id": 805,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "10790:9:0",
																					"memberName": "timestamp",
																					"nodeType": "MemberAccess",
																					"src": "10784:15:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 802,
																				"name": "LogRemoveFromCurrentStaker",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 269,
																				"src": "10749:26:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256)"
																				}
																			},
																			"id": 806,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10749:51:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 807,
																		"nodeType": "EmitStatement",
																		"src": "10744:56:0"
																	},
																	{
																		"id": 808,
																		"nodeType": "Break",
																		"src": "10819:5:0"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 769,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 766,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 763,
														"src": "10364:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 767,
															"name": "currentStakerSet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 211,
															"src": "10368:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 768,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "10385:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "10368:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10364:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 812,
												"initializationExpression": {
													"assignments": [
														763
													],
													"declarations": [
														{
															"constant": false,
															"id": 763,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "10345:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 812,
															"src": "10337:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 762,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "10337:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 765,
													"initialValue": {
														"hexValue": "30",
														"id": 764,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10349:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "10337:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 771,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "10405:3:0",
														"subExpression": {
															"id": 770,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 763,
															"src": "10405:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 772,
													"nodeType": "ExpressionStatement",
													"src": "10405:3:0"
												},
												"nodeType": "ForStatement",
												"src": "10319:530:0"
											}
										]
									},
									"id": 814,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "removeStakerFromCurrrentSet",
									"nameLocation": "10257:27:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 760,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 759,
												"mutability": "mutable",
												"name": "staker",
												"nameLocation": "10293:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 814,
												"src": "10285:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 758,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10285:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10284:16:0"
									},
									"returnParameters": {
										"id": 761,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10309:0:0"
									},
									"scope": 1194,
									"src": "10248:607:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 840,
										"nodeType": "Block",
										"src": "10944:147:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 833,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 829,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 821,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "10958:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 822,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10964:9:0",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "10958:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<=",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 827,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"baseExpression": {
																			"id": 823,
																			"name": "stakeTime",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 229,
																			"src": "10978:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																				"typeString": "mapping(address => uint256)"
																			}
																		},
																		"id": 825,
																		"indexExpression": {
																			"id": 824,
																			"name": "staker",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 816,
																			"src": "10988:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "10978:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 826,
																		"name": "stakingLockPeriod",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 218,
																		"src": "10998:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	},
																	"src": "10978:37:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 828,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "10977:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "10958:58:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 832,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 830,
															"name": "penaltyPercentage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 221,
															"src": "11020:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 831,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11040:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "11020:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "10958:83:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 839,
												"nodeType": "IfStatement",
												"src": "10955:130:0",
												"trueBody": {
													"id": 838,
													"nodeType": "Block",
													"src": "11043:42:0",
													"statements": [
														{
															"expression": {
																"id": 836,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 834,
																	"name": "isPenalty",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 819,
																	"src": "11057:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 835,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11069:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "11057:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 837,
															"nodeType": "ExpressionStatement",
															"src": "11057:16:0"
														}
													]
												}
											}
										]
									},
									"functionSelector": "41f349b5",
									"id": 841,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "checkforpenalty",
									"nameLocation": "10870:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 817,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 816,
												"mutability": "mutable",
												"name": "staker",
												"nameLocation": "10894:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 841,
												"src": "10886:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 815,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10886:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10885:16:0"
									},
									"returnParameters": {
										"id": 820,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 819,
												"mutability": "mutable",
												"name": "isPenalty",
												"nameLocation": "10929:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 841,
												"src": "10924:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 818,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10924:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10923:16:0"
									},
									"scope": 1194,
									"src": "10861:230:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 853,
										"nodeType": "Block",
										"src": "11217:66:0",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"baseExpression": {
																"id": 848,
																"name": "stakerInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 202,
																"src": "11248:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 850,
															"indexExpression": {
																"id": 849,
																"name": "staker",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 843,
																"src": "11259:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "11248:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 851,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "11234:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 847,
												"id": 852,
												"nodeType": "Return",
												"src": "11227:49:0"
											}
										]
									},
									"functionSelector": "aa4704f3",
									"id": 854,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStakingInfo",
									"nameLocation": "11106:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 844,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 843,
												"mutability": "mutable",
												"name": "staker",
												"nameLocation": "11129:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "11121:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 842,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11121:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11120:16:0"
									},
									"returnParameters": {
										"id": 847,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 846,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "11195:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 845,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11195:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11181:31:0"
									},
									"scope": 1194,
									"src": "11097:186:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 862,
										"nodeType": "Block",
										"src": "11356:40:0",
										"statements": [
											{
												"expression": {
													"id": 860,
													"name": "currentStakerSet",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 211,
													"src": "11373:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage",
														"typeString": "address[] storage ref"
													}
												},
												"functionReturnParameters": 859,
												"id": 861,
												"nodeType": "Return",
												"src": "11366:23:0"
											}
										]
									},
									"functionSelector": "9fb82db9",
									"id": 863,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getActiveStakers",
									"nameLocation": "11298:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 855,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11314:2:0"
									},
									"returnParameters": {
										"id": 859,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 858,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 863,
												"src": "11338:16:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 856,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "11338:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 857,
													"nodeType": "ArrayTypeName",
													"src": "11338:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11337:18:0"
									},
									"scope": 1194,
									"src": "11289:107:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 877,
										"nodeType": "Block",
										"src": "11519:70:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 873,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11579:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 872,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11571:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 871,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11571:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 874,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11571:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 870,
														"name": "getTotalStakeOfActiveStakersExcept",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 926,
														"src": "11536:34:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$_t_uint256_$",
															"typeString": "function (address) view returns (uint256,uint256)"
														}
													},
													"id": 875,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11536:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"functionReturnParameters": 869,
												"id": 876,
												"nodeType": "Return",
												"src": "11529:53:0"
											}
										]
									},
									"functionSelector": "e75bcb96",
									"id": 878,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTotalStakeOfActiveStakers",
									"nameLocation": "11411:28:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 864,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11439:2:0"
									},
									"returnParameters": {
										"id": 869,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 866,
												"mutability": "mutable",
												"name": "total",
												"nameLocation": "11495:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 878,
												"src": "11487:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 865,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11487:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 868,
												"mutability": "mutable",
												"name": "len",
												"nameLocation": "11510:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 878,
												"src": "11502:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 867,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11502:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11486:28:0"
									},
									"scope": 1194,
									"src": "11402:187:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 925,
										"nodeType": "Block",
										"src": "11730:291:0",
										"statements": [
											{
												"body": {
													"id": 919,
													"nodeType": "Block",
													"src": "11794:191:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 902,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 898,
																	"name": "sta",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 880,
																	"src": "11829:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"baseExpression": {
																		"id": 899,
																		"name": "currentStakerSet",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 211,
																		"src": "11836:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 901,
																	"indexExpression": {
																		"id": 900,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 888,
																		"src": "11853:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "11836:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "11829:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 918,
															"nodeType": "IfStatement",
															"src": "11808:167:0",
															"trueBody": {
																"id": 917,
																"nodeType": "Block",
																"src": "11870:105:0",
																"statements": [
																	{
																		"expression": {
																			"id": 912,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 903,
																				"name": "total",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 883,
																				"src": "11888:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 911,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 904,
																					"name": "total",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 883,
																					"src": "11896:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "+",
																				"rightExpression": {
																					"components": [
																						{
																							"baseExpression": {
																								"id": 905,
																								"name": "stakerInfo",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 202,
																								"src": "11905:10:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																									"typeString": "mapping(address => uint256)"
																								}
																							},
																							"id": 909,
																							"indexExpression": {
																								"baseExpression": {
																									"id": 906,
																									"name": "currentStakerSet",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 211,
																									"src": "11916:16:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_array$_t_address_$dyn_storage",
																										"typeString": "address[] storage ref"
																									}
																								},
																								"id": 908,
																								"indexExpression": {
																									"id": 907,
																									"name": "i",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 888,
																									"src": "11933:1:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "11916:19:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "11905:31:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 910,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "11904:33:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11896:41:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "11888:49:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 913,
																		"nodeType": "ExpressionStatement",
																		"src": "11888:49:0"
																	},
																	{
																		"expression": {
																			"id": 915,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "++",
																			"prefix": false,
																			"src": "11955:5:0",
																			"subExpression": {
																				"id": 914,
																				"name": "len",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 885,
																				"src": "11955:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 916,
																		"nodeType": "ExpressionStatement",
																		"src": "11955:5:0"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 894,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 891,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 888,
														"src": "11760:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 892,
															"name": "currentStakerSet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 211,
															"src": "11764:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 893,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "11781:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "11764:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11760:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 920,
												"initializationExpression": {
													"assignments": [
														888
													],
													"declarations": [
														{
															"constant": false,
															"id": 888,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "11753:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 920,
															"src": "11745:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 887,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "11745:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 890,
													"initialValue": {
														"hexValue": "30",
														"id": 889,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11757:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "11745:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 896,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "11789:3:0",
														"subExpression": {
															"id": 895,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 888,
															"src": "11789:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 897,
													"nodeType": "ExpressionStatement",
													"src": "11789:3:0"
												},
												"nodeType": "ForStatement",
												"src": "11740:245:0"
											},
											{
												"expression": {
													"components": [
														{
															"id": 921,
															"name": "total",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 883,
															"src": "12003:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 922,
															"name": "len",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 885,
															"src": "12010:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 923,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "12002:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"functionReturnParameters": 886,
												"id": 924,
												"nodeType": "Return",
												"src": "11995:19:0"
											}
										]
									},
									"id": 926,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTotalStakeOfActiveStakersExcept",
									"nameLocation": "11604:34:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 881,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 880,
												"mutability": "mutable",
												"name": "sta",
												"nameLocation": "11647:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 926,
												"src": "11639:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 879,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11639:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11638:13:0"
									},
									"returnParameters": {
										"id": 886,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 883,
												"mutability": "mutable",
												"name": "total",
												"nameLocation": "11706:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 926,
												"src": "11698:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 882,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11698:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 885,
												"mutability": "mutable",
												"name": "len",
												"nameLocation": "11721:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 926,
												"src": "11713:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 884,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11713:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11697:28:0"
									},
									"scope": 1194,
									"src": "11595:426:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 957,
										"nodeType": "Block",
										"src": "12091:193:0",
										"statements": [
											{
												"body": {
													"id": 953,
													"nodeType": "Block",
													"src": "12155:100:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 948,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 944,
																		"name": "currentStakerSet",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 211,
																		"src": "12173:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 946,
																	"indexExpression": {
																		"id": 945,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 934,
																		"src": "12190:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "12173:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 947,
																	"name": "who",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 928,
																	"src": "12196:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "12173:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 952,
															"nodeType": "IfStatement",
															"src": "12169:76:0",
															"trueBody": {
																"id": 951,
																"nodeType": "Block",
																"src": "12201:44:0",
																"statements": [
																	{
																		"expression": {
																			"hexValue": "74727565",
																			"id": 949,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "bool",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12226:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"value": "true"
																		},
																		"functionReturnParameters": 932,
																		"id": 950,
																		"nodeType": "Return",
																		"src": "12219:11:0"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 940,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 937,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 934,
														"src": "12121:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 938,
															"name": "currentStakerSet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 211,
															"src": "12125:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 939,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "12142:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "12125:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12121:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 954,
												"initializationExpression": {
													"assignments": [
														934
													],
													"declarations": [
														{
															"constant": false,
															"id": 934,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "12114:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 954,
															"src": "12106:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 933,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "12106:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 936,
													"initialValue": {
														"hexValue": "30",
														"id": 935,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12118:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "12106:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 942,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "12150:3:0",
														"subExpression": {
															"id": 941,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 934,
															"src": "12150:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 943,
													"nodeType": "ExpressionStatement",
													"src": "12150:3:0"
												},
												"nodeType": "ForStatement",
												"src": "12101:154:0"
											},
											{
												"expression": {
													"hexValue": "66616c7365",
													"id": 955,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12272:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "false"
												},
												"functionReturnParameters": 932,
												"id": 956,
												"nodeType": "Return",
												"src": "12265:12:0"
											}
										]
									},
									"functionSelector": "68015791",
									"id": 958,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isActiveStaker",
									"nameLocation": "12036:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 929,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 928,
												"mutability": "mutable",
												"name": "who",
												"nameLocation": "12059:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 958,
												"src": "12051:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 927,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12051:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12050:13:0"
									},
									"returnParameters": {
										"id": 932,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 931,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 958,
												"src": "12085:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 930,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12085:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12084:6:0"
									},
									"scope": 1194,
									"src": "12027:257:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1044,
										"nodeType": "Block",
										"src": "12392:827:0",
										"statements": [
											{
												"assignments": [
													968
												],
												"declarations": [
													{
														"constant": false,
														"id": 968,
														"mutability": "mutable",
														"name": "validPercent",
														"nameLocation": "12411:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 1044,
														"src": "12406:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 967,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "12406:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 969,
												"nodeType": "VariableDeclarationStatement",
												"src": "12406:17:0"
											},
											{
												"assignments": [
													971
												],
												"declarations": [
													{
														"constant": false,
														"id": 971,
														"mutability": "mutable",
														"name": "validValidatorPercent",
														"nameLocation": "12442:21:0",
														"nodeType": "VariableDeclaration",
														"scope": 1044,
														"src": "12437:26:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 970,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "12437:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 972,
												"nodeType": "VariableDeclarationStatement",
												"src": "12437:26:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 977,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 973,
															"name": "rewardWithdrawalTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 225,
															"src": "12480:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 975,
														"indexExpression": {
															"id": 974,
															"name": "_staker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 960,
															"src": "12501:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "12480:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 976,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12512:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "12480:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 990,
												"nodeType": "IfStatement",
												"src": "12477:155:0",
												"trueBody": {
													"expression": {
														"id": 988,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 978,
															"name": "validPercent",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 968,
															"src": "12527:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 987,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 979,
																	"name": "reflectionPercentSum",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 239,
																	"src": "12542:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 981,
																"indexExpression": {
																	"id": 980,
																	"name": "lastRewardTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 235,
																	"src": "12563:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "12542:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"baseExpression": {
																	"id": 982,
																	"name": "reflectionPercentSum",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 239,
																	"src": "12581:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 986,
																"indexExpression": {
																	"baseExpression": {
																		"id": 983,
																		"name": "rewardWithdrawalTime",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 225,
																		"src": "12602:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 985,
																	"indexExpression": {
																		"id": 984,
																		"name": "_staker",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 960,
																		"src": "12623:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "12602:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "12581:51:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "12542:90:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "12527:105:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 989,
													"nodeType": "ExpressionStatement",
													"src": "12527:105:0"
												}
											},
											{
												"expression": {
													"id": 1001,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 991,
														"name": "validValidatorPercent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 971,
														"src": "12646:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1000,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"id": 992,
																"name": "reflectionPercentSum",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 239,
																"src": "12670:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																	"typeString": "mapping(uint256 => uint256)"
																}
															},
															"id": 994,
															"indexExpression": {
																"id": 993,
																"name": "lastRewardTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 235,
																"src": "12691:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "12670:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"baseExpression": {
																"id": 995,
																"name": "reflectionPercentSum",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 239,
																"src": "12709:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																	"typeString": "mapping(uint256 => uint256)"
																}
															},
															"id": 999,
															"indexExpression": {
																"baseExpression": {
																	"id": 996,
																	"name": "valStakeTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 233,
																	"src": "12730:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 998,
																"indexExpression": {
																	"id": 997,
																	"name": "_staker",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 960,
																	"src": "12743:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "12730:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "12709:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "12670:82:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12646:106:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1002,
												"nodeType": "ExpressionStatement",
												"src": "12646:106:0"
											},
											{
												"assignments": [
													1004,
													null,
													null,
													null,
													null,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1004,
														"mutability": "mutable",
														"name": "validatorsStakedCoins",
														"nameLocation": "12776:21:0",
														"nodeType": "VariableDeclaration",
														"scope": 1044,
														"src": "12768:29:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1003,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12768:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													null,
													null,
													null,
													null,
													null
												],
												"id": 1010,
												"initialValue": {
													"arguments": [
														{
															"id": 1007,
															"name": "_staker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 960,
															"src": "12850:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1008,
															"name": "_staker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 960,
															"src": "12858:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1005,
															"name": "valDataContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 198,
															"src": "12811:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_InterfaceValidator_$190",
																"typeString": "contract InterfaceValidator"
															}
														},
														"id": 1006,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "12827:22:0",
														"memberName": "validatorSpecificInfo2",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 189,
														"src": "12811:38:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$_t_enum$_Status_$137_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$",
															"typeString": "function (address,address) view external returns (uint256,enum InterfaceValidator.Status,uint256,uint256,uint256,address)"
														}
													},
													"id": 1009,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12811:55:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_enum$_Status_$137_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$",
														"typeString": "tuple(uint256,enum InterfaceValidator.Status,uint256,uint256,uint256,address)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12767:99:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1015,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1013,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1011,
															"name": "validPercent",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 968,
															"src": "12884:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 1012,
															"name": "validValidatorPercent",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 971,
															"src": "12899:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "12884:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1014,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12923:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "12884:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1039,
												"nodeType": "IfStatement",
												"src": "12881:309:0",
												"trueBody": {
													"id": 1038,
													"nodeType": "Block",
													"src": "12938:252:0",
													"statements": [
														{
															"expression": {
																"id": 1022,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1016,
																	"name": "valReward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 963,
																	"src": "12956:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1021,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1019,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1017,
																			"name": "validatorsStakedCoins",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1004,
																			"src": "12968:21:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 1018,
																			"name": "validValidatorPercent",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 971,
																			"src": "12992:21:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "12968:45:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "31303030303030303030303030303030303030",
																		"id": 1020,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "13016:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1000000000000000000_by_1",
																			"typeString": "int_const 1000000000000000000"
																		},
																		"value": "1000000000000000000"
																	},
																	"src": "12968:67:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "12956:79:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1023,
															"nodeType": "ExpressionStatement",
															"src": "12956:79:0"
														},
														{
															"expression": {
																"id": 1032,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1024,
																	"name": "stakerReward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 965,
																	"src": "13053:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1031,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1029,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"baseExpression": {
																				"id": 1025,
																				"name": "stakerInfo",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 202,
																				"src": "13068:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1027,
																			"indexExpression": {
																				"id": 1026,
																				"name": "_staker",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 960,
																				"src": "13079:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "13068:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 1028,
																			"name": "validPercent",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 968,
																			"src": "13090:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "13068:34:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "31303030303030303030303030303030303030",
																		"id": 1030,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "13105:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1000000000000000000_by_1",
																			"typeString": "int_const 1000000000000000000"
																		},
																		"value": "1000000000000000000"
																	},
																	"src": "13068:56:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "13053:71:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1033,
															"nodeType": "ExpressionStatement",
															"src": "13053:71:0"
														},
														{
															"expression": {
																"components": [
																	{
																		"id": 1034,
																		"name": "valReward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 963,
																		"src": "13150:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1035,
																		"name": "stakerReward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 965,
																		"src": "13161:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1036,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "13149:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																	"typeString": "tuple(uint256,uint256)"
																}
															},
															"functionReturnParameters": 966,
															"id": 1037,
															"nodeType": "Return",
															"src": "13142:32:0"
														}
													]
												}
											},
											{
												"expression": {
													"components": [
														{
															"hexValue": "30",
															"id": 1040,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13207:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "30",
															"id": 1041,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13210:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"id": 1042,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "13206:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_rational_0_by_1_$_t_rational_0_by_1_$",
														"typeString": "tuple(int_const 0,int_const 0)"
													}
												},
												"functionReturnParameters": 966,
												"id": 1043,
												"nodeType": "Return",
												"src": "13199:13:0"
											}
										]
									},
									"functionSelector": "f3883538",
									"id": 1045,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "viewStakeReward",
									"nameLocation": "12299:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 961,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 960,
												"mutability": "mutable",
												"name": "_staker",
												"nameLocation": "12323:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1045,
												"src": "12315:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 959,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12315:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12314:17:0"
									},
									"returnParameters": {
										"id": 966,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 963,
												"mutability": "mutable",
												"name": "valReward",
												"nameLocation": "12360:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1045,
												"src": "12352:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 962,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12352:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 965,
												"mutability": "mutable",
												"name": "stakerReward",
												"nameLocation": "12379:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 1045,
												"src": "12371:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 964,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12371:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12351:41:0"
									},
									"scope": 1194,
									"src": "12290:929:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1056,
										"nodeType": "Block",
										"src": "13304:39:0",
										"statements": [
											{
												"expression": {
													"id": 1054,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1052,
														"name": "MaxStakers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 208,
														"src": "13312:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1053,
														"name": "_MaxStakers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1047,
														"src": "13325:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"src": "13312:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"id": 1055,
												"nodeType": "ExpressionStatement",
												"src": "13312:24:0"
											}
										]
									},
									"functionSelector": "c7907f54",
									"id": 1057,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1050,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1049,
												"name": "onlyOwner",
												"nameLocations": [
													"13290:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 50,
												"src": "13290:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "13290:9:0"
										}
									],
									"name": "updateMaxStakers",
									"nameLocation": "13234:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1048,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1047,
												"mutability": "mutable",
												"name": "_MaxStakers",
												"nameLocation": "13268:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 1057,
												"src": "13261:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1046,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "13261:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13250:30:0"
									},
									"returnParameters": {
										"id": 1051,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13304:0:0"
									},
									"scope": 1194,
									"src": "13225:118:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1075,
										"nodeType": "Block",
										"src": "13443:127:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1067,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1065,
																"name": "_MinimalStakingCoin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1059,
																"src": "13459:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1066,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13481:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13459:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e636f7272656374204d696e696d616c5374616b696e67436f696e",
															"id": 1068,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13484:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1c1c4317381ec0c760e7211168a74acf7dbced02cc52aa86e92af470f9e24fe3",
																"typeString": "literal_string \"Incorrect MinimalStakingCoin\""
															},
															"value": "Incorrect MinimalStakingCoin"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1c1c4317381ec0c760e7211168a74acf7dbced02cc52aa86e92af470f9e24fe3",
																"typeString": "literal_string \"Incorrect MinimalStakingCoin\""
															}
														],
														"id": 1064,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "13451:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1069,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13451:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1070,
												"nodeType": "ExpressionStatement",
												"src": "13451:64:0"
											},
											{
												"expression": {
													"id": 1073,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1071,
														"name": "MinimalStakingCoin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 205,
														"src": "13523:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1072,
														"name": "_MinimalStakingCoin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1059,
														"src": "13544:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13523:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1074,
												"nodeType": "ExpressionStatement",
												"src": "13523:40:0"
											}
										]
									},
									"functionSelector": "f67c4dfd",
									"id": 1076,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1062,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1061,
												"name": "onlyOwner",
												"nameLocations": [
													"13429:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 50,
												"src": "13429:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "13429:9:0"
										}
									],
									"name": "updateMinimalStakingCoin",
									"nameLocation": "13357:24:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1060,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1059,
												"mutability": "mutable",
												"name": "_MinimalStakingCoin",
												"nameLocation": "13390:19:0",
												"nodeType": "VariableDeclaration",
												"scope": 1076,
												"src": "13382:27:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1058,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13382:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13381:38:0"
									},
									"returnParameters": {
										"id": 1063,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13443:0:0"
									},
									"scope": 1194,
									"src": "13348:222:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1089,
										"nodeType": "Block",
										"src": "13658:61:0",
										"statements": [
											{
												"expression": {
													"id": 1087,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1083,
														"name": "stakingLockPeriod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 218,
														"src": "13666:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 1086,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1084,
															"name": "_stakingLockPeriod",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1078,
															"src": "13686:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"hexValue": "3836343030",
															"id": 1085,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13707:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_86400_by_1",
																"typeString": "int_const 86400"
															},
															"value": "86400"
														},
														"src": "13686:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "13666:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 1088,
												"nodeType": "ExpressionStatement",
												"src": "13666:46:0"
											}
										]
									},
									"functionSelector": "ee7cb288",
									"id": 1090,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1081,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1080,
												"name": "onlyOwner",
												"nameLocations": [
													"13644:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 50,
												"src": "13644:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "13644:9:0"
										}
									],
									"name": "updateStakingLockPeriod",
									"nameLocation": "13584:23:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1079,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1078,
												"mutability": "mutable",
												"name": "_stakingLockPeriod",
												"nameLocation": "13615:18:0",
												"nodeType": "VariableDeclaration",
												"scope": 1090,
												"src": "13608:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 1077,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "13608:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13607:27:0"
									},
									"returnParameters": {
										"id": 1082,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13658:0:0"
									},
									"scope": 1194,
									"src": "13575:144:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1108,
										"nodeType": "Block",
										"src": "13808:126:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															},
															"id": 1100,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1098,
																"name": "_penaltyPercentage",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1092,
																"src": "13826:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"hexValue": "3130303030",
																"id": 1099,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13847:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"value": "10000"
															},
															"src": "13826:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "50656e616c74792063616e6e6f742062652031303025",
															"id": 1101,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13854:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_72c7b026e567bb46366a5bd22cdcf2cff2158a77f2b7f6ce1289658b87e6ce64",
																"typeString": "literal_string \"Penalty cannot be 100%\""
															},
															"value": "Penalty cannot be 100%"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_72c7b026e567bb46366a5bd22cdcf2cff2158a77f2b7f6ce1289658b87e6ce64",
																"typeString": "literal_string \"Penalty cannot be 100%\""
															}
														],
														"id": 1097,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "13818:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1102,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13818:61:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1103,
												"nodeType": "ExpressionStatement",
												"src": "13818:61:0"
											},
											{
												"expression": {
													"id": 1106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1104,
														"name": "penaltyPercentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 221,
														"src": "13889:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1105,
														"name": "_penaltyPercentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1092,
														"src": "13909:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "13889:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1107,
												"nodeType": "ExpressionStatement",
												"src": "13889:38:0"
											}
										]
									},
									"functionSelector": "062b6139",
									"id": 1109,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1095,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1094,
												"name": "onlyOwner",
												"nameLocations": [
													"13794:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 50,
												"src": "13794:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "13794:9:0"
										}
									],
									"name": "updatePenaltyPercentage",
									"nameLocation": "13734:23:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1093,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1092,
												"mutability": "mutable",
												"name": "_penaltyPercentage",
												"nameLocation": "13765:18:0",
												"nodeType": "VariableDeclaration",
												"scope": 1109,
												"src": "13758:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 1091,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "13758:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13757:27:0"
									},
									"returnParameters": {
										"id": 1096,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13808:0:0"
									},
									"scope": 1194,
									"src": "13725:209:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1128,
										"nodeType": "Block",
										"src": "14021:76:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1123,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "14076:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_Staking_$1194",
																			"typeString": "contract Staking"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_Staking_$1194",
																			"typeString": "contract Staking"
																		}
																	],
																	"id": 1122,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "14068:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1121,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "14068:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1124,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14068:13:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1125,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "14082:7:0",
															"memberName": "balance",
															"nodeType": "MemberAccess",
															"src": "14068:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 1117,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "14047:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1118,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "14051:6:0",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "14047:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1116,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "14039:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 1115,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "14039:8:0",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 1119,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14039:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 1120,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "14059:8:0",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "14039:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1126,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14039:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1127,
												"nodeType": "ExpressionStatement",
												"src": "14039:51:0"
											}
										]
									},
									"documentation": {
										"id": 1110,
										"nodeType": "StructuredDocumentation",
										"src": "13941:34:0",
										"text": "admin functions"
									},
									"functionSelector": "b0806108",
									"id": 1129,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1113,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1112,
												"name": "onlyOwner",
												"nameLocations": [
													"14012:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 50,
												"src": "14012:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "14012:9:0"
										}
									],
									"name": "rescueCoins",
									"nameLocation": "13989:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1111,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14000:2:0"
									},
									"returnParameters": {
										"id": 1114,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14021:0:0"
									},
									"scope": 1194,
									"src": "13980:117:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1153,
										"nodeType": "Block",
										"src": "14197:100:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1140,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1138,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1133,
															"src": "14207:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1139,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14216:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "14207:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1150,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"baseExpression": {
																"id": 1146,
																"name": "valStakeTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 233,
																"src": "14263:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 1148,
															"indexExpression": {
																"id": 1147,
																"name": "validator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1131,
																"src": "14276:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": true,
															"nodeType": "IndexAccess",
															"src": "14263:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"hexValue": "30",
															"id": 1149,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14289:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "14263:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "14207:83:0",
													"trueExpression": {
														"id": 1145,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"baseExpression": {
																"id": 1141,
																"name": "valStakeTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 233,
																"src": "14220:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 1143,
															"indexExpression": {
																"id": 1142,
																"name": "validator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1131,
																"src": "14233:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": true,
															"nodeType": "IndexAccess",
															"src": "14220:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"id": 1144,
															"name": "lastRewardTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 235,
															"src": "14246:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "14220:40:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1152,
												"nodeType": "ExpressionStatement",
												"src": "14207:83:0"
											}
										]
									},
									"functionSelector": "a9e30ccf",
									"id": 1154,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1136,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1135,
												"name": "onlyValDataContract",
												"nameLocations": [
													"14178:19:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1193,
												"src": "14178:19:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "14178:19:0"
										}
									],
									"name": "mutateValStakeTimeMapping",
									"nameLocation": "14112:25:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1131,
												"mutability": "mutable",
												"name": "validator",
												"nameLocation": "14146:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1154,
												"src": "14138:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1130,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14138:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1133,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14162:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1154,
												"src": "14157:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1132,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "14157:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14137:31:0"
									},
									"returnParameters": {
										"id": 1137,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14197:0:0"
									},
									"scope": 1194,
									"src": "14103:194:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1177,
										"nodeType": "Block",
										"src": "14388:137:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1167,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1162,
																"name": "_validatorData",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1156,
																"src": "14406:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1165,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "14432:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1164,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "14424:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1163,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "14424:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1166,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14424:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "14406:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "696e76616c696420636f6e7472616374",
															"id": 1168,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14436:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_900e2ba09f45ece17ffae1e191643d3c8705b0667ea87acdfa71696a7c7fd0f7",
																"typeString": "literal_string \"invalid contract\""
															},
															"value": "invalid contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_900e2ba09f45ece17ffae1e191643d3c8705b0667ea87acdfa71696a7c7fd0f7",
																"typeString": "literal_string \"invalid contract\""
															}
														],
														"id": 1161,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "14398:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1169,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14398:57:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1170,
												"nodeType": "ExpressionStatement",
												"src": "14398:57:0"
											},
											{
												"expression": {
													"id": 1175,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1171,
														"name": "valDataContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 198,
														"src": "14466:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_InterfaceValidator_$190",
															"typeString": "contract InterfaceValidator"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1173,
																"name": "_validatorData",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1156,
																"src": "14503:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1172,
															"name": "InterfaceValidator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 190,
															"src": "14484:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_InterfaceValidator_$190_$",
																"typeString": "type(contract InterfaceValidator)"
															}
														},
														"id": 1174,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "14484:34:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_InterfaceValidator_$190",
															"typeString": "contract InterfaceValidator"
														}
													},
													"src": "14466:52:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_InterfaceValidator_$190",
														"typeString": "contract InterfaceValidator"
													}
												},
												"id": 1176,
												"nodeType": "ExpressionStatement",
												"src": "14466:52:0"
											}
										]
									},
									"functionSelector": "6285b5a2",
									"id": 1178,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1159,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1158,
												"name": "onlyOwner",
												"nameLocations": [
													"14374:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 50,
												"src": "14374:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "14374:9:0"
										}
									],
									"name": "updateValidatorDataContract",
									"nameLocation": "14313:27:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1156,
												"mutability": "mutable",
												"name": "_validatorData",
												"nameLocation": "14349:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 1178,
												"src": "14341:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1155,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14341:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14340:24:0"
									},
									"returnParameters": {
										"id": 1160,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14388:0:0"
									},
									"scope": 1194,
									"src": "14304:221:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1192,
										"nodeType": "Block",
										"src": "14562:103:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1187,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1181,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "14580:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1182,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "14584:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "14580:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 1185,
																		"name": "valDataContract",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 198,
																		"src": "14602:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_InterfaceValidator_$190",
																			"typeString": "contract InterfaceValidator"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_InterfaceValidator_$190",
																			"typeString": "contract InterfaceValidator"
																		}
																	],
																	"id": 1184,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "14594:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1183,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "14594:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1186,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14594:24:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "14580:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6f6e6c7956616c44617461436f6e7472616374206f6e6c79",
															"id": 1188,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14620:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5cb2cb851500aab97b488d2fab8c38eaf8be2ad6fb9cf8bbf8c57c01c610f95b",
																"typeString": "literal_string \"onlyValDataContract only\""
															},
															"value": "onlyValDataContract only"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5cb2cb851500aab97b488d2fab8c38eaf8be2ad6fb9cf8bbf8c57c01c610f95b",
																"typeString": "literal_string \"onlyValDataContract only\""
															}
														],
														"id": 1180,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "14572:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14572:75:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1190,
												"nodeType": "ExpressionStatement",
												"src": "14572:75:0"
											},
											{
												"id": 1191,
												"nodeType": "PlaceholderStatement",
												"src": "14657:1:0"
											}
										]
									},
									"id": 1193,
									"name": "onlyValDataContract",
									"nameLocation": "14540:19:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1179,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14559:2:0"
									},
									"src": "14531:134:0",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1195,
							"src": "4252:10415:0",
							"usedErrors": []
						}
					],
					"src": "32:14636:0"
				},
				"id": 0
			}
		}
	}
}